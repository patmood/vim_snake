{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20","program":"/Users/patrickmoody/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","stdweb","/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde_json\"","-C","metadata=0d58e383f8612f0a","-C","extra-filename=-0d58e383f8612f0a","--out-dir","/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps","-L","dependency=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps","--extern","discard=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libdiscard-a27a0652813f2193.rmeta","--extern","serde=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libserde-46df4393b32e7716.rmeta","--extern","serde_json=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libserde_json-4d2fb4b2d5f2032f.rmeta","--extern","stdweb_derive=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libstdweb_derive-f54e2a5caef5fdce.dylib","--extern","stdweb_internal_macros=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libstdweb_internal_macros-c0a3ab5d894a1258.dylib","--extern","stdweb_internal_runtime=/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libstdweb_internal_runtime-22c4420cc2b2b894.rmeta","--cap-lints","allow","--cfg","rust_nightly","--error-format=json","--sysroot","/Users/patrickmoody/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/patrickmoody/Dev/vim_snake/target/rls/debug/deps/libstdweb-0d58e383f8612f0a.rmeta"},"prelude":{"crate_id":{"name":"stdweb","disambiguator":[18372121157273507297,10280597770237707962]},"crate_root":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src","external_crates":[{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6674033961376315320,10331192921281911572]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2431891386451792630,3155366419972523799]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7513954643510721900,15627788184861912897]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14712953807303905877,8092113910853701737]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8068155843234151558,7697396882889655521]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1403377026285332125,16559925558665439426]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8066046299161398473,13334826810543591621]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7438966333721069144,17775051544549903386]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6673789936166083782,14149303578971079641]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3994928681933843747,804660728508003778]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[15286868298706928397,7594479918602180116]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1551376671291637279,16658645084185064726]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8845727282302646900,16287158215121720076]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5024274158090352667,1967341515552431022]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[12310277044803449862,14023824523654210811]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":16,"id":{"name":"serde_json","disambiguator":[7468460422524341283,16412615554229708536]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":17,"id":{"name":"itoa","disambiguator":[9918218784829135103,10935097742136059606]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":18,"id":{"name":"ryu","disambiguator":[8646903254387950371,978322256707117388]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":19,"id":{"name":"stdweb_internal_macros","disambiguator":[14848766444052964230,14675451475528510166]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":20,"id":{"name":"stdweb_derive","disambiguator":[1049071723015694614,9045330448655660755]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":21,"id":{"name":"stdweb_internal_runtime","disambiguator":[2485735499393850570,9910546564271780573]}},{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","num":22,"id":{"name":"discard","disambiguator":[7597325783657931608,12774498812493597812]}}],"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":0,"byte_end":17757,"line_start":1,"line_end":614,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":194},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":3898,"byte_end":3908,"line_start":150,"line_end":150,"column_start":33,"column_end":43},"alias_span":null,"name":"async_test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":327844,"byte_end":327857,"line_start":10,"line_end":10,"column_start":23,"column_end":36},"alias_span":null,"name":"CanvasElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9410},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":327880,"byte_end":327892,"line_start":11,"line_end":11,"column_start":22,"column_end":34},"alias_span":null,"name":"ImageElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9589},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":327915,"byte_end":327927,"line_start":12,"line_end":12,"column_start":22,"column_end":34},"alias_span":null,"name":"InputElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9725},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":327953,"byte_end":327968,"line_start":13,"line_end":13,"column_start":25,"column_end":40},"alias_span":null,"name":"TextAreaElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9833},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":327992,"byte_end":328005,"line_start":14,"line_end":14,"column_start":23,"column_end":36},"alias_span":null,"name":"SelectElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9952},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":328029,"byte_end":328042,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OptionElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":10046},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":328068,"byte_end":328083,"line_start":16,"line_end":16,"column_start":25,"column_end":40},"alias_span":null,"name":"TemplateElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":10151},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":328106,"byte_end":328117,"line_start":17,"line_end":17,"column_start":22,"column_end":33},"alias_span":null,"name":"SlotElement","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":10135},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":328119,"byte_end":328134,"line_start":17,"line_end":17,"column_start":35,"column_end":50},"alias_span":null,"name":"SlotContentKind","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":9819},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/mod.rs","byte_start":328160,"byte_end":328177,"line_start":19,"line_end":19,"column_start":23,"column_end":40},"alias_span":null,"name":"UnknownValueError","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4665,"byte_end":4675,"line_start":186,"line_end":186,"column_start":5,"column_end":15},"alias_span":null,"name":"initialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4681,"byte_end":4691,"line_start":187,"line_end":187,"column_start":5,"column_end":15},"alias_span":null,"name":"event_loop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3494},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4725,"byte_end":4734,"line_start":190,"line_end":190,"column_start":5,"column_end":14},"alias_span":null,"name":"Undefined","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3516},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4740,"byte_end":4744,"line_start":191,"line_end":191,"column_start":5,"column_end":9},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3565},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4750,"byte_end":4755,"line_start":192,"line_end":192,"column_start":5,"column_end":10},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3538},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4761,"byte_end":4770,"line_start":193,"line_end":193,"column_start":5,"column_end":14},"alias_span":null,"name":"Reference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4799,"byte_end":4805,"line_start":195,"line_end":195,"column_start":26,"column_end":32},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6933},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4832,"byte_end":4838,"line_start":196,"line_end":196,"column_start":26,"column_end":32},"alias_span":null,"name":"Object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7008},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4864,"byte_end":4869,"line_start":197,"line_end":197,"column_start":25,"column_end":30},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7078},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4896,"byte_end":4902,"line_start":198,"line_end":198,"column_start":26,"column_end":32},"alias_span":null,"name":"Symbol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":850},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4942,"byte_end":4958,"line_start":200,"line_end":200,"column_start":38,"column_end":54},"alias_span":null,"name":"UnsafeTypedArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4984,"byte_end":4987,"line_start":201,"line_end":201,"column_start":25,"column_end":28},"alias_span":null,"name":"Mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5012,"byte_end":5016,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":883},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5048,"byte_end":5058,"line_start":203,"line_end":203,"column_start":31,"column_end":41},"alias_span":null,"name":"InstanceOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5093,"byte_end":5106,"line_start":204,"line_end":204,"column_start":34,"column_end":47},"alias_span":null,"name":"ReferenceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5140,"byte_end":5151,"line_start":205,"line_end":205,"column_start":33,"column_end":44},"alias_span":null,"name":"JsSerialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7213},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5180,"byte_end":5193,"line_start":207,"line_end":207,"column_start":27,"column_end":40},"alias_span":null,"name":"DiscardOnDrop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22653},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5684,"byte_end":5699,"line_start":222,"line_end":222,"column_start":9,"column_end":24},"alias_span":null,"name":"ConversionError","value":"","parent":{"krate":0,"index":3171}},{"kind":"Use","ref_id":{"krate":0,"index":3104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5709,"byte_end":5714,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"alias_span":null,"name":"Serde","value":"","parent":{"krate":0,"index":3171}},{"kind":"Use","ref_id":{"krate":0,"index":7784},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5985,"byte_end":5991,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6001,"byte_end":6007,"line_start":239,"line_end":239,"column_start":9,"column_end":15},"alias_span":null,"name":"window","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":7553},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6055,"byte_end":6063,"line_start":242,"line_end":242,"column_start":9,"column_end":17},"alias_span":null,"name":"Document","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6073,"byte_end":6081,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"alias_span":null,"name":"document","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6127,"byte_end":6138,"line_start":246,"line_end":246,"column_start":9,"column_end":20},"alias_span":null,"name":"set_timeout","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6148,"byte_end":6153,"line_start":247,"line_end":247,"column_start":9,"column_end":14},"alias_span":null,"name":"alert","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6163,"byte_end":6170,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"alias_span":null,"name":"confirm","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":7240},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6220,"byte_end":6238,"line_start":250,"line_end":250,"column_start":43,"column_end":61},"alias_span":null,"name":"CrossOriginSetting","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":7258},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6266,"byte_end":6270,"line_start":251,"line_end":251,"column_start":27,"column_end":31},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6307,"byte_end":6319,"line_start":252,"line_end":252,"column_start":36,"column_end":48},"alias_span":null,"name":"IEventTarget","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":8357},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6321,"byte_end":6332,"line_start":252,"line_end":252,"column_start":50,"column_end":61},"alias_span":null,"name":"EventTarget","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1195},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6334,"byte_end":6353,"line_start":252,"line_end":252,"column_start":63,"column_end":82},"alias_span":null,"name":"EventListenerHandle","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":7774},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6384,"byte_end":6411,"line_start":253,"line_end":253,"column_start":29,"column_end":56},"alias_span":null,"name":"RequestAnimationFrameHandle","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6440,"byte_end":6445,"line_start":254,"line_end":254,"column_start":28,"column_end":33},"alias_span":null,"name":"INode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":8642},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6447,"byte_end":6451,"line_start":254,"line_end":254,"column_start":35,"column_end":39},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":8417},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6453,"byte_end":6462,"line_start":254,"line_end":254,"column_start":41,"column_end":50},"alias_span":null,"name":"CloneKind","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":8729},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6464,"byte_end":6472,"line_start":254,"line_end":254,"column_start":52,"column_end":60},"alias_span":null,"name":"NodeType","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6505,"byte_end":6513,"line_start":255,"line_end":255,"column_start":31,"column_end":39},"alias_span":null,"name":"IElement","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":8977},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6515,"byte_end":6522,"line_start":255,"line_end":255,"column_start":41,"column_end":48},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6564,"byte_end":6580,"line_start":256,"line_end":256,"column_start":40,"column_end":56},"alias_span":null,"name":"DocumentFragment","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10427},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6613,"byte_end":6621,"line_start":257,"line_end":257,"column_start":32,"column_end":40},"alias_span":null,"name":"TextNode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6658,"byte_end":6670,"line_start":258,"line_end":258,"column_start":36,"column_end":48},"alias_span":null,"name":"IHtmlElement","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":9218},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6672,"byte_end":6683,"line_start":258,"line_end":258,"column_start":50,"column_end":61},"alias_span":null,"name":"HtmlElement","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":9090},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6685,"byte_end":6689,"line_start":258,"line_end":258,"column_start":63,"column_end":67},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6730,"byte_end":6745,"line_start":259,"line_end":259,"column_start":39,"column_end":54},"alias_span":null,"name":"IWindowOrWorker","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":2601},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6780,"byte_end":6791,"line_start":260,"line_end":260,"column_start":34,"column_end":45},"alias_span":null,"name":"IParentNode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":2710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6823,"byte_end":6832,"line_start":261,"line_end":261,"column_start":31,"column_end":40},"alias_span":null,"name":"ISlotable","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":2607},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6879,"byte_end":6900,"line_start":262,"line_end":262,"column_start":46,"column_end":67},"alias_span":null,"name":"INonElementParentNode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10275},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6934,"byte_end":6943,"line_start":263,"line_end":263,"column_start":33,"column_end":42},"alias_span":null,"name":"TokenList","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10499},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":6976,"byte_end":6984,"line_start":264,"line_end":264,"column_start":32,"column_end":40},"alias_span":null,"name":"NodeList","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10579},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7018,"byte_end":7027,"line_start":265,"line_end":265,"column_start":33,"column_end":42},"alias_span":null,"name":"StringMap","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10908},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7058,"byte_end":7065,"line_start":266,"line_end":266,"column_start":30,"column_end":37},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10659},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7097,"byte_end":7105,"line_start":267,"line_end":267,"column_start":31,"column_end":39},"alias_span":null,"name":"Location","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7141,"byte_end":7152,"line_start":268,"line_end":268,"column_start":35,"column_end":46},"alias_span":null,"name":"ArrayBuffer","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11680},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7187,"byte_end":7197,"line_start":269,"line_end":269,"column_start":34,"column_end":44},"alias_span":null,"name":"TypedArray","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11083},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7225,"byte_end":7229,"line_start":270,"line_end":270,"column_start":27,"column_end":31},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11229},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7265,"byte_end":7275,"line_start":271,"line_end":271,"column_start":35,"column_end":45},"alias_span":null,"name":"FileReader","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11295},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7277,"byte_end":7293,"line_start":271,"line_end":271,"column_start":47,"column_end":63},"alias_span":null,"name":"FileReaderResult","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11306},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7295,"byte_end":7315,"line_start":271,"line_end":271,"column_start":65,"column_end":85},"alias_span":null,"name":"FileReaderReadyState","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11154},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7349,"byte_end":7357,"line_start":272,"line_end":272,"column_start":32,"column_end":40},"alias_span":null,"name":"FileList","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11979},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7388,"byte_end":7395,"line_start":273,"line_end":273,"column_start":30,"column_end":37},"alias_span":null,"name":"History","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12111},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7430,"byte_end":7439,"line_start":274,"line_end":274,"column_start":34,"column_end":43},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12069},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7441,"byte_end":7456,"line_start":274,"line_end":274,"column_start":45,"column_end":60},"alias_span":null,"name":"SocketCloseCode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12177},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7458,"byte_end":7474,"line_start":274,"line_end":274,"column_start":62,"column_end":78},"alias_span":null,"name":"SocketBinaryType","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12200},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7476,"byte_end":7492,"line_start":274,"line_end":274,"column_start":80,"column_end":96},"alias_span":null,"name":"SocketReadyState","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1948},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7535,"byte_end":7551,"line_start":275,"line_end":275,"column_start":41,"column_end":57},"alias_span":null,"name":"RenderingContext","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12391},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7553,"byte_end":7577,"line_start":275,"line_end":275,"column_start":59,"column_end":83},"alias_span":null,"name":"CanvasRenderingContext2d","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12451},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7579,"byte_end":7593,"line_start":275,"line_end":275,"column_start":85,"column_end":99},"alias_span":null,"name":"CanvasGradient","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12511},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7595,"byte_end":7608,"line_start":275,"line_end":275,"column_start":101,"column_end":114},"alias_span":null,"name":"CanvasPattern","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12757},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7610,"byte_end":7621,"line_start":275,"line_end":275,"column_start":116,"column_end":127},"alias_span":null,"name":"CanvasStyle","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12677},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7623,"byte_end":7641,"line_start":275,"line_end":275,"column_start":129,"column_end":147},"alias_span":null,"name":"CompositeOperation","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12741},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7643,"byte_end":7651,"line_start":275,"line_end":275,"column_start":149,"column_end":157},"alias_span":null,"name":"FillRule","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12571},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7653,"byte_end":7662,"line_start":275,"line_end":275,"column_start":159,"column_end":168},"alias_span":null,"name":"ImageData","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12778},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7664,"byte_end":7671,"line_start":275,"line_end":275,"column_start":170,"column_end":177},"alias_span":null,"name":"LineCap","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12796},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7673,"byte_end":7681,"line_start":275,"line_end":275,"column_start":179,"column_end":187},"alias_span":null,"name":"LineJoin","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7683,"byte_end":7693,"line_start":275,"line_end":275,"column_start":189,"column_end":199},"alias_span":null,"name":"Repetition","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12834},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7695,"byte_end":7704,"line_start":275,"line_end":275,"column_start":201,"column_end":210},"alias_span":null,"name":"TextAlign","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12856},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7706,"byte_end":7718,"line_start":275,"line_end":275,"column_start":212,"column_end":224},"alias_span":null,"name":"TextBaseline","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":12624},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7720,"byte_end":7731,"line_start":275,"line_end":275,"column_start":226,"column_end":237},"alias_span":null,"name":"TextMetrics","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13515},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7774,"byte_end":7790,"line_start":276,"line_end":276,"column_start":41,"column_end":57},"alias_span":null,"name":"MutationObserver","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13615},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7792,"byte_end":7814,"line_start":276,"line_end":276,"column_start":59,"column_end":81},"alias_span":null,"name":"MutationObserverHandle","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13575},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7816,"byte_end":7836,"line_start":276,"line_end":276,"column_start":83,"column_end":103},"alias_span":null,"name":"MutationObserverInit","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13625},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7838,"byte_end":7852,"line_start":276,"line_end":276,"column_start":105,"column_end":119},"alias_span":null,"name":"MutationRecord","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11762},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7894,"byte_end":7908,"line_start":277,"line_end":277,"column_start":40,"column_end":54},"alias_span":null,"name":"XmlHttpRequest","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11828},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7910,"byte_end":7923,"line_start":277,"line_end":277,"column_start":56,"column_end":69},"alias_span":null,"name":"XhrReadyState","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11850},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7925,"byte_end":7940,"line_start":277,"line_end":277,"column_start":71,"column_end":86},"alias_span":null,"name":"XhrResponseType","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":1729},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7970,"byte_end":7975,"line_start":278,"line_end":278,"column_start":28,"column_end":33},"alias_span":null,"name":"IBlob","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":11018},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":7977,"byte_end":7981,"line_start":278,"line_end":278,"column_start":35,"column_end":39},"alias_span":null,"name":"Blob","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":21736},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8021,"byte_end":8035,"line_start":279,"line_end":279,"column_start":38,"column_end":52},"alias_span":null,"name":"HtmlCollection","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8069,"byte_end":8079,"line_start":280,"line_end":280,"column_start":33,"column_end":43},"alias_span":null,"name":"IChildNode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":21907},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8111,"byte_end":8118,"line_start":281,"line_end":281,"column_start":31,"column_end":38},"alias_span":null,"name":"Gamepad","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":21832},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8120,"byte_end":8133,"line_start":281,"line_end":281,"column_start":40,"column_end":53},"alias_span":null,"name":"GamepadButton","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":21816},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8135,"byte_end":8153,"line_start":281,"line_end":281,"column_start":55,"column_end":73},"alias_span":null,"name":"GamepadMappingType","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13836},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8184,"byte_end":8189,"line_start":282,"line_end":282,"column_start":29,"column_end":34},"alias_span":null,"name":"Touch","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":13971},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8191,"byte_end":8200,"line_start":282,"line_end":282,"column_start":36,"column_end":45},"alias_span":null,"name":"TouchType","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":22025},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8234,"byte_end":8243,"line_start":283,"line_end":283,"column_start":32,"column_end":41},"alias_span":null,"name":"Selection","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":22367},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8279,"byte_end":8293,"line_start":284,"line_end":284,"column_start":35,"column_end":49},"alias_span":null,"name":"ShadowRootMode","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":22383},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8295,"byte_end":8305,"line_start":284,"line_end":284,"column_start":51,"column_end":61},"alias_span":null,"name":"ShadowRoot","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10135},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8343,"byte_end":8358,"line_start":285,"line_end":285,"column_start":36,"column_end":51},"alias_span":null,"name":"SlotContentKind","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":22471},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8392,"byte_end":8400,"line_start":286,"line_end":286,"column_start":33,"column_end":41},"alias_span":null,"name":"FormData","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":22531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8402,"byte_end":8415,"line_start":286,"line_end":286,"column_start":43,"column_end":56},"alias_span":null,"name":"FormDataEntry","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":10265},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8456,"byte_end":8469,"line_start":287,"line_end":287,"column_start":39,"column_end":52},"alias_span":null,"name":"TimeoutHandle","value":"","parent":{"krate":0,"index":3175}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8586,"byte_end":8599,"line_start":292,"line_end":292,"column_start":13,"column_end":26},"alias_span":null,"name":"IDomException","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":13987},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8613,"byte_end":8625,"line_start":293,"line_end":293,"column_start":13,"column_end":25},"alias_span":null,"name":"DomException","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14057},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8639,"byte_end":8660,"line_start":294,"line_end":294,"column_start":13,"column_end":34},"alias_span":null,"name":"HierarchyRequestError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14513},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8674,"byte_end":8688,"line_start":295,"line_end":295,"column_start":13,"column_end":27},"alias_span":null,"name":"IndexSizeError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14133},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8702,"byte_end":8720,"line_start":296,"line_end":296,"column_start":13,"column_end":31},"alias_span":null,"name":"InvalidAccessError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14582},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8734,"byte_end":8751,"line_start":297,"line_end":297,"column_start":13,"column_end":30},"alias_span":null,"name":"InvalidStateError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14285},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8765,"byte_end":8778,"line_start":298,"line_end":298,"column_start":13,"column_end":26},"alias_span":null,"name":"NotFoundError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14651},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8792,"byte_end":8809,"line_start":299,"line_end":299,"column_start":13,"column_end":30},"alias_span":null,"name":"NotSupportedError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14361},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8823,"byte_end":8836,"line_start":300,"line_end":300,"column_start":13,"column_end":26},"alias_span":null,"name":"SecurityError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14437},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8850,"byte_end":8861,"line_start":301,"line_end":301,"column_start":13,"column_end":24},"alias_span":null,"name":"SyntaxError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14720},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8875,"byte_end":8896,"line_start":302,"line_end":302,"column_start":13,"column_end":34},"alias_span":null,"name":"InvalidCharacterError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":14858},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8910,"byte_end":8920,"line_start":303,"line_end":303,"column_start":13,"column_end":23},"alias_span":null,"name":"AbortError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8978,"byte_end":8984,"line_start":307,"line_end":307,"column_start":13,"column_end":19},"alias_span":null,"name":"IError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":13704},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8998,"byte_end":9003,"line_start":308,"line_end":308,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":13773},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9017,"byte_end":9026,"line_start":309,"line_end":309,"column_start":13,"column_end":22},"alias_span":null,"name":"TypeError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":12890},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9083,"byte_end":9100,"line_start":312,"line_end":312,"column_start":45,"column_end":62},"alias_span":null,"name":"AddColorStopError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":12911},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9102,"byte_end":9116,"line_start":312,"line_end":312,"column_start":64,"column_end":78},"alias_span":null,"name":"DrawImageError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":12938},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9118,"byte_end":9135,"line_start":312,"line_end":312,"column_start":80,"column_end":97},"alias_span":null,"name":"GetImageDataError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":9819},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9177,"byte_end":9194,"line_start":313,"line_end":313,"column_start":40,"column_end":57},"alias_span":null,"name":"UnknownValueError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":11882},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9238,"byte_end":9261,"line_start":314,"line_end":314,"column_start":43,"column_end":66},"alias_span":null,"name":"XhrSetResponseTypeError","value":"","parent":{"krate":0,"index":3275}},{"kind":"Use","ref_id":{"krate":0,"index":9410},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9383,"byte_end":9395,"line_start":319,"line_end":319,"column_start":40,"column_end":52},"alias_span":null,"name":"ImageElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":9589},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9436,"byte_end":9448,"line_start":320,"line_end":320,"column_start":40,"column_end":52},"alias_span":null,"name":"InputElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":9725},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9489,"byte_end":9504,"line_start":321,"line_end":321,"column_start":40,"column_end":55},"alias_span":null,"name":"TextAreaElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":9296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9545,"byte_end":9558,"line_start":322,"line_end":322,"column_start":40,"column_end":53},"alias_span":null,"name":"CanvasElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":9833},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9599,"byte_end":9612,"line_start":323,"line_end":323,"column_start":40,"column_end":53},"alias_span":null,"name":"SelectElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":9952},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9653,"byte_end":9666,"line_start":324,"line_end":324,"column_start":40,"column_end":53},"alias_span":null,"name":"OptionElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":10046},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9707,"byte_end":9722,"line_start":325,"line_end":325,"column_start":40,"column_end":55},"alias_span":null,"name":"TemplateElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":10151},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9763,"byte_end":9774,"line_start":326,"line_end":326,"column_start":40,"column_end":51},"alias_span":null,"name":"SlotElement","value":"","parent":{"krate":0,"index":3299}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9899,"byte_end":9905,"line_start":332,"line_end":332,"column_start":13,"column_end":19},"alias_span":null,"name":"IEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9919,"byte_end":9927,"line_start":333,"line_end":333,"column_start":13,"column_end":21},"alias_span":null,"name":"IUiEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":1174},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9941,"byte_end":9954,"line_start":334,"line_end":334,"column_start":13,"column_end":26},"alias_span":null,"name":"ConcreteEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":8142},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9969,"byte_end":9980,"line_start":336,"line_end":336,"column_start":13,"column_end":24},"alias_span":null,"name":"UnloadEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":8080},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9994,"byte_end":10011,"line_start":337,"line_end":337,"column_start":13,"column_end":30},"alias_span":null,"name":"BeforeUnloadEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":8204},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10026,"byte_end":10047,"line_start":339,"line_end":339,"column_start":13,"column_end":34},"alias_span":null,"name":"FullscreenChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":8000},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10062,"byte_end":10072,"line_start":341,"line_end":341,"column_start":13,"column_end":23},"alias_span":null,"name":"EventPhase","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10138,"byte_end":10149,"line_start":345,"line_end":345,"column_start":13,"column_end":24},"alias_span":null,"name":"IMouseEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18056},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10163,"byte_end":10173,"line_start":346,"line_end":346,"column_start":13,"column_end":23},"alias_span":null,"name":"ClickEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18136},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10187,"byte_end":10200,"line_start":347,"line_end":347,"column_start":13,"column_end":26},"alias_span":null,"name":"AuxClickEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18216},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10214,"byte_end":10230,"line_start":348,"line_end":348,"column_start":13,"column_end":29},"alias_span":null,"name":"ContextMenuEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10244,"byte_end":10260,"line_start":349,"line_end":349,"column_start":13,"column_end":29},"alias_span":null,"name":"DoubleClickEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18376},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10274,"byte_end":10288,"line_start":350,"line_end":350,"column_start":13,"column_end":27},"alias_span":null,"name":"MouseDownEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18456},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10302,"byte_end":10314,"line_start":351,"line_end":351,"column_start":13,"column_end":25},"alias_span":null,"name":"MouseUpEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18536},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10328,"byte_end":10342,"line_start":352,"line_end":352,"column_start":13,"column_end":27},"alias_span":null,"name":"MouseMoveEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18616},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10356,"byte_end":10370,"line_start":353,"line_end":353,"column_start":13,"column_end":27},"alias_span":null,"name":"MouseOverEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18696},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10384,"byte_end":10397,"line_start":354,"line_end":354,"column_start":13,"column_end":26},"alias_span":null,"name":"MouseOutEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18776},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10411,"byte_end":10426,"line_start":355,"line_end":355,"column_start":13,"column_end":28},"alias_span":null,"name":"MouseEnterEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18856},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10440,"byte_end":10455,"line_start":356,"line_end":356,"column_start":13,"column_end":28},"alias_span":null,"name":"MouseLeaveEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":18936},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10469,"byte_end":10484,"line_start":357,"line_end":357,"column_start":13,"column_end":28},"alias_span":null,"name":"MouseWheelEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19036},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10498,"byte_end":10517,"line_start":358,"line_end":358,"column_start":13,"column_end":32},"alias_span":null,"name":"MouseWheelDeltaMode","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17947},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10531,"byte_end":10542,"line_start":359,"line_end":359,"column_start":13,"column_end":24},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17969},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10556,"byte_end":10573,"line_start":360,"line_end":360,"column_start":13,"column_end":30},"alias_span":null,"name":"MouseButtonsState","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10639,"byte_end":10650,"line_start":364,"line_end":364,"column_start":13,"column_end":24},"alias_span":null,"name":"ITouchEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21137},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10664,"byte_end":10674,"line_start":365,"line_end":365,"column_start":13,"column_end":23},"alias_span":null,"name":"TouchEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21209},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10688,"byte_end":10697,"line_start":366,"line_end":366,"column_start":13,"column_end":22},"alias_span":null,"name":"TouchMove","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21289},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10711,"byte_end":10721,"line_start":367,"line_end":367,"column_start":13,"column_end":23},"alias_span":null,"name":"TouchLeave","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21369},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10735,"byte_end":10745,"line_start":368,"line_end":368,"column_start":13,"column_end":23},"alias_span":null,"name":"TouchEnter","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21449},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10759,"byte_end":10767,"line_start":369,"line_end":369,"column_start":13,"column_end":21},"alias_span":null,"name":"TouchEnd","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21529},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10781,"byte_end":10792,"line_start":370,"line_end":370,"column_start":13,"column_end":24},"alias_span":null,"name":"TouchCancel","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21609},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10806,"byte_end":10816,"line_start":371,"line_end":371,"column_start":13,"column_end":23},"alias_span":null,"name":"TouchStart","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10885,"byte_end":10898,"line_start":375,"line_end":375,"column_start":13,"column_end":26},"alias_span":null,"name":"IPointerEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19182},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10912,"byte_end":10928,"line_start":376,"line_end":376,"column_start":13,"column_end":29},"alias_span":null,"name":"PointerOverEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19268},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10942,"byte_end":10959,"line_start":377,"line_end":377,"column_start":13,"column_end":30},"alias_span":null,"name":"PointerEnterEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":10973,"byte_end":10989,"line_start":378,"line_end":378,"column_start":13,"column_end":29},"alias_span":null,"name":"PointerDownEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19440},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11003,"byte_end":11019,"line_start":379,"line_end":379,"column_start":13,"column_end":29},"alias_span":null,"name":"PointerMoveEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11033,"byte_end":11047,"line_start":380,"line_end":380,"column_start":13,"column_end":27},"alias_span":null,"name":"PointerUpEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19617},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11061,"byte_end":11079,"line_start":381,"line_end":381,"column_start":13,"column_end":31},"alias_span":null,"name":"PointerCancelEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19703},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11093,"byte_end":11108,"line_start":382,"line_end":382,"column_start":13,"column_end":28},"alias_span":null,"name":"PointerOutEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19789},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11122,"byte_end":11139,"line_start":383,"line_end":383,"column_start":13,"column_end":30},"alias_span":null,"name":"PointerLeaveEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19875},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11153,"byte_end":11175,"line_start":384,"line_end":384,"column_start":13,"column_end":35},"alias_span":null,"name":"GotPointerCaptureEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":19961},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11189,"byte_end":11212,"line_start":385,"line_end":385,"column_start":13,"column_end":36},"alias_span":null,"name":"LostPointerCaptureEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20047},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11226,"byte_end":11248,"line_start":386,"line_end":386,"column_start":13,"column_end":35},"alias_span":null,"name":"PointerLockChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20115},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11262,"byte_end":11283,"line_start":387,"line_end":387,"column_start":13,"column_end":34},"alias_span":null,"name":"PointerLockErrorEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2324},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11352,"byte_end":11366,"line_start":391,"line_end":391,"column_start":13,"column_end":27},"alias_span":null,"name":"IKeyboardEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17645},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11380,"byte_end":11393,"line_start":392,"line_end":392,"column_start":13,"column_end":26},"alias_span":null,"name":"KeyPressEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17719},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11407,"byte_end":11419,"line_start":393,"line_end":393,"column_start":13,"column_end":25},"alias_span":null,"name":"KeyDownEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17793},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11433,"byte_end":11443,"line_start":394,"line_end":394,"column_start":13,"column_end":23},"alias_span":null,"name":"KeyUpEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17555},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11458,"byte_end":11474,"line_start":396,"line_end":396,"column_start":13,"column_end":29},"alias_span":null,"name":"KeyboardLocation","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17513},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11488,"byte_end":11499,"line_start":397,"line_end":397,"column_start":13,"column_end":24},"alias_span":null,"name":"ModifierKey","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2495},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11568,"byte_end":11582,"line_start":401,"line_end":401,"column_start":13,"column_end":27},"alias_span":null,"name":"IProgressEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20264},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11596,"byte_end":11609,"line_start":402,"line_end":402,"column_start":13,"column_end":26},"alias_span":null,"name":"ProgressEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20412},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11623,"byte_end":11637,"line_start":403,"line_end":403,"column_start":13,"column_end":27},"alias_span":null,"name":"LoadStartEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20486},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11651,"byte_end":11663,"line_start":404,"line_end":404,"column_start":13,"column_end":25},"alias_span":null,"name":"LoadEndEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20338},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11677,"byte_end":11694,"line_start":405,"line_end":405,"column_start":13,"column_end":30},"alias_span":null,"name":"ProgressLoadEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20560},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11708,"byte_end":11726,"line_start":406,"line_end":406,"column_start":13,"column_end":31},"alias_span":null,"name":"ProgressAbortEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11740,"byte_end":11758,"line_start":407,"line_end":407,"column_start":13,"column_end":31},"alias_span":null,"name":"ProgressErrorEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11825,"byte_end":11838,"line_start":411,"line_end":411,"column_start":13,"column_end":26},"alias_span":null,"name":"IMessageEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20708},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11852,"byte_end":11868,"line_start":412,"line_end":412,"column_start":13,"column_end":29},"alias_span":null,"name":"SocketCloseEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20791},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11882,"byte_end":11898,"line_start":413,"line_end":413,"column_start":13,"column_end":29},"alias_span":null,"name":"SocketErrorEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20859},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11912,"byte_end":11927,"line_start":414,"line_end":414,"column_start":13,"column_end":28},"alias_span":null,"name":"SocketOpenEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20966},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11941,"byte_end":11959,"line_start":415,"line_end":415,"column_start":13,"column_end":31},"alias_span":null,"name":"SocketMessageEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":20927},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":11973,"byte_end":11990,"line_start":416,"line_end":416,"column_start":13,"column_end":30},"alias_span":null,"name":"SocketMessageData","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17312},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12058,"byte_end":12073,"line_start":420,"line_end":420,"column_start":13,"column_end":28},"alias_span":null,"name":"HashChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17390},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12087,"byte_end":12100,"line_start":421,"line_end":421,"column_start":13,"column_end":26},"alias_span":null,"name":"PopStateEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":14996},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12164,"byte_end":12175,"line_start":425,"line_end":425,"column_start":13,"column_end":24},"alias_span":null,"name":"ChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15132},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12189,"byte_end":12206,"line_start":426,"line_end":426,"column_start":13,"column_end":30},"alias_span":null,"name":"ResourceLoadEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15206},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12220,"byte_end":12238,"line_start":427,"line_end":427,"column_start":13,"column_end":31},"alias_span":null,"name":"ResourceAbortEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15280},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12252,"byte_end":12270,"line_start":428,"line_end":428,"column_start":13,"column_end":31},"alias_span":null,"name":"ResourceErrorEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12284,"byte_end":12295,"line_start":429,"line_end":429,"column_start":13,"column_end":24},"alias_span":null,"name":"ResizeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15422},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12309,"byte_end":12320,"line_start":430,"line_end":430,"column_start":13,"column_end":24},"alias_span":null,"name":"ScrollEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15064},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12334,"byte_end":12344,"line_start":431,"line_end":431,"column_start":13,"column_end":23},"alias_span":null,"name":"InputEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15490},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12358,"byte_end":12379,"line_start":432,"line_end":432,"column_start":13,"column_end":34},"alias_span":null,"name":"ReadyStateChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15558},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12393,"byte_end":12404,"line_start":433,"line_end":433,"column_start":13,"column_end":24},"alias_span":null,"name":"SubmitEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15626},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12418,"byte_end":12438,"line_start":434,"line_end":434,"column_start":13,"column_end":33},"alias_span":null,"name":"SelectionChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12504,"byte_end":12515,"line_start":438,"line_end":438,"column_start":13,"column_end":24},"alias_span":null,"name":"IFocusEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16945},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12529,"byte_end":12539,"line_start":439,"line_end":439,"column_start":13,"column_end":23},"alias_span":null,"name":"FocusEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17019},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12553,"byte_end":12562,"line_start":440,"line_end":440,"column_start":13,"column_end":22},"alias_span":null,"name":"BlurEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12630,"byte_end":12643,"line_start":444,"line_end":444,"column_start":13,"column_end":26},"alias_span":null,"name":"IGamepadEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17164},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12657,"byte_end":12678,"line_start":445,"line_end":445,"column_start":13,"column_end":34},"alias_span":null,"name":"GamepadConnectedEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":17238},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12692,"byte_end":12716,"line_start":446,"line_end":446,"column_start":13,"column_end":37},"alias_span":null,"name":"GamepadDisconnectedEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":2193},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12782,"byte_end":12792,"line_start":450,"line_end":450,"column_start":13,"column_end":23},"alias_span":null,"name":"IDragEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15699},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12806,"byte_end":12822,"line_start":451,"line_end":451,"column_start":13,"column_end":29},"alias_span":null,"name":"DragRelatedEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15777},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12836,"byte_end":12845,"line_start":452,"line_end":452,"column_start":13,"column_end":22},"alias_span":null,"name":"DragEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15863},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12859,"byte_end":12873,"line_start":453,"line_end":453,"column_start":13,"column_end":27},"alias_span":null,"name":"DragStartEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16379},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12887,"byte_end":12899,"line_start":454,"line_end":454,"column_start":13,"column_end":25},"alias_span":null,"name":"DragEndEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":15949},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12913,"byte_end":12927,"line_start":455,"line_end":455,"column_start":13,"column_end":27},"alias_span":null,"name":"DragEnterEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16121},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12941,"byte_end":12955,"line_start":456,"line_end":456,"column_start":13,"column_end":27},"alias_span":null,"name":"DragLeaveEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16207},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12969,"byte_end":12982,"line_start":457,"line_end":457,"column_start":13,"column_end":26},"alias_span":null,"name":"DragOverEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16035},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":12996,"byte_end":13009,"line_start":458,"line_end":458,"column_start":13,"column_end":26},"alias_span":null,"name":"DragExitEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16293},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13023,"byte_end":13036,"line_start":459,"line_end":459,"column_start":13,"column_end":26},"alias_span":null,"name":"DragDropEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16465},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13050,"byte_end":13062,"line_start":460,"line_end":460,"column_start":13,"column_end":25},"alias_span":null,"name":"DataTransfer","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16605},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13076,"byte_end":13089,"line_start":461,"line_end":461,"column_start":13,"column_end":26},"alias_span":null,"name":"EffectAllowed","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16585},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13103,"byte_end":13113,"line_start":462,"line_end":462,"column_start":13,"column_end":23},"alias_span":null,"name":"DropEffect","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13127,"byte_end":13147,"line_start":463,"line_end":463,"column_start":13,"column_end":33},"alias_span":null,"name":"DataTransferItemList","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16762},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13161,"byte_end":13177,"line_start":464,"line_end":464,"column_start":13,"column_end":29},"alias_span":null,"name":"DataTransferItem","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":16842},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13191,"byte_end":13211,"line_start":465,"line_end":465,"column_start":13,"column_end":33},"alias_span":null,"name":"DataTransferItemKind","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":21034},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13263,"byte_end":13278,"line_start":468,"line_end":468,"column_start":39,"column_end":54},"alias_span":null,"name":"SlotChangeEvent","value":"","parent":{"krate":0,"index":3308}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13758,"byte_end":13765,"line_start":489,"line_end":489,"column_start":9,"column_end":16},"alias_span":null,"name":"TryFrom","value":"","parent":{"krate":0,"index":3419}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13775,"byte_end":13782,"line_start":490,"line_end":490,"column_start":9,"column_end":16},"alias_span":null,"name":"TryInto","value":"","parent":{"krate":0,"index":3419}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13818,"byte_end":13822,"line_start":493,"line_end":493,"column_start":28,"column_end":32},"alias_span":null,"name":"Void","value":"","parent":{"krate":0,"index":3419}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14090,"byte_end":14102,"line_start":503,"line_end":503,"column_start":9,"column_end":21},"alias_span":null,"name":"IEventTarget","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14112,"byte_end":14117,"line_start":504,"line_end":504,"column_start":9,"column_end":14},"alias_span":null,"name":"INode","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14127,"byte_end":14135,"line_start":505,"line_end":505,"column_start":9,"column_end":17},"alias_span":null,"name":"IElement","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14145,"byte_end":14157,"line_start":506,"line_end":506,"column_start":9,"column_end":21},"alias_span":null,"name":"IHtmlElement","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1729},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14167,"byte_end":14172,"line_start":507,"line_end":507,"column_start":9,"column_end":14},"alias_span":null,"name":"IBlob","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14202,"byte_end":14217,"line_start":510,"line_end":510,"column_start":9,"column_end":24},"alias_span":null,"name":"IWindowOrWorker","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2601},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14227,"byte_end":14238,"line_start":511,"line_end":511,"column_start":9,"column_end":20},"alias_span":null,"name":"IParentNode","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2607},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14248,"byte_end":14269,"line_start":512,"line_end":512,"column_start":9,"column_end":30},"alias_span":null,"name":"INonElementParentNode","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14279,"byte_end":14289,"line_start":513,"line_end":513,"column_start":9,"column_end":19},"alias_span":null,"name":"IChildNode","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14299,"byte_end":14308,"line_start":514,"line_end":514,"column_start":9,"column_end":18},"alias_span":null,"name":"ISlotable","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14378,"byte_end":14391,"line_start":519,"line_end":519,"column_start":9,"column_end":22},"alias_span":null,"name":"IDomException","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14401,"byte_end":14407,"line_start":520,"line_end":520,"column_start":9,"column_end":15},"alias_span":null,"name":"IError","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14476,"byte_end":14482,"line_start":525,"line_end":525,"column_start":9,"column_end":15},"alias_span":null,"name":"IEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14492,"byte_end":14500,"line_start":526,"line_end":526,"column_start":9,"column_end":17},"alias_span":null,"name":"IUiEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14510,"byte_end":14521,"line_start":527,"line_end":527,"column_start":9,"column_end":20},"alias_span":null,"name":"IMouseEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14531,"byte_end":14544,"line_start":528,"line_end":528,"column_start":9,"column_end":22},"alias_span":null,"name":"IPointerEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2324},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14554,"byte_end":14568,"line_start":529,"line_end":529,"column_start":9,"column_end":23},"alias_span":null,"name":"IKeyboardEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2495},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14578,"byte_end":14592,"line_start":530,"line_end":530,"column_start":9,"column_end":23},"alias_span":null,"name":"IProgressEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14602,"byte_end":14615,"line_start":531,"line_end":531,"column_start":9,"column_end":22},"alias_span":null,"name":"IMessageEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14625,"byte_end":14636,"line_start":532,"line_end":532,"column_start":9,"column_end":20},"alias_span":null,"name":"IFocusEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2193},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14646,"byte_end":14656,"line_start":533,"line_end":533,"column_start":9,"column_end":19},"alias_span":null,"name":"IDragEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14666,"byte_end":14677,"line_start":534,"line_end":534,"column_start":9,"column_end":20},"alias_span":null,"name":"ITouchEvent","value":"","parent":{"krate":0,"index":3424}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":4620,"byte_end":4621,"line_start":182,"line_end":182,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15239,"byte_end":15250,"line_start":552,"line_end":552,"column_start":9,"column_end":20},"alias_span":null,"name":"JsSerialize","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15260,"byte_end":15276,"line_start":553,"line_end":553,"column_start":9,"column_end":25},"alias_span":null,"name":"JsSerializeOwned","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":4445},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15286,"byte_end":15301,"line_start":554,"line_end":554,"column_start":9,"column_end":24},"alias_span":null,"name":"SerializedValue","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15350,"byte_end":15361,"line_start":558,"line_end":558,"column_start":9,"column_end":20},"alias_span":null,"name":"IntoNewtype","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":633},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15371,"byte_end":15378,"line_start":559,"line_end":559,"column_start":9,"column_end":16},"alias_span":null,"name":"Newtype","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":2976},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15457,"byte_end":15465,"line_start":564,"line_end":564,"column_start":9,"column_end":17},"alias_span":null,"name":"to_value","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":2978},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15475,"byte_end":15485,"line_start":565,"line_end":565,"column_start":9,"column_end":19},"alias_span":null,"name":"from_value","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":7225},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15529,"byte_end":15546,"line_start":568,"line_end":568,"column_start":36,"column_end":53},"alias_span":null,"name":"ArenaRestorePoint","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":15583,"byte_end":15598,"line_start":569,"line_end":569,"column_start":36,"column_end":51},"alias_span":null,"name":"serialize_value","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":19,"index":201},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":16828,"byte_end":16846,"line_start":586,"line_end":586,"column_start":37,"column_end":55},"alias_span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":16850,"byte_end":16857,"line_start":586,"line_end":586,"column_start":59,"column_end":66},"name":"js_attr","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":19,"index":202},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":16963,"byte_end":16991,"line_start":588,"line_end":588,"column_start":37,"column_end":65},"alias_span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":16995,"byte_end":17012,"line_start":588,"line_end":588,"column_start":69,"column_end":86},"name":"js_no_return_attr","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":19,"index":200},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17118,"byte_end":17140,"line_start":590,"line_end":590,"column_start":37,"column_end":59},"alias_span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17144,"byte_end":17155,"line_start":590,"line_end":590,"column_start":63,"column_end":74},"name":"js_raw_attr","value":"","parent":{"krate":0,"index":3450}},{"kind":"Use","ref_id":{"krate":0,"index":4152},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17739,"byte_end":17754,"line_start":613,"line_end":613,"column_start":29,"column_end":44},"alias_span":null,"name":"ConversionError","value":"","parent":{"krate":0,"index":3450}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":0,"byte_end":17757,"line_start":1,"line_end":614,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":1007},{"krate":0,"index":2763},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3155},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3175},{"krate":0,"index":3419},{"krate":0,"index":3424},{"krate":0,"index":3450}],"decl_id":null,"docs":" The goal of this crate is to provide Rust bindings to the Web APIs and to allow\n a high degree of interoperability between Rust and JavaScript.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, trivial_numeric_casts,\n       unused_import_braces)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":2701,"byte_end":2817,"line_start":106,"line_end":111,"column_start":1,"column_end":3}},{"value":"feature(core_intrinsics)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":2937,"byte_end":2961,"line_start":116,"line_end":116,"column_start":27,"column_end":51}},{"value":"recursion_limit = \"1500\"","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":3019,"byte_end":3045,"line_start":118,"line_end":118,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/initialization.rs","byte_start":36306,"byte_end":36316,"line_start":9,"line_end":9,"column_start":8,"column_end":18},"name":"initialize","qualname":"::webcore::initialization::initialize","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the library.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/initialization.rs","byte_start":36274,"byte_end":36290,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"cold","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/initialization.rs","byte_start":36291,"byte_end":36298,"line_start":8,"line_end":8,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/initialization.rs","byte_start":37930,"byte_end":37940,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"event_loop","qualname":"::webcore::initialization::event_loop","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs Emscripten's event loop.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38627,"byte_end":38636,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Undefined","qualname":"::webcore::value::Undefined","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unit type representing JavaScript's `undefined`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3516},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38777,"byte_end":38781,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Null","qualname":"::webcore::value::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unit type representing JavaScript's `null`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38882,"byte_end":38891,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"Reference","qualname":"::webcore::value::Reference","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type representing a reference to a JavaScript value.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38843,"byte_end":38853,"line_start":28,"line_end":28,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38969,"byte_end":38987,"line_start":35,"line_end":35,"column_start":19,"column_end":37},"name":"from_raw_unchecked","qualname":"<Reference>::from_raw_unchecked","value":"fn (refid: i32) -> Reference","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38941,"byte_end":38950,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39324,"byte_end":39330,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Reference>::as_raw","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39303,"byte_end":39312,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39545,"byte_end":39553,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Reference>::downcast","value":"fn <T> (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this reference into the given type `T`; checks whenever the reference\n is really of type `T` and returns `None` if it's not.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39524,"byte_end":39533,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42477,"byte_end":42486,"line_start":162,"line_end":162,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::webcore::value::Value::Undefined","value":"Value::Undefined","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42492,"byte_end":42496,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Null","qualname":"::webcore::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42502,"byte_end":42506,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Bool","qualname":"::webcore::value::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42520,"byte_end":42526,"line_start":165,"line_end":165,"column_start":5,"column_end":11},"name":"Number","qualname":"::webcore::value::Value::Number","value":"Value::Number(Number)","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42542,"byte_end":42548,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::webcore::value::Value::Symbol","value":"Value::Symbol(Symbol)","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42564,"byte_end":42570,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"String","qualname":"::webcore::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42586,"byte_end":42595,"line_start":168,"line_end":168,"column_start":5,"column_end":14},"name":"Reference","qualname":"::webcore::value::Value::Reference","value":"Value::Reference(Reference)","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42465,"byte_end":42470,"line_start":161,"line_end":161,"column_start":10,"column_end":15},"name":"Value","qualname":"::webcore::value::Value","value":"Value::{Undefined, Null, Bool, Number, Symbol, String, Reference}","parent":null,"children":[{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3579},{"krate":0,"index":3582}],"decl_id":null,"docs":" A type representing a JavaScript value.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42398,"byte_end":42420,"line_start":159,"line_end":159,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42708,"byte_end":42715,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Value>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whenever the Value is of the Null variant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42687,"byte_end":42696,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42926,"byte_end":42935,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"is_symbol","qualname":"<Value>::is_symbol","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whenever the Value is of the Symbol variant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42905,"byte_end":42914,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43156,"byte_end":43168,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"is_reference","qualname":"<Value>::is_reference","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whenever the Value is of the Reference variant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43135,"byte_end":43144,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43394,"byte_end":43403,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"is_object","qualname":"<Value>::is_object","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whenever the Value is a reference to an `Object`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43373,"byte_end":43382,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43668,"byte_end":43676,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whenever the Value is a reference to an `Array`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43647,"byte_end":43656,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43964,"byte_end":43976,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"as_reference","qualname":"<Value>::as_reference","value":"fn (&self) -> Option<&Reference>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the [Reference](struct.Reference.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":43943,"byte_end":43952,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":44248,"byte_end":44257,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_object","qualname":"<Value>::as_object","value":"fn (&self) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the [Object](struct.Object.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":44227,"byte_end":44236,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":44657,"byte_end":44665,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"fn (&self) -> Option<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the [Array](struct.Array.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":44636,"byte_end":44645,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45059,"byte_end":45073,"line_start":259,"line_end":259,"column_start":12,"column_end":26},"name":"into_reference","qualname":"<Value>::into_reference","value":"fn (self) -> Option<Reference>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Reference](struct.Reference.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45038,"byte_end":45047,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45326,"byte_end":45337,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Value>::into_object","value":"fn (self) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Object](struct.Object.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45305,"byte_end":45314,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45593,"byte_end":45603,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"into_array","qualname":"<Value>::into_array","value":"fn (self) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Array](struct.Array.html) inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":45572,"byte_end":45581,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46048,"byte_end":46072,"line_start":289,"line_end":289,"column_start":19,"column_end":43},"name":"into_reference_unchecked","qualname":"<Value>::into_reference_unchecked","value":"fn <T> (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts a [Reference](struct.Reference.html) inside this `Value` into\n the given type `T`; doesn't check whenever the reference is really of type `T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46020,"byte_end":46029,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46345,"byte_end":46356,"line_start":296,"line_end":296,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Value>::into_string","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `String` inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46324,"byte_end":46333,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46587,"byte_end":46593,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrow of the string inside this `Value`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46566,"byte_end":46575,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":4153},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":60369,"byte_end":60381,"line_start":831,"line_end":831,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::webcore::value::ConversionError::TypeMismatch","value":"ConversionError::TypeMismatch { expected, actual }","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":60470,"byte_end":60492,"line_start":835,"line_end":835,"column_start":5,"column_end":27},"name":"NumericConversionError","qualname":"::webcore::value::ConversionError::NumericConversionError","value":"ConversionError::NumericConversionError(number::ConversionError)","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":60525,"byte_end":60545,"line_start":836,"line_end":836,"column_start":5,"column_end":25},"name":"ValueConversionError","qualname":"::webcore::value::ConversionError::ValueConversionError","value":"ConversionError::ValueConversionError(Box<ConversionError>)","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":60577,"byte_end":60583,"line_start":837,"line_end":837,"column_start":5,"column_end":11},"name":"Custom","qualname":"::webcore::value::ConversionError::Custom","value":"ConversionError::Custom(String)","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":60347,"byte_end":60362,"line_start":830,"line_end":830,"column_start":10,"column_end":25},"name":"ConversionError","qualname":"::webcore::value::ConversionError","value":"ConversionError::{TypeMismatch, NumericConversionError, ValueConversionError, Custom}","parent":null,"children":[{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4159},{"krate":0,"index":4162}],"decl_id":null,"docs":" A structure denoting a conversion error encountered when\n converting to or from a `Value`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4288},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80266,"byte_end":80272,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Number","qualname":"::webcore::number::Number","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type representing a JavaScript number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4301},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80356,"byte_end":80366,"line_start":30,"line_end":30,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::webcore::number::ConversionError::OutOfRange","value":"ConversionError::OutOfRange","parent":{"krate":0,"index":4300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4303},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80372,"byte_end":80384,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"NotAnInteger","qualname":"::webcore::number::ConversionError::NotAnInteger","value":"ConversionError::NotAnInteger","parent":{"krate":0,"index":4300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4300},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80334,"byte_end":80349,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"name":"ConversionError","qualname":"::webcore::number::ConversionError","value":"ConversionError::{OutOfRange, NotAnInteger}","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101409,"byte_end":101425,"line_start":60,"line_end":60,"column_start":11,"column_end":27},"name":"JsSerializeOwned","qualname":"::webcore::serialization::JsSerializeOwned","value":"JsSerializeOwned: Sized","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101442,"byte_end":101455,"line_start":61,"line_end":61,"column_start":8,"column_end":21},"name":"into_js_owned","qualname":"::webcore::serialization::JsSerializeOwned::into_js_owned","value":"fn <'a> (value: &'a mut Option<Self>) -> SerializedValue<'a>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":434},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101742,"byte_end":101753,"line_start":68,"line_end":68,"column_start":11,"column_end":22},"name":"JsSerialize","qualname":"::webcore::serialization::JsSerialize","value":"JsSerialize","parent":null,"children":[{"krate":0,"index":435}],"decl_id":null,"docs":" A trait for types which can be serialized through the `js!` macro.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101782,"byte_end":101790,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"_into_js","qualname":"::webcore::serialization::JsSerialize::_into_js","value":"fn <'a> (&'a self) -> SerializedValue<'a>","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101972,"byte_end":101987,"line_start":77,"line_end":77,"column_start":12,"column_end":27},"name":"SerializedValue","qualname":"::webcore::serialization::SerializedValue","value":"SerializedValue {  }","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101924,"byte_end":101934,"line_start":75,"line_end":75,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":112518,"byte_end":112529,"line_start":456,"line_end":456,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<SerializedValue>::deserialize","value":"fn (&self) -> Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":112497,"byte_end":112506,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":122170,"byte_end":122181,"line_start":818,"line_end":818,"column_start":12,"column_end":23},"name":"FunctionTag","qualname":"::webcore::serialization::FunctionTag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4927},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":122212,"byte_end":122226,"line_start":821,"line_end":821,"column_start":12,"column_end":26},"name":"NonFunctionTag","qualname":"::webcore::serialization::NonFunctionTag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":611},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/ffi/emscripten.rs","byte_start":156936,"byte_end":156960,"line_start":21,"line_end":21,"column_start":16,"column_end":40},"name":"emscripten_asm_const_int","qualname":"::webcore::ffi::emscripten::exports::emscripten_asm_const_int","value":"fn (code: *const u8, ...) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":614},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157358,"byte_end":157366,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"CallOnce","qualname":"::webcore::callfn::CallOnce","value":"CallOnce<Args>","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157386,"byte_end":157392,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Output","qualname":"::webcore::callfn::CallOnce::Output","value":"type Output;","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157401,"byte_end":157410,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"call_once","qualname":"::webcore::callfn::CallOnce::call_once","value":"fn (self, args: Args) -> Self::Output","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157455,"byte_end":157478,"line_start":11,"line_end":11,"column_start":8,"column_end":31},"name":"expected_argument_count","qualname":"::webcore::callfn::CallOnce::expected_argument_count","value":"fn () -> usize","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":619},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157504,"byte_end":157511,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"CallMut","qualname":"::webcore::callfn::CallMut","value":"CallMut<Args>: CallOnce<Args>","parent":null,"children":[{"krate":0,"index":621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157547,"byte_end":157555,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::webcore::callfn::CallMut::call_mut","value":"fn (&mut self, args: Args) -> Self::Output","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159668,"byte_end":159675,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Newtype","qualname":"::webcore::newtype::Newtype","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159784,"byte_end":159798,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"unwrap_newtype","qualname":"<Newtype<A, T>>::unwrap_newtype","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159763,"byte_end":159772,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":643},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159863,"byte_end":159874,"line_start":23,"line_end":23,"column_start":11,"column_end":22},"name":"IntoNewtype","qualname":"::webcore::newtype::IntoNewtype","value":"IntoNewtype<A>: Sized","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159896,"byte_end":159908,"line_start":24,"line_end":24,"column_start":8,"column_end":20},"name":"into_newtype","qualname":"::webcore::newtype::IntoNewtype::into_newtype","value":"fn (self) -> Newtype<A, Self>","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161150,"byte_end":161157,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"TryFrom","qualname":"::webcore::try_from::TryFrom","value":"TryFrom<T>: Sized","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"decl_id":null,"docs":" Attempt to construct Self via a conversion.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":681},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161243,"byte_end":161248,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::webcore::try_from::TryFrom::Error","value":"type Error;","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" The type returned in the event of a conversion error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161291,"byte_end":161299,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"try_from","qualname":"::webcore::try_from::TryFrom::try_from","value":"fn (T) -> Result<Self, Self::Error>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":683},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161513,"byte_end":161520,"line_start":15,"line_end":15,"column_start":11,"column_end":18},"name":"TryInto","qualname":"::webcore::try_from::TryInto","value":"TryInto<T>: Sized","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"decl_id":null,"docs":" An attempted conversion that consumes self, which may or may not be expensive.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":685},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161606,"byte_end":161611,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::webcore::try_from::TryInto::Error","value":"type Error;","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" The type returned in the event of a conversion error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161654,"byte_end":161662,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"try_into","qualname":"::webcore::try_from::TryInto::try_into","value":"fn (self) -> Result<T, Self::Error>","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6933},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":162291,"byte_end":162297,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Object","qualname":"::webcore::object::Object","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type representing a JavaScript object.\n","sig":null,"attributes":[{"value":"reference(instance_of = \"Object\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":162243,"byte_end":162279,"line_start":9,"line_end":9,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":162404,"byte_end":162407,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"len","qualname":"<Object>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this particular object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163373,"byte_end":163380,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"to_iter","qualname":"<Object>::to_iter","value":"fn (&self) -> impl ExactSizeIterator<Item = (String, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an iterator over this object's keys and values.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7008},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168294,"byte_end":168299,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Array","qualname":"::webcore::array::Array","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type representing a JavaScript array.\n","sig":null,"attributes":[{"value":"reference(instance_of = \"Array\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168247,"byte_end":168282,"line_start":7,"line_end":7,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168404,"byte_end":168407,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"len","qualname":"<Array>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this particular array.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7078},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171310,"byte_end":171316,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::webcore::symbol::Symbol","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type representing a JavaScript `Symbol`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173407,"byte_end":173423,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"UnsafeTypedArray","qualname":"::webcore::unsafe_typed_array::UnsafeTypedArray","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type for exposing raw Rust slices as `TypedArray`s\n at zero cost without copying.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173939,"byte_end":173942,"line_start":41,"line_end":41,"column_start":19,"column_end":22},"name":"new","qualname":"<UnsafeTypedArray>::new","value":"fn (slice: &'a [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnsafeTypedArray`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173911,"byte_end":173920,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/mutfn.rs","byte_start":174548,"byte_end":174551,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Mut","qualname":"::webcore::mutfn::Mut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for passing `FnMut` callbacks into the `js!` macro.\n \n Just like when passing regular `Fn` callbacks, don't forget\n to `drop()` them on the JavaScript side or else the closure\n will be leaked.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/once.rs","byte_start":175390,"byte_end":175394,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Once","qualname":"::webcore::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for passing `FnOnce` callbacks into the `js!` macro.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":883},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/instance_of.rs","byte_start":175726,"byte_end":175736,"line_start":4,"line_end":4,"column_start":11,"column_end":21},"name":"InstanceOf","qualname":"::webcore::instance_of::InstanceOf","value":"InstanceOf","parent":null,"children":[{"krate":0,"index":884}],"decl_id":null,"docs":" A trait to check whenever a given [Reference](struct.Reference.html) is of a certain type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/instance_of.rs","byte_start":175832,"byte_end":175843,"line_start":6,"line_end":6,"column_start":8,"column_end":19},"name":"instance_of","qualname":"::webcore::instance_of::InstanceOf::instance_of","value":"fn (reference: &Reference) -> bool","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Checks whenever a given [Reference](struct.Reference.html) if of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":893},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176185,"byte_end":176198,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"ReferenceType","qualname":"::webcore::reference_type::ReferenceType","value":"ReferenceType: AsRef<Reference> + InstanceOf + TryFrom<Value> + TryFrom<Reference>","parent":null,"children":[{"krate":0,"index":894}],"decl_id":null,"docs":" A trait for types which wrap a reference to a JavaScript object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176425,"byte_end":176449,"line_start":9,"line_end":9,"column_start":15,"column_end":39},"name":"from_reference_unchecked","qualname":"::webcore::reference_type::ReferenceType::from_reference_unchecked","value":"fn (reference: Reference) -> Self","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Converts a given reference into a concrete reference-like wrapper.\n Doesn't do any type checking; highly unsafe to use!\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7098},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":177394,"byte_end":177404,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"DoneHandle","qualname":"::webcore::promise::DoneHandle","value":"DoneHandle {  }","parent":null,"children":[{"krate":0,"index":7099}],"decl_id":null,"docs":" This is used to cleanup the [`done`](struct.Promise.html#method.done) callback.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7109},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":178169,"byte_end":178176,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"Promise","qualname":"::webcore::promise::Promise","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Promise` object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"reference(instance_of = \"Promise\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":178120,"byte_end":178157,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":180005,"byte_end":180018,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"from_thenable","qualname":"<Promise>::from_thenable","value":"fn (input: &Reference) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" This function should rarely be needed, use [`PromiseFuture`](struct.PromiseFuture.html) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":184779,"byte_end":184783,"line_start":220,"line_end":220,"column_start":12,"column_end":16},"name":"done","qualname":"<Promise>::done","value":"fn <A, B, F> (&self, callback: F) -> DiscardOnDrop<DoneHandle>","parent":null,"children":[],"decl_id":null,"docs":" This method is usually not needed, use [`PromiseFuture`](struct.PromiseFuture.html) instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7184},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":187810,"byte_end":187822,"line_start":308,"line_end":308,"column_start":12,"column_end":24},"name":"TypedPromise","qualname":"::webcore::promise::TypedPromise","value":"","parent":null,"children":[],"decl_id":null,"docs":" A statically typed `Promise`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":188194,"byte_end":188198,"line_start":321,"line_end":321,"column_start":12,"column_end":16},"name":"done","qualname":"<TypedPromise<T, E>>::done","value":"fn <F> (&self, callback: F) -> DiscardOnDrop<DoneHandle>","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed version of [`Promise.done`](struct.Promise.html#method.done).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":188173,"byte_end":188182,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7213},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":189884,"byte_end":189897,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"DiscardOnDrop","qualname":"::webcore::discard::DiscardOnDrop","value":"","parent":null,"children":[],"decl_id":null,"docs":" If you have a value which implements [`Discard`](https://docs.rs/discard/%5E1.0.3/discard/trait.Discard.html), you can use\n [`DiscardOnDrop::new(value)`](struct.DiscardOnDrop.html#method.new) which will wrap the value.\n When the wrapper is dropped it will automatically call [`value.discard()`](https://docs.rs/discard/%5E1.0.3/discard/trait.Discard.html#tymethod.discard).","sig":null,"attributes":[{"value":"must_use =\n  \"\n\n     The DiscardOnDrop is unused, which causes it to be immediately discarded.\n     You probably don't want that to happen.\n\n     How to fix this:\n\n       * Store the DiscardOnDrop in a variable or data structure.\n\n       * Or use the leak() method which will cause it to not be\n         discarded (this will usually leak memory!)\n\n     See the documentation for more details.\n\"","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":189460,"byte_end":189855,"line_start":13,"line_end":26,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190231,"byte_end":190234,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DiscardOnDrop<A>>::new","value":"fn (discarder: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DiscardOnDrop`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190210,"byte_end":190219,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190725,"byte_end":190729,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"leak","qualname":"<DiscardOnDrop<A>>::leak","value":"fn (self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped `discarder`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190704,"byte_end":190713,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":194171,"byte_end":194186,"line_start":54,"line_end":54,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"::webcore::global_arena::serialize_value","value":"fn <'a> (value: Value) -> SerializedValue<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":195882,"byte_end":195899,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"name":"ArenaRestorePoint","qualname":"::webcore::global_arena::ArenaRestorePoint","value":"ArenaRestorePoint {  }","parent":null,"children":[{"krate":0,"index":7226},{"krate":0,"index":7227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":196029,"byte_end":196032,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<ArenaRestorePoint>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":196008,"byte_end":196017,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7232},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198533,"byte_end":198537,"line_start":5,"line_end":5,"column_start":5,"column_end":9},"name":"Some","qualname":"::webcore::optional_arg::OptionalArg::Some","value":"OptionalArg::Some(T)","parent":{"krate":0,"index":7230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7235},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198548,"byte_end":198552,"line_start":6,"line_end":6,"column_start":5,"column_end":9},"name":"None","qualname":"::webcore::optional_arg::OptionalArg::None","value":"OptionalArg::None","parent":{"krate":0,"index":7230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7230},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198510,"byte_end":198521,"line_start":4,"line_end":4,"column_start":10,"column_end":21},"name":"OptionalArg","qualname":"::webcore::optional_arg::OptionalArg","value":"OptionalArg::{Some, None}","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198829,"byte_end":198835,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OptionalArg<T>>::as_ref","value":"fn (&self) -> OptionalArg<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":199820,"byte_end":199824,"line_start":7,"line_end":7,"column_start":10,"column_end":14},"name":"Void","qualname":"::webcore::void::Void","value":"Void::{}","parent":null,"children":[],"decl_id":null,"docs":" An uninhabited type for use in statically impossible cases.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/global.rs","byte_start":201461,"byte_end":201472,"line_start":5,"line_end":5,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"::webapi::global::set_timeout","value":"fn <F> (callback: F, timeout: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An alias for [window.set_timeout](trait.IWindowOrWorker.html#method.set_timeout).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/global.rs","byte_start":201652,"byte_end":201657,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"alert","qualname":"::webapi::global::alert","value":"fn (message: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An alias for [window.alert](struct.Window.html#method.alert).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/global.rs","byte_start":201788,"byte_end":201795,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"confirm","qualname":"::webapi::global::confirm","value":"fn (message: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" An alias for [window.confirm](struct.Window.html#method.confirm).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7241},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/cross_origin_setting.rs","byte_start":202231,"byte_end":202235,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"None","qualname":"::webapi::cross_origin_setting::CrossOriginSetting::None","value":"CrossOriginSetting::None","parent":{"krate":0,"index":7240},"children":[],"decl_id":null,"docs":" CORS is not used for this element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7243},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/cross_origin_setting.rs","byte_start":202321,"byte_end":202330,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Anonymous","qualname":"::webapi::cross_origin_setting::CrossOriginSetting::Anonymous","value":"CrossOriginSetting::Anonymous","parent":{"krate":0,"index":7240},"children":[],"decl_id":null,"docs":" CORS requests for this element will not have the credentials flag set.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7245},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/cross_origin_setting.rs","byte_start":202469,"byte_end":202483,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"UseCredentials","qualname":"::webapi::cross_origin_setting::CrossOriginSetting::UseCredentials","value":"CrossOriginSetting::UseCredentials","parent":{"krate":0,"index":7240},"children":[],"decl_id":null,"docs":" CORS requests for this element will have the credentials flag set;\n this means the request will provide credentials.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7240},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/cross_origin_setting.rs","byte_start":202163,"byte_end":202181,"line_start":7,"line_end":7,"column_start":10,"column_end":28},"name":"CrossOriginSetting","qualname":"::webapi::cross_origin_setting::CrossOriginSetting","value":"CrossOriginSetting::{None, Anonymous, UseCredentials}","parent":null,"children":[{"krate":0,"index":7241},{"krate":0,"index":7243},{"krate":0,"index":7245}],"decl_id":null,"docs":" Represents CORS (Cross Origin Resource Sharing) setting for an HTML element.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7258},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":202834,"byte_end":202838,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Date","qualname":"::webapi::date::Date","value":"","parent":null,"children":[],"decl_id":null,"docs":" [(JavaScript docs)](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date)\n https://www.ecma-international.org/ecma-262/6.0/#sec-date-constructor\n","sig":null,"attributes":[{"value":"reference(instance_of = \"Date\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":202788,"byte_end":202822,"line_start":7,"line_end":7,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":203274,"byte_end":203277,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents a single moment in time.\n Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":204352,"byte_end":204365,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"from_datetime","qualname":"<Date>::from_datetime","value":"fn (year: i32, month: i32, day: i32, hours: i32, minutes: i32, seconds: i32, milliseconds: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents a single moment in time.\n Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.\n \n year is an integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.\n month is an integer value representing the month, beginning with 0 for January to 11 for December\n day is an integer value representing the day of the month (normally from 1 to 31)\n hours an integer value representing the minute segment of a time\n seconds an integer value representing the second segment of a time\n milliseconds an integer value representing the millisecond segment of a time","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":205220,"byte_end":205232,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"from_iso8601","qualname":"<Date>::from_iso8601","value":"fn (date_string: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents a single moment in time.\n Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.\n \n String value representing a date. The string should be in a format recognized by\n the Date.parse() method (IETF-compliant RFC 2822 timestamps and also a version of ISO8601).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":205980,"byte_end":205989,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"from_time","qualname":"<Date>::from_time","value":"fn (now: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents a single moment in time.\n Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.\n \n Integer value representing the number of milliseconds since January 1, 1970, 00:00:00 UTC,\n with leap seconds ignored (Unix Epoch; but consider that most Unix timestamp functions count in seconds).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":206515,"byte_end":206518,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"fn (year: i32, month: i32, day: i32, hours: i32, minutes: i32, seconds: i32, milliseconds: i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Date.UTC() method accepts the same parameters as the longest form of the constructor, and\n returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":207255,"byte_end":207260,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn (date_string: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Date.parse() method parses a string representation of a date, and returns the number of\n milliseconds since January 1, 1970, 00:00:00 UTC or NaN if the string is unrecognized or, in\n some cases, contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":207701,"byte_end":207704,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"fn () -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Date.now() method returns the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":208132,"byte_end":208140,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getDate() method returns the day of the month for the specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":208647,"byte_end":208654,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getDay() method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":209083,"byte_end":209096,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getFullYear() method returns the year of the specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":209528,"byte_end":209537,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getHours() method returns the hour for the specified date, according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":209993,"byte_end":210009,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getMilliseconds() method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":210452,"byte_end":210463,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getMinutes() method returns the minutes in the specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":210975,"byte_end":210984,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getMonth() method returns the month in the specified date according to local time, as a\n zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":211420,"byte_end":211431,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getSeconds() method returns the seconds in the specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":212264,"byte_end":212272,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getTime() method returns the numeric value corresponding to the time for the specified\n date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":212758,"byte_end":212777,"line_start":205,"line_end":205,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getTimezoneOffset() method returns the time zone difference, in minutes, from current locale (host system settings) to UTC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":213254,"byte_end":213266,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDate() method returns the day (date) of the month in the specified date according to\n universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":213748,"byte_end":213759,"line_start":227,"line_end":227,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDay() method returns the day of the week in the specified date according to universal\n time, where 0 represents Sunday.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":214209,"byte_end":214226,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCFullYear() method returns the year in the specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":214673,"byte_end":214686,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCHours() method returns the hours in the specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":215166,"byte_end":215186,"line_start":258,"line_end":258,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMilliseconds() method returns the milliseconds in the specified date according to\n universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":215645,"byte_end":215660,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMinutes() method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":216181,"byte_end":216194,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMonth() returns the month of the specified date according to universal time, as a\n zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":216650,"byte_end":216665,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCSeconds() method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":217116,"byte_end":217124,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"fn (&self, date: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setDate() method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":217580,"byte_end":217593,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"fn (&self, full_year: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFullYear() method sets the full year for a specified date according to local time. Returns new timestamp.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":218166,"byte_end":218175,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"fn (&self, hours: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds\n since January 1, 1970 00:00:00 UTC until the time represented by the updated Date instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":218626,"byte_end":218642,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"fn (&self, milliseconds: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setMilliseconds() method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":219094,"byte_end":219105,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"fn (&self, minutes: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setMinutes() method sets the minutes for a specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":219546,"byte_end":219555,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"fn (&self, month: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setMonth() method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":219986,"byte_end":219997,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"fn (&self, seconds: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setSeconds() method sets the seconds for a specified date according to local time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":220480,"byte_end":220488,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"fn (&self, time: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setTime() method sets the Date object to the time represented by a number of milliseconds since\n January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":220929,"byte_end":220941,"line_start":381,"line_end":381,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"fn (&self, date: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCDate() method sets the day of the month for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":221390,"byte_end":221407,"line_start":391,"line_end":391,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"fn (&self, full_year: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCFullYear() method sets the full year for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":221996,"byte_end":222009,"line_start":402,"line_end":402,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"fn (&self, hours: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number\n of milliseconds since  January 1, 1970 00:00:00 UTC until the time represented by the updated Date instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":222476,"byte_end":222496,"line_start":412,"line_end":412,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"fn (&self, milliseconds: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMilliseconds() method sets the milliseconds for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":222964,"byte_end":222979,"line_start":422,"line_end":422,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"fn (&self, minutes: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMinutes() method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":223424,"byte_end":223437,"line_start":432,"line_end":432,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"fn (&self, month: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMonth() method sets the month for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":223884,"byte_end":223899,"line_start":442,"line_end":442,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"fn (&self, seconds: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUTCSeconds() method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":224381,"byte_end":224395,"line_start":453,"line_end":453,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toDateString() method returns the date portion of a Date object in human readable form in American English.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":224360,"byte_end":224369,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225052,"byte_end":225065,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toISOString() method returns a string in simplified extended ISO format (ISO 8601), which is always 24 or 27\n characters long (YYYY-MM-DDTHH:mm:ss.sssZ or ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero\n UTC offset, as denoted by the suffix \"Z\".","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225031,"byte_end":225040,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225494,"byte_end":225501,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toJSON() method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225473,"byte_end":225482,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225936,"byte_end":225945,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified Date object.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":225915,"byte_end":225924,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":226423,"byte_end":226437,"line_start":499,"line_end":499,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toTimeString() method returns the time portion of a Date object in human readable form in American English.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":226402,"byte_end":226411,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":226884,"byte_end":226897,"line_start":510,"line_end":510,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The toUTCString() method converts a date to a string, using the UTC time zone.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":226863,"byte_end":226872,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":227309,"byte_end":227317,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method returns the primitive value of a Date object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7553},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236719,"byte_end":236727,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Document","qualname":"::webapi::document::Document","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Document` interface represents any web page loaded in the browser and\n serves as an entry point into the web page's content, which is the DOM tree.","sig":null,"attributes":[{"value":"reference(instance_of = \"Document\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236624,"byte_end":236662,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"reference(subclass_of (EventTarget, Node))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236663,"byte_end":236707,"line_start":23,"line_end":23,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7636},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236799,"byte_end":236820,"line_start":28,"line_end":28,"column_start":5,"column_end":26},"name":"InvalidCharacterError","qualname":"::webapi::document::CreateElementNsError::InvalidCharacterError","value":"CreateElementNsError::InvalidCharacterError(InvalidCharacterError)","parent":{"krate":0,"index":7635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7639},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236826,"byte_end":236840,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"NamespaceError","qualname":"::webapi::document::CreateElementNsError::NamespaceError","value":"CreateElementNsError::NamespaceError(NamespaceError)","parent":{"krate":0,"index":7635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236773,"byte_end":236793,"line_start":27,"line_end":27,"column_start":5,"column_end":25},"name":"CreateElementNsError","qualname":"::webapi::document::CreateElementNsError","value":"CreateElementNsError::{InvalidCharacterError, NamespaceError}","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":237136,"byte_end":237144,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"document","qualname":"::webapi::document::document","value":"fn () -> Document","parent":null,"children":[],"decl_id":null,"docs":" A global instance of [Document](struct.Document.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":237584,"byte_end":237608,"line_start":51,"line_end":51,"column_start":12,"column_end":36},"name":"create_document_fragment","qualname":"<Document>::create_document_fragment","value":"fn (&self) -> DocumentFragment","parent":null,"children":[],"decl_id":null,"docs":" In an HTML document, the Document.createDocumentFragment() method creates a\n new empty DocumentFragment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":238208,"byte_end":238222,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"create_element","qualname":"<Document>::create_element","value":"fn (&self, tag: &str) -> Result<Element, InvalidCharacterError>","parent":null,"children":[],"decl_id":null,"docs":" In an HTML document, the Document.createElement() method creates the HTML\n element specified by `tag`, or an HTMLUnknownElement if `tag` isn't\n recognized. In other documents, it creates an element with a null namespace URI.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":238736,"byte_end":238753,"line_start":72,"line_end":72,"column_start":12,"column_end":29},"name":"create_element_ns","qualname":"<Document>::create_element_ns","value":"fn (&self, namespace_uri: &str, tag: &str) -> Result<Element, CreateElementNsError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an element with the specified namespace URI and qualified name.\n To create an element without specifying a namespace URI, use the `createElement` method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":239181,"byte_end":239197,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"create_text_node","qualname":"<Document>::create_text_node","value":"fn (&self, text: &str) -> TextNode","parent":null,"children":[],"decl_id":null,"docs":" Creates a new text node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":239757,"byte_end":239765,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"location","qualname":"<Document>::location","value":"fn (&self) -> Option<Location>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [Location](struct.Location.html) object which contains\n information about the URL of the document and provides methods\n for changing that URL and loading another URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":240228,"byte_end":240232,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"body","qualname":"<Document>::body","value":"fn (&self) -> Option<HtmlElement>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `<body>` or `<frameset>` node of the current document, or null if no such element exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":240727,"byte_end":240731,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"head","qualname":"<Document>::head","value":"fn (&self) -> Option<HtmlElement>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `<head>` element of the current document. If there are more than one `<head>`\n elements, the first one is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":241121,"byte_end":241126,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"title","qualname":"<Document>::title","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Gets the title of the document.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":241456,"byte_end":241465,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Document>::set_title","value":"fn (&self, title: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the document.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":241880,"byte_end":241896,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"document_element","qualname":"<Document>::document_element","value":"fn (&self) -> Option<Element>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Element that is the root element of the document (for example, the `<html>`\n element for HTML documents).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":242328,"byte_end":242348,"line_start":160,"line_end":160,"column_start":12,"column_end":32},"name":"pointer_lock_element","qualname":"<Document>::pointer_lock_element","value":"fn (&self) -> Option<Element>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Element that the pointer is locked to, if it is locked to any","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":242913,"byte_end":242930,"line_start":175,"line_end":175,"column_start":12,"column_end":29},"name":"exit_pointer_lock","qualname":"<Document>::exit_pointer_lock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Exit the pointer lock on the current element","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":243252,"byte_end":243263,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"import_node","qualname":"<Document>::import_node","value":"fn <N> (&self, n: &N, kind: CloneKind) -> Result<Node, NotSupportedError>","parent":null,"children":[],"decl_id":null,"docs":" Import node from another document","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":243827,"byte_end":243845,"line_start":200,"line_end":200,"column_start":12,"column_end":30},"name":"fullscreen_enabled","qualname":"<Document>::fullscreen_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the fullscreen API is enabled","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":244386,"byte_end":244404,"line_start":211,"line_end":211,"column_start":12,"column_end":30},"name":"fullscreen_element","qualname":"<Document>::fullscreen_element","value":"fn (&self) -> Option<Element>","parent":null,"children":[],"decl_id":null,"docs":" Get the current fullscreen element, or None if there is nothing fullscreen","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7774},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247234,"byte_end":247261,"line_start":14,"line_end":14,"column_start":12,"column_end":39},"name":"RequestAnimationFrameHandle","qualname":"::webapi::window::RequestAnimationFrameHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a pending animation frame request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247475,"byte_end":247481,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"cancel","qualname":"<RequestAnimationFrameHandle>::cancel","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cancels an animation frame request.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7784},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248000,"byte_end":248006,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Window","qualname":"::webapi::window::Window","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Window` object represents a window containing a DOM document.","sig":null,"attributes":[{"value":"reference(instance_of = \"Window\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247913,"byte_end":247949,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"reference(subclass_of (EventTarget))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247950,"byte_end":247988,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248237,"byte_end":248243,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"window","qualname":"::webapi::window::window","value":"fn () -> Window","parent":null,"children":[],"decl_id":null,"docs":" A global instance of [Window](struct.Window.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248644,"byte_end":248649,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"alert","qualname":"<Window>::alert","value":"fn (&self, message: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The Window.alert() method displays an alert dialog\n with the optional specified content and an OK button.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":249065,"byte_end":249072,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"confirm","qualname":"<Window>::confirm","value":"fn (&self, message: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Window.confirm() method displays a modal dialog\n with an optional message and two buttons: OK and Cancel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":249855,"byte_end":249868,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"local_storage","qualname":"<Window>::local_storage","value":"fn (&self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" The `local_storage` property allows you to access a local [Storage](struct.Storage.html)\n object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":250943,"byte_end":250958,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"session_storage","qualname":"<Window>::session_storage","value":"fn (&self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" The `session_storage` property allows you to access a session [Storage](struct.Storage.html)\n object for the current origin.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":251518,"byte_end":251526,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"location","qualname":"<Window>::location","value":"fn (&self) -> Option<Location>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [Location](struct.Location.html) object which contains\n information about the URL of the document and provides methods\n for changing that URL and loading another URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":252914,"byte_end":252937,"line_start":138,"line_end":138,"column_start":12,"column_end":35},"name":"request_animation_frame","qualname":"<Window>::request_animation_frame","value":"fn <F> (&self, callback: F) -> RequestAnimationFrameHandle","parent":null,"children":[],"decl_id":null,"docs":" You should call this method whenever you're ready to update your animation onscreen.\n This will request that your animation function be called before the browser performs the next repaint.\n The number of callbacks is usually 60 times per second, but will generally match the display refresh\n rate in most web browsers as per W3C recommendation. request_animation_frame() calls are paused in most browsers\n when running in background tabs or hidden iframes in order to improve performance and battery life.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":253616,"byte_end":253623,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"history","qualname":"<Window>::history","value":"fn (&self) -> History","parent":null,"children":[],"decl_id":null,"docs":" Returns the global [History](struct.History.html) object, which provides methods to\n manipulate the browser history.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":254099,"byte_end":254110,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"inner_width","qualname":"<Window>::inner_width","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width (in pixels) of the browser window viewport including, if rendered,\n the vertical scrollbar.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":254535,"byte_end":254547,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"inner_height","qualname":"<Window>::inner_height","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height (in pixels) of the browser window viewport including, if rendered,\n the horizontal scrollbar.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":255060,"byte_end":255071,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"outer_width","qualname":"<Window>::outer_width","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the outside of the browser window. It represents the width\n of the whole browser window including sidebar (if expanded), window chrome\n and window resizing borders/handles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":255586,"byte_end":255598,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"outer_height","qualname":"<Window>::outer_height","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the outside of the browser window. It represents the height\n of the whole browser window including sidebar (if expanded), window chrome\n and window resizing borders/handles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":256252,"byte_end":256265,"line_start":213,"line_end":213,"column_start":12,"column_end":25},"name":"page_y_offset","qualname":"<Window>::page_y_offset","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The read-only Window property pageYOffset is an alias for scrollY; as such, it returns\n the number of pixels the document is currently scrolled along the vertical axis (that is,\n up or down), with a value of 0.0 indicating that the top edge of the Document is currently\n aligned with the top edge of the window's content area.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":256601,"byte_end":256614,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"page_x_offset","qualname":"<Window>::page_x_offset","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" This is an alias for scrollX.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":256989,"byte_end":257007,"line_start":233,"line_end":233,"column_start":12,"column_end":30},"name":"device_pixel_ratio","qualname":"<Window>::device_pixel_ratio","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The ratio in resolution from physical pixels to CSS pixels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":257457,"byte_end":257470,"line_start":243,"line_end":243,"column_start":12,"column_end":25},"name":"get_selection","qualname":"<Window>::get_selection","value":"fn (&self) -> Option<Selection>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [Selection](struct.Selection.html) object representing the range of text selected\n by the user or the current position of the caret.\n [(Javascript docs)](https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":258436,"byte_end":258442,"line_start":16,"line_end":16,"column_start":11,"column_end":17},"name":"IEvent","qualname":"::webapi::event::IEvent","value":"IEvent: ReferenceType","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173}],"decl_id":null,"docs":" The `IEvent` interface represents any event which takes place in the DOM; some\n are user-generated (such as mouse or keyboard events), while others are\n generated by APIs (such as events that indicate an animation has finished\n running, a video has been paused, and so forth). There are many types of event,\n some of which use other interfaces based on the main `IEvent` interface. `IEvent`\n itself contains the properties and methods which are common to all events.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":258713,"byte_end":258720,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"bubbles","qualname":"::webapi::event::IEvent::bubbles","value":"fn (&self) -> bool","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Indicates whether this event bubbles upward through the DOM.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":258696,"byte_end":258705,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259085,"byte_end":259098,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"cancel_bubble","qualname":"::webapi::event::IEvent::cancel_bubble","value":"fn (&self) -> bool","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" A historical alias to `Event.stopPropagation()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259068,"byte_end":259077,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259582,"byte_end":259599,"line_start":46,"line_end":46,"column_start":8,"column_end":25},"name":"set_cancel_bubble","qualname":"::webapi::event::IEvent::set_cancel_bubble","value":"fn (&self, value: bool) -> ()","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" A historical alias to `Event.stopPropagation()`.\n Setting this to `true` before returning from an event handler will stop propagation\n of the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259565,"byte_end":259574,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259962,"byte_end":259972,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"cancelable","qualname":"::webapi::event::IEvent::cancelable","value":"fn (&self) -> bool","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Indicates whether the event is cancelable.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":259945,"byte_end":259954,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":260364,"byte_end":260378,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"current_target","qualname":"::webapi::event::IEvent::current_target","value":"fn (&self) -> Option<EventTarget>","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" A reference to the currently registered target of this event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":260347,"byte_end":260356,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":260787,"byte_end":260804,"line_start":79,"line_end":79,"column_start":8,"column_end":25},"name":"default_prevented","qualname":"::webapi::event::IEvent::default_prevented","value":"fn (&self) -> bool","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Indicates whether `preventDefault` has been called on this event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":260770,"byte_end":260779,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":261186,"byte_end":261197,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"event_phase","qualname":"::webapi::event::IEvent::event_phase","value":"fn (&self) -> EventPhase","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Indicates which phase of event flow is currently being evaluated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":261764,"byte_end":261790,"line_start":105,"line_end":105,"column_start":8,"column_end":34},"name":"stop_immediate_propagation","qualname":"::webapi::event::IEvent::stop_immediate_propagation","value":"fn (&self) -> ()","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Prevents any further listeners from being called for this event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":261747,"byte_end":261756,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262182,"byte_end":262198,"line_start":116,"line_end":116,"column_start":8,"column_end":24},"name":"stop_propagation","qualname":"::webapi::event::IEvent::stop_propagation","value":"fn (&self) -> ()","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Stops the propagation of this event to descendants in the DOM.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262165,"byte_end":262174,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262582,"byte_end":262588,"line_start":128,"line_end":128,"column_start":8,"column_end":14},"name":"target","qualname":"::webapi::event::IEvent::target","value":"fn (&self) -> Option<EventTarget>","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Returns a reference to the target to which this event was originally registered.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262565,"byte_end":262574,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262976,"byte_end":262986,"line_start":139,"line_end":139,"column_start":8,"column_end":18},"name":"time_stamp","qualname":"::webapi::event::IEvent::time_stamp","value":"fn (&self) -> Option<f64>","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Returns the time in milliseconds at which this event was created.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":262959,"byte_end":262968,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":263261,"byte_end":263271,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"is_trusted","qualname":"::webapi::event::IEvent::is_trusted","value":"fn (&self) -> bool","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Indicates whether the event was generated by a user action.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":263244,"byte_end":263253,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":263748,"byte_end":263758,"line_start":161,"line_end":161,"column_start":8,"column_end":18},"name":"event_type","qualname":"::webapi::event::IEvent::event_type","value":"fn (&self) -> String","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Returns a string containing the type of event. It is set when\n the event is constructed and is the name commonly used to refer\n to the specific event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":263731,"byte_end":263740,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264184,"byte_end":264199,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"prevent_default","qualname":"::webapi::event::IEvent::prevent_default","value":"fn (&self) -> ()","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Cancels the event if it is cancelable, without\n stopping further propagation of the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264167,"byte_end":264176,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8001},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264537,"byte_end":264541,"line_start":185,"line_end":185,"column_start":5,"column_end":9},"name":"None","qualname":"::webapi::event::EventPhase::None","value":"EventPhase::None","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" No event is currently being processed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8003},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264622,"byte_end":264631,"line_start":187,"line_end":187,"column_start":5,"column_end":14},"name":"Capturing","qualname":"::webapi::event::EventPhase::Capturing","value":"EventPhase::Capturing","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" The event is being propagated down through the target's ancestors.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8005},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264691,"byte_end":264699,"line_start":189,"line_end":189,"column_start":5,"column_end":13},"name":"AtTarget","qualname":"::webapi::event::EventPhase::AtTarget","value":"EventPhase::AtTarget","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" The target is currently processing the event.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8007},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264778,"byte_end":264786,"line_start":191,"line_end":191,"column_start":5,"column_end":13},"name":"Bubbling","qualname":"::webapi::event::EventPhase::Bubbling","value":"EventPhase::Bubbling","parent":{"krate":0,"index":8000},"children":[],"decl_id":null,"docs":" The event is propagating back up through the target's ancestors.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8000},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264473,"byte_end":264483,"line_start":183,"line_end":183,"column_start":10,"column_end":20},"name":"EventPhase","qualname":"::webapi::event::EventPhase","value":"EventPhase::{None, Capturing, AtTarget, Bubbling}","parent":null,"children":[{"krate":0,"index":8001},{"krate":0,"index":8003},{"krate":0,"index":8005},{"krate":0,"index":8007}],"decl_id":null,"docs":" Indicates the phase of event flow during event proessing.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264849,"byte_end":264862,"line_start":195,"line_end":195,"column_start":11,"column_end":24},"name":"ConcreteEvent","qualname":"::webapi::event::ConcreteEvent","value":"ConcreteEvent: IEvent","parent":null,"children":[{"krate":0,"index":1175}],"decl_id":null,"docs":" A trait representing a concrete event type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265026,"byte_end":265036,"line_start":199,"line_end":199,"column_start":11,"column_end":21},"name":"EVENT_TYPE","qualname":"::webapi::event::ConcreteEvent::EVENT_TYPE","value":"&'static str","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":" A string representing the event type.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8020},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265381,"byte_end":265386,"line_start":209,"line_end":209,"column_start":12,"column_end":17},"name":"Event","qualname":"::webapi::event::Event","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IEvent](trait.IEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265334,"byte_end":265369,"line_start":208,"line_end":208,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8080},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266024,"byte_end":266041,"line_start":222,"line_end":222,"column_start":12,"column_end":29},"name":"BeforeUnloadEvent","qualname":"::webapi::event::BeforeUnloadEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `BeforeUnload` event fires when the window is about to be unloaded (to close the page or\n follow a link). If the event propagation is cancelled, the browser will present the user with\n a confirmation dialog allowing them to stay on the page or continue.","sig":null,"attributes":[{"value":"reference(instance_of = \"BeforeUnloadEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265928,"byte_end":265975,"line_start":220,"line_end":220,"column_start":1,"column_end":48}},{"value":"reference(event = \"beforeunload\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265976,"byte_end":266012,"line_start":221,"line_end":221,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266524,"byte_end":266535,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"UnloadEvent","qualname":"::webapi::event::UnloadEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Unload` event fires when the window has been unloaded and is no longer visible. This event\n can't be cancelled.","sig":null,"attributes":[{"value":"reference(instance_of = \"UnloadEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266440,"byte_end":266481,"line_start":233,"line_end":233,"column_start":1,"column_end":42}},{"value":"reference(event = \"unload\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266482,"byte_end":266512,"line_start":234,"line_end":234,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8204},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266992,"byte_end":267013,"line_start":246,"line_end":246,"column_start":12,"column_end":33},"name":"FullscreenChangeEvent","qualname":"::webapi::event::FullscreenChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The 'FullscreenChange' event fires when an element enters or exits fullscreen","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266904,"byte_end":266939,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"reference(event = \"fullscreenchange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266940,"byte_end":266980,"line_start":245,"line_end":245,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267280,"byte_end":267288,"line_start":254,"line_end":254,"column_start":11,"column_end":19},"name":"IUiEvent","qualname":"::webapi::event::IUiEvent","value":"IUiEvent: IEvent","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" The `IUiEvent` interface represents simple user interface events.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267551,"byte_end":267557,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"detail","qualname":"::webapi::event::IUiEvent::detail","value":"fn (&self) -> i32","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Provides the current click count for this event, if applicable.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267534,"byte_end":267543,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267906,"byte_end":267910,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"view","qualname":"::webapi::event::IUiEvent::view","value":"fn (&self) -> Option<Window>","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Returns the `WindowProxy` that generated the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267889,"byte_end":267898,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8276},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268404,"byte_end":268411,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"UiEvent","qualname":"::webapi::event::UiEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IUiEvent](trait.IUiEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"UIEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268322,"byte_end":268359,"line_start":284,"line_end":284,"column_start":1,"column_end":38}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268360,"byte_end":268392,"line_start":285,"line_end":285,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":269991,"byte_end":270010,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"EventListenerHandle","qualname":"::webapi::event_target::EventListenerHandle","value":"EventListenerHandle {  }","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"decl_id":null,"docs":" A handle to a particular event listener.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":270718,"byte_end":270724,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"remove","qualname":"<EventListenerHandle>::remove","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the listener from the [IEventTarget](trait.IEventTarget.html) on\n which it was previously registered.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":271213,"byte_end":271225,"line_start":43,"line_end":43,"column_start":11,"column_end":23},"name":"IEventTarget","qualname":"::webapi::event_target::IEventTarget","value":"IEventTarget: ReferenceType","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1207}],"decl_id":null,"docs":" `IEventTarget` is an interface implemented by objects that\n can receive events and may have listeners for them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":271577,"byte_end":271595,"line_start":49,"line_end":49,"column_start":8,"column_end":26},"name":"add_event_listener","qualname":"::webapi::event_target::IEventTarget::add_event_listener","value":"fn <T, F> (&self, listener: F) -> EventListenerHandle","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Adds given event handler to the list of event listeners for\n the specified `EventTarget` on which it's called.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":272392,"byte_end":272406,"line_start":71,"line_end":71,"column_start":8,"column_end":22},"name":"dispatch_event","qualname":"::webapi::event_target::IEventTarget::dispatch_event","value":"fn <T> (&self, event: &T) -> Result<bool, TODO>","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Dispatches an `Event` at this `EventTarget`, invoking the affected event listeners in the\n appropriate order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8357},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":272953,"byte_end":272964,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"EventTarget","qualname":"::webapi::event_target::EventTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IEventTarget](trait.IEventTarget.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"EventTarget\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":272900,"byte_end":272941,"line_start":84,"line_end":84,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8418},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":273737,"byte_end":273744,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Shallow","qualname":"::webapi::node::CloneKind::Shallow","value":"CloneKind::Shallow","parent":{"krate":0,"index":8417},"children":[],"decl_id":null,"docs":" Will not clone the children.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8420},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":273783,"byte_end":273787,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Deep","qualname":"::webapi::node::CloneKind::Deep","value":"CloneKind::Deep","parent":{"krate":0,"index":8417},"children":[],"decl_id":null,"docs":" Will clone the children.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8417},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":273684,"byte_end":273693,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"CloneKind","qualname":"::webapi::node::CloneKind","value":"CloneKind::{Shallow, Deep}","parent":null,"children":[{"krate":0,"index":8418},{"krate":0,"index":8420}],"decl_id":null,"docs":" An enum which determines whenever the DOM [Node](trait.INode.html)'s children will also be cloned or not.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":274002,"byte_end":274007,"line_start":28,"line_end":28,"column_start":11,"column_end":16},"name":"INode","qualname":"::webapi::node::INode","value":"INode: IEventTarget","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"decl_id":null,"docs":" `INode` is an interface from which a number of DOM API object types inherit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":274120,"byte_end":274127,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"as_node","qualname":"::webapi::node::INode::as_node","value":"fn (&self) -> &Node","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Casts a reference to this object into a reference to a [Node](struct.Node.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":274802,"byte_end":274814,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"append_child","qualname":"::webapi::node::INode::append_child","value":"fn <T> (&self, child: &T) -> ()","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Adds a node to the end of the list of children of a specified parent node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":275174,"byte_end":275186,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"remove_child","qualname":"::webapi::node::INode::remove_child","value":"fn <T> (&self, child: &T) -> Result<Node, NotFoundError>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Removes a child node from the DOM.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":275612,"byte_end":275622,"line_start":65,"line_end":65,"column_start":8,"column_end":18},"name":"clone_node","qualname":"::webapi::node::INode::clone_node","value":"fn (&self, kind: CloneKind) -> Result<Self, TODO>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns a duplicate of the node on which this method was called.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":276225,"byte_end":276233,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"contains","qualname":"::webapi::node::INode::contains","value":"fn <T> (&self, node: &T) -> bool","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Checks whenever a given node is a descendant of this one or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":276661,"byte_end":276674,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"insert_before","qualname":"::webapi::node::INode::insert_before","value":"fn <T, U> (&self, new_node: &T, reference_node: &U) -> Result<Node, InsertNodeError>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Inserts the specified node before the reference node as a child of the current node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":277168,"byte_end":277181,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"replace_child","qualname":"::webapi::node::INode::replace_child","value":"fn <T, U> (&self, new_child: &T, old_child: &U) -> Result<Node, InsertNodeError>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Replaces one hild node of the specified node with another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":277652,"byte_end":277663,"line_start":112,"line_end":112,"column_start":8,"column_end":19},"name":"parent_node","qualname":"::webapi::node::INode::parent_node","value":"fn (&self) -> Option<Node>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the parent of this node in the DOM tree.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":278045,"byte_end":278056,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"first_child","qualname":"::webapi::node::INode::first_child","value":"fn (&self) -> Option<Node>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the node's first child in the tree, or `None` if the node is childless.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":278435,"byte_end":278445,"line_start":132,"line_end":132,"column_start":8,"column_end":18},"name":"last_child","qualname":"::webapi::node::INode::last_child","value":"fn (&self) -> Option<Node>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the node's last child in the tree, or `None` if the node is childless.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":278831,"byte_end":278843,"line_start":142,"line_end":142,"column_start":8,"column_end":20},"name":"next_sibling","qualname":"::webapi::node::INode::next_sibling","value":"fn (&self) -> Option<Node>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the node's next sibling in the tree, or `None` if there isn't such a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":279175,"byte_end":279184,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"node_name","qualname":"::webapi::node::INode::node_name","value":"fn (&self) -> String","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the name of the node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":279509,"byte_end":279518,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"node_type","qualname":"::webapi::node::INode::node_type","value":"fn (&self) -> NodeType","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the type of the node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":280278,"byte_end":280288,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"node_value","qualname":"::webapi::node::INode::node_value","value":"fn (&self) -> Option<String>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the value of the node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":280618,"byte_end":280632,"line_start":193,"line_end":193,"column_start":8,"column_end":22},"name":"set_node_value","qualname":"::webapi::node::INode::set_node_value","value":"fn (&self, value: Option<&str>) -> ()","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Sets the value of the node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":280999,"byte_end":281013,"line_start":203,"line_end":203,"column_start":8,"column_end":22},"name":"owner_document","qualname":"::webapi::node::INode::owner_document","value":"fn (&self) -> Option<Document>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the `Document` that this node belongs to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":281469,"byte_end":281483,"line_start":214,"line_end":214,"column_start":8,"column_end":22},"name":"parent_element","qualname":"::webapi::node::INode::parent_element","value":"fn (&self) -> Option<Element>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns an `Element` that is the parent of this node. Returns `null` if the node\n has no parent or the parent is not an `Element`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":281888,"byte_end":281904,"line_start":224,"line_end":224,"column_start":8,"column_end":24},"name":"previous_sibling","qualname":"::webapi::node::INode::previous_sibling","value":"fn (&self) -> Option<Node>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the node's previous sibling in the tree, or `None` if there isn't such a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":282292,"byte_end":282304,"line_start":234,"line_end":234,"column_start":8,"column_end":20},"name":"text_content","qualname":"::webapi::node::INode::text_content","value":"fn (&self) -> Option<String>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" A property which represents the text content of a node and its descendants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":282778,"byte_end":282794,"line_start":246,"line_end":246,"column_start":8,"column_end":24},"name":"set_text_content","qualname":"::webapi::node::INode::set_text_content","value":"fn (&self, text: &str) -> ()","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Sets the text content of this node; calling thil removes all\n of node's children and replaces them with a single text node\n with the given value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":283150,"byte_end":283161,"line_start":256,"line_end":256,"column_start":8,"column_end":19},"name":"child_nodes","qualname":"::webapi::node::INode::child_nodes","value":"fn (&self) -> NodeList","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns a live collection of child nodes of this node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":283532,"byte_end":283540,"line_start":268,"line_end":268,"column_start":8,"column_end":16},"name":"base_uri","qualname":"::webapi::node::INode::base_uri","value":"fn (&self) -> String","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Gets the base URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":283890,"byte_end":283905,"line_start":278,"line_end":278,"column_start":8,"column_end":23},"name":"has_child_nodes","qualname":"::webapi::node::INode::has_child_nodes","value":"fn (&self) -> bool","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns whether this node has children nodes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":284303,"byte_end":284323,"line_start":288,"line_end":288,"column_start":8,"column_end":28},"name":"is_default_namespace","qualname":"::webapi::node::INode::is_default_namespace","value":"fn (&self, namespace: &str) -> bool","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Determines whether the given namespace is the default namespace of this node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":284837,"byte_end":284850,"line_start":300,"line_end":300,"column_start":8,"column_end":21},"name":"is_equal_node","qualname":"::webapi::node::INode::is_equal_node","value":"fn <T> (&self, node: &T) -> bool","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Tests whether this node is equal to another node. Two nodes are equal if\n they have the same type, defining characteristics, matching attributes,\n and so on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":285241,"byte_end":285253,"line_start":310,"line_end":310,"column_start":8,"column_end":20},"name":"is_same_node","qualname":"::webapi::node::INode::is_same_node","value":"fn <T> (&self, node: &T) -> bool","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Test whether two `Node` references are the same.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":285658,"byte_end":285671,"line_start":320,"line_end":320,"column_start":8,"column_end":21},"name":"lookup_prefix","qualname":"::webapi::node::INode::lookup_prefix","value":"fn (&self, namespace: &str) -> Option<String>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the prefix for the given namespace URI, if present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":286075,"byte_end":286095,"line_start":330,"line_end":330,"column_start":8,"column_end":28},"name":"lookup_namespace_uri","qualname":"::webapi::node::INode::lookup_namespace_uri","value":"fn (&self, prefix: &str) -> Option<String>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Returns the namespace URI for the given prefix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":286510,"byte_end":286519,"line_start":340,"line_end":340,"column_start":8,"column_end":17},"name":"normalize","qualname":"::webapi::node::INode::normalize","value":"fn (&self) -> ()","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Merges any adjacent text nodes and removes empty text nodes under this node.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8632},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":286717,"byte_end":286730,"line_start":350,"line_end":350,"column_start":5,"column_end":18},"name":"NotFoundError","qualname":"::webapi::node::InsertNodeError::NotFoundError","value":"InsertNodeError::NotFoundError(NotFoundError)","parent":{"krate":0,"index":8631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":286732,"byte_end":286753,"line_start":350,"line_end":350,"column_start":20,"column_end":41},"name":"HierarchyRequestError","qualname":"::webapi::node::InsertNodeError::HierarchyRequestError","value":"InsertNodeError::HierarchyRequestError(HierarchyRequestError)","parent":{"krate":0,"index":8631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8631},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":286696,"byte_end":286711,"line_start":349,"line_end":349,"column_start":5,"column_end":20},"name":"InsertNodeError","qualname":"::webapi::node::InsertNodeError","value":"InsertNodeError::{NotFoundError, HierarchyRequestError}","parent":null,"children":[{"krate":0,"index":8632},{"krate":0,"index":8635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8642},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287127,"byte_end":287131,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"Node","qualname":"::webapi::node::Node","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [INode](trait.INode.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"Node\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287042,"byte_end":287076,"line_start":359,"line_end":359,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (EventTarget))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287077,"byte_end":287115,"line_start":360,"line_end":360,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287957,"byte_end":287966,"line_start":383,"line_end":383,"column_start":12,"column_end":21},"name":"from_html","qualname":"<Node>::from_html","value":"fn (html: &str) -> Result<Node, SyntaxError>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create the `Node` from raw html. The html string must contain **exactly one**\n root node.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8730},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288692,"byte_end":288699,"line_start":404,"line_end":404,"column_start":5,"column_end":12},"name":"Element","qualname":"::webapi::node::NodeType::Element","value":"NodeType::Element","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" An `Element` such as `<p>` or `<div>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8732},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288756,"byte_end":288760,"line_start":407,"line_end":407,"column_start":5,"column_end":9},"name":"Text","qualname":"::webapi::node::NodeType::Text","value":"NodeType::Text","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" The actual `Text` of `Element` or `Attr`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8734},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288821,"byte_end":288842,"line_start":410,"line_end":410,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::webapi::node::NodeType::ProcessingInstruction","value":"NodeType::ProcessingInstruction","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" A `ProcessingInstruction` of an XML document.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8736},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288875,"byte_end":288882,"line_start":413,"line_end":413,"column_start":5,"column_end":12},"name":"Comment","qualname":"::webapi::node::NodeType::Comment","value":"NodeType::Comment","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" A `Comment` node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8738},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288916,"byte_end":288924,"line_start":416,"line_end":416,"column_start":5,"column_end":13},"name":"Document","qualname":"::webapi::node::NodeType::Document","value":"NodeType::Document","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" A 'Document' node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8740},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288987,"byte_end":288999,"line_start":419,"line_end":419,"column_start":5,"column_end":17},"name":"DocumentType","qualname":"::webapi::node::NodeType::DocumentType","value":"NodeType::DocumentType","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" A 'DocumentType' node such as `<!DOCTYPE html>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8742},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289041,"byte_end":289057,"line_start":422,"line_end":422,"column_start":5,"column_end":21},"name":"DocumentFragment","qualname":"::webapi::node::NodeType::DocumentFragment","value":"NodeType::DocumentFragment","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" A 'DocumentFragment' node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8744},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289151,"byte_end":289160,"line_start":427,"line_end":427,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::webapi::node::NodeType::Attribute","value":"NodeType::Attribute","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8746},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289187,"byte_end":289199,"line_start":430,"line_end":430,"column_start":5,"column_end":17},"name":"CDataSection","qualname":"::webapi::node::NodeType::CDataSection","value":"NodeType::CDataSection","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8748},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289226,"byte_end":289244,"line_start":433,"line_end":433,"column_start":5,"column_end":23},"name":"XmlEntityReference","qualname":"::webapi::node::NodeType::XmlEntityReference","value":"NodeType::XmlEntityReference","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8750},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289271,"byte_end":289280,"line_start":436,"line_end":436,"column_start":5,"column_end":14},"name":"XmlEntity","qualname":"::webapi::node::NodeType::XmlEntity","value":"NodeType::XmlEntity","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8752},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":289307,"byte_end":289318,"line_start":439,"line_end":439,"column_start":5,"column_end":16},"name":"XmlNotation","qualname":"::webapi::node::NodeType::XmlNotation","value":"NodeType::XmlNotation","parent":{"krate":0,"index":8729},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8729},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":288630,"byte_end":288638,"line_start":402,"line_end":402,"column_start":10,"column_end":18},"name":"NodeType","qualname":"::webapi::node::NodeType","value":"NodeType::{Element, Text, ProcessingInstruction, Comment, Document, DocumentType, DocumentFragment, Attribute, CDataSection, XmlEntityReference, XmlEntity, XmlNotation}","parent":null,"children":[{"krate":0,"index":8730},{"krate":0,"index":8732},{"krate":0,"index":8734},{"krate":0,"index":8736},{"krate":0,"index":8738},{"krate":0,"index":8740},{"krate":0,"index":8742},{"krate":0,"index":8744},{"krate":0,"index":8746},{"krate":0,"index":8748},{"krate":0,"index":8750},{"krate":0,"index":8752}],"decl_id":null,"docs":" Determines the type of a `Node`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8776},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303086,"byte_end":303103,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"NotSupportedError","qualname":"::webapi::element::AttachShadowError::NotSupportedError","value":"AttachShadowError::NotSupportedError(NotSupportedError)","parent":{"krate":0,"index":8775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8779},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303105,"byte_end":303122,"line_start":17,"line_end":17,"column_start":24,"column_end":41},"name":"InvalidStateError","qualname":"::webapi::element::AttachShadowError::InvalidStateError","value":"AttachShadowError::InvalidStateError(InvalidStateError)","parent":{"krate":0,"index":8775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8775},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303063,"byte_end":303080,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"AttachShadowError","qualname":"::webapi::element::AttachShadowError","value":"AttachShadowError::{NotSupportedError, InvalidStateError}","parent":null,"children":[{"krate":0,"index":8776},{"krate":0,"index":8779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303440,"byte_end":303448,"line_start":26,"line_end":26,"column_start":11,"column_end":19},"name":"IElement","qualname":"::webapi::element::IElement","value":"IElement: INode + IParentNode + IChildNode + ISlotable","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":" The `IElement` interface represents an object of a [Document](struct.Document.html).\n This interface describes methods and properties common to all\n kinds of elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303828,"byte_end":303841,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"namespace_uri","qualname":"::webapi::element::IElement::namespace_uri","value":"fn (&self) -> Option<String>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The Element.namespaceURI read-only property returns the namespace URI\n of the element, or null if the element is not in a namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":304328,"byte_end":304338,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"class_list","qualname":"::webapi::element::IElement::class_list","value":"fn (&self) -> TokenList","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The Element.classList is a read-only property which returns a live\n [TokenList](struct.TokenList.html) collection of the class attributes\n of the element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":304821,"byte_end":304834,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"has_attribute","qualname":"::webapi::element::IElement::has_attribute","value":"fn (&self, name: &str) -> bool","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The Element.hasAttribute() method returns a Boolean value indicating whether\n the specified element has the specified attribute or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":305370,"byte_end":305383,"line_start":67,"line_end":67,"column_start":8,"column_end":21},"name":"get_attribute","qualname":"::webapi::element::IElement::get_attribute","value":"fn (&self, name: &str) -> Option<String>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Element.getAttribute() returns the value of a specified attribute on the element.\n If the given attribute does not exist, the value returned will either be\n null or \"\" (the empty string);","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":305927,"byte_end":305940,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"set_attribute","qualname":"::webapi::element::IElement::set_attribute","value":"fn (&self, name: &str, value: &str) -> Result<(), InvalidCharacterError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Sets the value of an attribute on the specified element. If the attribute already\n exists, the value is updated; otherwise a new attribute is added with the\n specified name and value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":306412,"byte_end":306422,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"scroll_top","qualname":"::webapi::element::IElement::scroll_top","value":"fn (&self) -> f64","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Gets the the number of pixels that an element's content is scrolled vertically.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":306820,"byte_end":306834,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"set_scroll_top","qualname":"::webapi::element::IElement::set_scroll_top","value":"fn (&self, value: f64) -> ()","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Sets the the number of pixels that an element's content is scrolled vertically.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":307238,"byte_end":307249,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"scroll_left","qualname":"::webapi::element::IElement::scroll_left","value":"fn (&self) -> f64","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Gets the the number of pixels that an element's content is scrolled to the left.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":307651,"byte_end":307666,"line_start":119,"line_end":119,"column_start":8,"column_end":23},"name":"set_scroll_left","qualname":"::webapi::element::IElement::set_scroll_left","value":"fn (&self, value: f64) -> ()","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Sets the the number of pixels that an element's content is scrolled to the left.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":308150,"byte_end":308169,"line_start":130,"line_end":130,"column_start":8,"column_end":27},"name":"get_attribute_names","qualname":"::webapi::element::IElement::get_attribute_names","value":"fn (&self) -> Vec<String>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Element.getAttributeNames() returns the attribute names of the element\n as an Array of strings. If the element has no attributes it returns an empty array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":308573,"byte_end":308589,"line_start":140,"line_end":140,"column_start":8,"column_end":24},"name":"remove_attribute","qualname":"::webapi::element::IElement::remove_attribute","value":"fn (&self, name: &str) -> ()","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Element.removeAttribute removes an attribute from the specified element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":309034,"byte_end":309048,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"has_attributes","qualname":"::webapi::element::IElement::has_attributes","value":"fn (&self) -> bool","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The Element.hasAttributes() method returns Boolean value, indicating if\n the current element has any attributes or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":309537,"byte_end":309544,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"closest","qualname":"::webapi::element::IElement::closest","value":"fn (&self, selectors: &str) -> Result<Option<Element>, SyntaxError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Returns the closest ancestor of the element (or the element itself) which matches the selectors \n given in parameter. If there isn't such an ancestor, it returns\n `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":310007,"byte_end":310026,"line_start":174,"line_end":174,"column_start":8,"column_end":27},"name":"set_pointer_capture","qualname":"::webapi::element::IElement::set_pointer_capture","value":"fn (&self, pointer_id: i32) -> Result<(), InvalidPointerId>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Designates a specific element as the capture target of future pointer events.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":309990,"byte_end":309999,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":310499,"byte_end":310522,"line_start":185,"line_end":185,"column_start":8,"column_end":31},"name":"release_pointer_capture","qualname":"::webapi::element::IElement::release_pointer_capture","value":"fn (&self, pointer_id: i32) -> Result<(), InvalidPointerId>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Releases pointer capture that was previously set for a specific pointer","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":310482,"byte_end":310491,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":310998,"byte_end":311017,"line_start":196,"line_end":196,"column_start":8,"column_end":27},"name":"has_pointer_capture","qualname":"::webapi::element::IElement::has_pointer_capture","value":"fn (&self, pointer_id: i32) -> bool","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Returns a boolean indicating if the element has captured the specified pointer","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":310981,"byte_end":310990,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":311454,"byte_end":311474,"line_start":204,"line_end":204,"column_start":8,"column_end":28},"name":"insert_adjacent_html","qualname":"::webapi::element::IElement::insert_adjacent_html","value":"fn (&self, position: InsertPosition, html: &str) -> Result<(), InsertAdjacentError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Insert nodes from HTML fragment into specified position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":311873,"byte_end":311891,"line_start":213,"line_end":213,"column_start":8,"column_end":26},"name":"insert_html_before","qualname":"::webapi::element::IElement::insert_html_before","value":"fn (&self, html: &str) -> Result<(), InsertAdjacentError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Insert nodes from HTML fragment before element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":312224,"byte_end":312236,"line_start":220,"line_end":220,"column_start":8,"column_end":20},"name":"prepend_html","qualname":"::webapi::element::IElement::prepend_html","value":"fn (&self, html: &str) -> Result<(), InsertAdjacentError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Insert nodes from HTML fragment as the first children of the element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":312567,"byte_end":312578,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"append_html","qualname":"::webapi::element::IElement::append_html","value":"fn (&self, html: &str) -> Result<(), InsertAdjacentError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Insert nodes from HTML fragment as the last children of the element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":312886,"byte_end":312903,"line_start":234,"line_end":234,"column_start":8,"column_end":25},"name":"insert_html_after","qualname":"::webapi::element::IElement::insert_html_after","value":"fn (&self, html: &str) -> Result<(), InsertAdjacentError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Insert nodes from HTML fragment after element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":313329,"byte_end":313333,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"slot","qualname":"::webapi::element::IElement::slot","value":"fn (&self) -> String","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The slot property of the Element interface returns the name of the shadow DOM\n slot the element is inserted in.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":313836,"byte_end":313849,"line_start":254,"line_end":254,"column_start":8,"column_end":21},"name":"attach_shadow","qualname":"::webapi::element::IElement::attach_shadow","value":"fn (&self, mode: ShadowRootMode) -> Result<ShadowRoot, AttachShadowError>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Attach a shadow DOM tree to the specified element and returns a reference to its `ShadowRoot`.\n It returns a shadow root if successfully attached or `None` if the element cannot be attached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":314290,"byte_end":314301,"line_start":264,"line_end":264,"column_start":8,"column_end":19},"name":"shadow_root","qualname":"::webapi::element::IElement::shadow_root","value":"fn (&self) -> Option<ShadowRoot>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Returns the shadow root of the current element or `None`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8977},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315573,"byte_end":315580,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"Element","qualname":"::webapi::element::Element","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IElement](trait.IElement.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"Element\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315479,"byte_end":315516,"line_start":294,"line_end":294,"column_start":1,"column_end":38}},{"value":"reference(subclass_of (EventTarget, Node))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315517,"byte_end":315561,"line_start":295,"line_end":295,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9050},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315951,"byte_end":315962,"line_start":309,"line_end":309,"column_start":5,"column_end":16},"name":"BeforeBegin","qualname":"::webapi::element::InsertPosition::BeforeBegin","value":"InsertPosition::BeforeBegin","parent":{"krate":0,"index":9049},"children":[],"decl_id":null,"docs":" Insert into the parent directly before the reference element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9052},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316022,"byte_end":316032,"line_start":311,"line_end":311,"column_start":5,"column_end":15},"name":"AfterBegin","qualname":"::webapi::element::InsertPosition::AfterBegin","value":"InsertPosition::AfterBegin","parent":{"krate":0,"index":9049},"children":[],"decl_id":null,"docs":" Insert at the start of the reference element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9054},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316090,"byte_end":316099,"line_start":313,"line_end":313,"column_start":5,"column_end":14},"name":"BeforeEnd","qualname":"::webapi::element::InsertPosition::BeforeEnd","value":"InsertPosition::BeforeEnd","parent":{"krate":0,"index":9049},"children":[],"decl_id":null,"docs":" Insert at the end of the reference element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9056},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316174,"byte_end":316182,"line_start":315,"line_end":315,"column_start":5,"column_end":13},"name":"AfterEnd","qualname":"::webapi::element::InsertPosition::AfterEnd","value":"InsertPosition::AfterEnd","parent":{"krate":0,"index":9049},"children":[],"decl_id":null,"docs":" Insert into the parent directly after the reference element.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9049},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315860,"byte_end":315874,"line_start":307,"line_end":307,"column_start":10,"column_end":24},"name":"InsertPosition","qualname":"::webapi::element::InsertPosition","value":"InsertPosition::{BeforeBegin, AfterBegin, BeforeEnd, AfterEnd}","parent":null,"children":[{"krate":0,"index":9050},{"krate":0,"index":9052},{"krate":0,"index":9054},{"krate":0,"index":9056}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9080},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316296,"byte_end":316322,"line_start":321,"line_end":321,"column_start":5,"column_end":31},"name":"NoModificationAllowedError","qualname":"::webapi::element::InsertAdjacentError::NoModificationAllowedError","value":"InsertAdjacentError::NoModificationAllowedError(NoModificationAllowedError)","parent":{"krate":0,"index":9079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9083},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316324,"byte_end":316335,"line_start":321,"line_end":321,"column_start":33,"column_end":44},"name":"SyntaxError","qualname":"::webapi::element::InsertAdjacentError::SyntaxError","value":"InsertAdjacentError::SyntaxError(SyntaxError)","parent":{"krate":0,"index":9079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9079},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316271,"byte_end":316290,"line_start":320,"line_end":320,"column_start":5,"column_end":24},"name":"InsertAdjacentError","qualname":"::webapi::element::InsertAdjacentError","value":"InsertAdjacentError::{NoModificationAllowedError, SyntaxError}","parent":null,"children":[{"krate":0,"index":9080},{"krate":0,"index":9083}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9090},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320065,"byte_end":320069,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Rect","qualname":"::webapi::html_element::Rect","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a rectangle.\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect)\n","sig":null,"attributes":[{"value":"reference(instance_of = \"DOMRect\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320016,"byte_end":320053,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320321,"byte_end":320326,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"get_x","qualname":"<Rect>::get_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Represents the x coordinate of the DOMRect's origin\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/x)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320654,"byte_end":320659,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"get_y","qualname":"<Rect>::get_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Represents the y coordinate of the DOMRect's origin.\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/y)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320979,"byte_end":320988,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_width","qualname":"<Rect>::get_width","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Represents the width of the DOMRect.\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/width)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":321315,"byte_end":321325,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"get_height","qualname":"<Rect>::get_height","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Represents the height of the DOMRect.\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/height)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":321730,"byte_end":321737,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_top","qualname":"<Rect>::get_top","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the top coordinate value of the DOMRect. (Has the same value as y, or y + height if height is negative.)\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/top)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":322143,"byte_end":322152,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"get_right","qualname":"<Rect>::get_right","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the right coordinate value of the DOMRect. (Has the same value as x + width, or x if width is negative.)\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/right)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":322565,"byte_end":322575,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"get_bottom","qualname":"<Rect>::get_bottom","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom coordinate value of the DOMRect. (Has the same value as y + height, or y if height is negative.)\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/bottom)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":322981,"byte_end":322989,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"get_left","qualname":"<Rect>::get_left","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the left coordinate value of the DOMRect. (Has the same value as x, or x + width if width is negative.)\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/left)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":323304,"byte_end":323316,"line_start":94,"line_end":94,"column_start":11,"column_end":23},"name":"IHtmlElement","qualname":"::webapi::html_element::IHtmlElement","value":"IHtmlElement: IElement","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365}],"decl_id":null,"docs":" The `IHtmlElement` interface represents any HTML element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":323574,"byte_end":323579,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"focus","qualname":"::webapi::html_element::IHtmlElement::focus","value":"fn (&self) -> ()","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Sets focus on the specified element, if it can be focused.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":323906,"byte_end":323910,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"blur","qualname":"::webapi::html_element::IHtmlElement::blur","value":"fn (&self) -> ()","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Removes keyboard focus from the current element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":324341,"byte_end":324348,"line_start":120,"line_end":120,"column_start":8,"column_end":15},"name":"dataset","qualname":"::webapi::html_element::IHtmlElement::dataset","value":"fn (&self) -> StringMap","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Allows access, both in reading and writing, to all of the custom data attributes (data-*)\n set on the element, either in HTML or in the DOM.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":324806,"byte_end":324830,"line_start":131,"line_end":131,"column_start":8,"column_end":32},"name":"get_bounding_client_rect","qualname":"::webapi::html_element::IHtmlElement::get_bounding_client_rect","value":"fn (&self) -> Rect","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Returns the size of an element and its position relative to the viewport.\n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":325318,"byte_end":325330,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"offset_width","qualname":"::webapi::html_element::IHtmlElement::offset_width","value":"fn (&self) -> i32","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Returns the layout width of an element. Typically, an element's offsetWidth is a\n measurement which includes the element borders, the element horizontal padding, the\n element vertical scrollbar (if present, if rendered) and the element CSS width.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":325641,"byte_end":325654,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"offset_height","qualname":"::webapi::html_element::IHtmlElement::offset_height","value":"fn (&self) -> i32","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Returns the height of the element including vertical padding and borders, as an\n integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326396,"byte_end":326406,"line_start":165,"line_end":165,"column_start":8,"column_end":18},"name":"inner_text","qualname":"::webapi::html_element::IHtmlElement::inner_text","value":"fn (&self) -> String","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" A property which represents the \"rendered\" text content of a node and its descendants.\n It approximates the text the user would get if they highlighted the contents of the element\n with the cursor and then copied to the clipboard.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9218},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326893,"byte_end":326904,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"HtmlElement","qualname":"::webapi::html_element::HtmlElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IHtmlElement](trait.IHtmlElement.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326786,"byte_end":326827,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"reference(subclass_of (EventTarget, Node, Element))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326828,"byte_end":326881,"line_start":178,"line_end":178,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":9296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329013,"byte_end":329026,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"CanvasElement","qualname":"::webapi::html_elements::canvas::CanvasElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<canvas>` element provides an empty graphic zone on which specific JavaScript APIs\n can draw (such as Canvas 2D or WebGL).","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLCanvasElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":328887,"byte_end":328934,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":328935,"byte_end":329001,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329669,"byte_end":329675,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"height","qualname":"<CanvasElement>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a positive integer reflecting the height HTML attribute of the <canvas> element\n interpreted in CSS pixels. When the attribute is not specified, or if it is set to an\n invalid value, like a negative, the default value of 150 is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":330237,"byte_end":330247,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"set_height","qualname":"<CanvasElement>::set_height","value":"fn (&self, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a positive integer reflecting the height HTML attribute of the <canvas> element\n interpreted in CSS pixels. When the attribute is not specified, or if it is set to an\n invalid value, like a negative, the default value of 150 is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":330811,"byte_end":330816,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"width","qualname":"<CanvasElement>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a positive integer reflecting the width HTML attribute of the <canvas> element\n interpreted in CSS pixels. When the attribute is not specified, or if it is set to an\n invalid value, like a negative, the default value of 300 is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":331374,"byte_end":331383,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"set_width","qualname":"<CanvasElement>::set_width","value":"fn (&self, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a positive integer reflecting the width HTML attribute of the <canvas> element\n interpreted in CSS pixels. When the attribute is not specified, or if it is set to an\n invalid value, like a negative, the default value of 300 is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":331794,"byte_end":331805,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"get_context","qualname":"<CanvasElement>::get_context","value":"fn <T> (&self) -> Result<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a drawing context on the canvas, or None if the context identifier is not supported.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":332289,"byte_end":332300,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"to_data_url","qualname":"<CanvasElement>::to_data_url","value":"fn (&self, mime_type: Option<&str>, quality: Option<f64>) -> Result<String, TODO>","parent":null,"children":[],"decl_id":null,"docs":" Returns a data URI containing a representation of the image in the format specified by the\n type parameter (defaults to PNG). The returned image is in a resolution of 96 dpi.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":332881,"byte_end":332888,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"to_blob","qualname":"<CanvasElement>::to_blob","value":"fn <F> (&self, f: F, mime_type: Option<&str>, quality: Option<f64>) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Blob object representing the image contained in the canvas; this file may be\n cached on the disk or stored in memory at the discretion of the user agent.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9410},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333868,"byte_end":333880,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"ImageElement","qualname":"::webapi::html_elements::image::ImageElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML image element is used to manipulate the layout and presentation of\n `<img>` elements.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLImageElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333743,"byte_end":333789,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333790,"byte_end":333856,"line_start":16,"line_end":16,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334280,"byte_end":334283,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageElement>::new","value":"fn () -> ImageElement","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageElement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334641,"byte_end":334650,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"with_size","qualname":"<ImageElement>::with_size","value":"fn (width: u32, height: u32) -> ImageElement","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageElement with the given width and height.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":335084,"byte_end":335087,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"alt","qualname":"<ImageElement>::alt","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the HTML `alt` attribute, representing the fallback context for the image.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":335063,"byte_end":335072,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":335463,"byte_end":335470,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"set_alt","qualname":"<ImageElement>::set_alt","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the HTML `alt` attribute, representing the fallback context for the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":335923,"byte_end":335931,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"complete","qualname":"<ImageElement>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the browser has finished fetching the image, whether\n successful or not. It also return true if the image has no src value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":336318,"byte_end":336330,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"cross_origin","qualname":"<ImageElement>::cross_origin","value":"fn (&self) -> CrossOriginSetting","parent":null,"children":[],"decl_id":null,"docs":" Returns the Cross-Origin Resource Sharing (CORS) setting for the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":337034,"byte_end":337050,"line_start":96,"line_end":96,"column_start":12,"column_end":28},"name":"set_cross_origin","qualname":"<ImageElement>::set_cross_origin","value":"fn (&self, value: CrossOriginSetting) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the Cross-Origin Resource Sharing (CORS) setting for the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":337697,"byte_end":337703,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageElement>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the the rendered height of the image in CSS pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":338062,"byte_end":338072,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"set_height","qualname":"<ImageElement>::set_height","value":"fn (&self, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the the rendered height of the image in CSS pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":338438,"byte_end":338444,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"is_map","qualname":"<ImageElement>::is_map","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the image is part of a server-side image map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":338802,"byte_end":338812,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"set_is_map","qualname":"<ImageElement>::set_is_map","value":"fn (&self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the image is part of a server-side image map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":339207,"byte_end":339221,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"natural_height","qualname":"<ImageElement>::natural_height","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the intrinsic height of the image in CSS pixels, if it is available.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":339703,"byte_end":339716,"line_start":165,"line_end":165,"column_start":12,"column_end":25},"name":"natural_width","qualname":"<ImageElement>::natural_width","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the intrinsic width of the image in CSS pixels, if it is available.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":340162,"byte_end":340165,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"src","qualname":"<ImageElement>::src","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the full URL of the image, including the base URI.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":340517,"byte_end":340524,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"set_src","qualname":"<ImageElement>::set_src","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the full URL of the image, including the base URI.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":340906,"byte_end":340913,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"use_map","qualname":"<ImageElement>::use_map","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the `usemap` HTML attribute, containing a partial URL of a map element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":341294,"byte_end":341305,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"set_use_map","qualname":"<ImageElement>::set_use_map","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `usemap` HTML attribute, containing a partial URL of a map element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":341664,"byte_end":341669,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageElement>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the rendered width of the image in CSS pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":342020,"byte_end":342029,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"set_width","qualname":"<ImageElement>::set_width","value":"fn (&self, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the rendered width of the image in CSS pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9589},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345072,"byte_end":345084,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"InputElement","qualname":"::webapi::html_elements::input::InputElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML input element is used to create interactive controls\n for web-based forms in order to accept data from the user.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLInputElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":344947,"byte_end":344993,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":344994,"byte_end":345060,"line_start":16,"line_end":16,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345483,"byte_end":345492,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<InputElement>::raw_value","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The value of the control. This attribute is optional except when the input is a radio button or a checkbox.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345462,"byte_end":345471,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345725,"byte_end":345738,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"set_raw_value","qualname":"<InputElement>::set_raw_value","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the control.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345704,"byte_end":345713,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346116,"byte_end":346131,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"selection_start","qualname":"<InputElement>::selection_start","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" The offset to the start of the selection.\n This attribute only applies when the input is a text, search, url, telephone or password.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346095,"byte_end":346104,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346524,"byte_end":346543,"line_start":61,"line_end":61,"column_start":12,"column_end":31},"name":"set_selection_start","qualname":"<InputElement>::set_selection_start","value":"fn (&self, value: u32) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the offset to the start of the selection.\n This attribute only applies when the input is a text, search, url, telephone or password.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346503,"byte_end":346512,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346973,"byte_end":346986,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"selection_end","qualname":"<InputElement>::selection_end","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" The offset to the end of the selection.\n This attribute only applies when the input is a text, search, url, telephone or password.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":346952,"byte_end":346961,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":347375,"byte_end":347392,"line_start":83,"line_end":83,"column_start":12,"column_end":29},"name":"set_selection_end","qualname":"<InputElement>::set_selection_end","value":"fn (&self, value: u32) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the offset to the end of the selection.\n This attribute only applies when the input is a text, search, url, telephone or password.\n \n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":347354,"byte_end":347363,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9725},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348216,"byte_end":348231,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"TextAreaElement","qualname":"::webapi::html_elements::textarea::TextAreaElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<textarea>` element represents a multi-line plain-text editing control.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLTextAreaElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348088,"byte_end":348137,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348138,"byte_end":348204,"line_start":14,"line_end":14,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348560,"byte_end":348565,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"value","qualname":"<TextAreaElement>::value","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The value of the control.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348539,"byte_end":348548,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348813,"byte_end":348822,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"set_value","qualname":"<TextAreaElement>::set_value","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the control.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348792,"byte_end":348801,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9819},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":349456,"byte_end":349473,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"UnknownValueError","qualname":"::webapi::html_elements::select::UnknownValueError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that an invalid value is setted to an `SelectElement`.\n It means there is no `<option>` element that has the given value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9833},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350274,"byte_end":350287,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"SelectElement","qualname":"::webapi::html_elements::select::SelectElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<select>` element represents a control that provides a menu of options.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLSelectElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350148,"byte_end":350195,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350196,"byte_end":350262,"line_start":33,"line_end":33,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350810,"byte_end":350819,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<SelectElement>::raw_value","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the value attribute of the first selected `<option>` element or\n if it is missing, the text attribute. If there is no selection, return empty string.\n This method is just a wrapper for getting `HTMLSelectElement.value` directly\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":351073,"byte_end":351086,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"set_raw_value","qualname":"<SelectElement>::set_raw_value","value":"fn (&self, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the given value to `HTMLSelectElement.value` directly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":351408,"byte_end":351422,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"selected_index","qualname":"<SelectElement>::selected_index","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Some(index)` of the first selected item, if any, or `None` if there is no selected item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":351819,"byte_end":351837,"line_start":76,"line_end":76,"column_start":12,"column_end":30},"name":"set_selected_index","qualname":"<SelectElement>::set_selected_index","value":"fn (&self, selected_index: Option<u32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change selected index to the given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":352351,"byte_end":352356,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"value","qualname":"<SelectElement>::value","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Some(value)` of the first selected item, if any, or `None` if there is no selected item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":352780,"byte_end":352789,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"set_value","qualname":"<SelectElement>::set_value","value":"fn (&self, value: Option<&str>) -> Result<(), UnknownValueError>","parent":null,"children":[],"decl_id":null,"docs":" Change the selected value to the given value. If you provide an invalid value,\n the `<select>` element will have no item selected, and an `UnknownValueError` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":353410,"byte_end":353418,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"multiple","qualname":"<SelectElement>::multiple","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether multiple items can be selected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":353716,"byte_end":353732,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"selected_options","qualname":"<SelectElement>::selected_options","value":"fn (&self) -> HtmlCollection","parent":null,"children":[],"decl_id":null,"docs":" An `HtmlCollection` representing\n the set of `<option>` elements that are selected.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":353944,"byte_end":353959,"line_start":136,"line_end":136,"column_start":12,"column_end":27},"name":"selected_values","qualname":"<SelectElement>::selected_values","value":"fn (&self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to get values of all selected `<option>` elements\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":354271,"byte_end":354287,"line_start":145,"line_end":145,"column_start":12,"column_end":28},"name":"selected_indices","qualname":"<SelectElement>::selected_indices","value":"fn (&self) -> Vec<i32>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to get indices of all selected `<option>` elements\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9952},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358272,"byte_end":358285,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"OptionElement","qualname":"::webapi::html_elements::option::OptionElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<option>` element is used to define an item contained in a `<select>`,\n an `<optgroup>`, or a `<datalist>` element.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLOptionElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358146,"byte_end":358193,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358194,"byte_end":358260,"line_start":15,"line_end":15,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358772,"byte_end":358777,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"index","qualname":"<OptionElement>::index","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The position of the option within the list of options it belongs to, in tree-order.\n If the option is not part of a list of options, like when it is part of\n the `<datalist>` element, the value is 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":359101,"byte_end":359106,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"value","qualname":"<OptionElement>::value","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Reflects the value of the value HTML attribute, if it exists;\n otherwise reflects value of the `Node.textContent` property.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10046},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360082,"byte_end":360097,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"TemplateElement","qualname":"::webapi::html_elements::template::TemplateElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<template>` element represents a mechanism for holding client-side content\n that is not to be rendered when a page is loaded but may subsequently be instantiated\n during runtime using JavaScript.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLTemplateElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":359954,"byte_end":360003,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360004,"byte_end":360070,"line_start":17,"line_end":17,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360572,"byte_end":360579,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"content","qualname":"<TemplateElement>::content","value":"fn (&self) -> DocumentFragment","parent":null,"children":[],"decl_id":null,"docs":" The content of the current template","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360551,"byte_end":360560,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10136},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362143,"byte_end":362155,"line_start":15,"line_end":15,"column_start":5,"column_end":17},"name":"AssignedOnly","qualname":"::webapi::html_elements::slot::SlotContentKind::AssignedOnly","value":"SlotContentKind::AssignedOnly","parent":{"krate":0,"index":10135},"children":[],"decl_id":null,"docs":" Will only return content assigned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10138},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362232,"byte_end":362244,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"WithFallback","qualname":"::webapi::html_elements::slot::SlotContentKind::WithFallback","value":"SlotContentKind::WithFallback","parent":{"krate":0,"index":10135},"children":[],"decl_id":null,"docs":" Will return the fallback content if nothing has been assigned.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10135},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362078,"byte_end":362093,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"SlotContentKind","qualname":"::webapi::html_elements::slot::SlotContentKind","value":"SlotContentKind::{AssignedOnly, WithFallback}","parent":null,"children":[{"krate":0,"index":10136},{"krate":0,"index":10138}],"decl_id":null,"docs":" An enum which determines whether\n [SlotElement::assigned_nodes](struct.SlotElement.html#method.assigned_nodes) /\n [SlotElement::assigned_elements](struct.SlotElement.html#method.assigned_elements) will\n return the fallback content when nothing has been assigned to the slot.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10151},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362985,"byte_end":362996,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"SlotElement","qualname":"::webapi::html_elements::slot::SlotElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" The HTML `<slot>` element represents a placeholder inside a web component that\n you can fill with your own markup, which lets you create separate DOM trees and\n present them together.","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLSlotElement\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362861,"byte_end":362906,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"reference(subclass_of (EventTarget, Node, Element, HtmlElement))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362907,"byte_end":362973,"line_start":37,"line_end":37,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363401,"byte_end":363405,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"name","qualname":"<SlotElement>::name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The slot's name","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363380,"byte_end":363389,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363561,"byte_end":363569,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"set_name","qualname":"<SlotElement>::set_name","value":"fn (&self, new_name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Setter of name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363540,"byte_end":363549,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363949,"byte_end":363963,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"assigned_nodes","qualname":"<SlotElement>::assigned_nodes","value":"fn (&self, kind: SlotContentKind) -> Vec<Node>","parent":null,"children":[],"decl_id":null,"docs":" Returns slot's assigned nodes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":364458,"byte_end":364475,"line_start":79,"line_end":79,"column_start":12,"column_end":29},"name":"assigned_elements","qualname":"<SlotElement>::assigned_elements","value":"fn (&self, kind: SlotContentKind) -> Vec<Element>","parent":null,"children":[],"decl_id":null,"docs":" Similar to [assigned_nodes()](#method.assigned_nodes) but limited result to only elements.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":368400,"byte_end":368415,"line_start":21,"line_end":21,"column_start":11,"column_end":26},"name":"IWindowOrWorker","qualname":"::webapi::window_or_worker::IWindowOrWorker","value":"IWindowOrWorker: ReferenceType","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1623}],"decl_id":null,"docs":" The `IWindowOrWorker` mixin describes several features common to\n the `Window` and the global scope of web workers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":368724,"byte_end":368735,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"::webapi::window_or_worker::IWindowOrWorker::set_timeout","value":"fn <F> (&self, callback: F, timeout: u32) -> ()","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" Sets a timer which executes a function once after the timer expires.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":369481,"byte_end":369502,"line_start":39,"line_end":39,"column_start":8,"column_end":29},"name":"set_clearable_timeout","qualname":"::webapi::window_or_worker::IWindowOrWorker::set_clearable_timeout","value":"fn <F> (&self, callback: F, timeout: u32) -> TimeoutHandle","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":" Sets a timer which executes a function once after the timer expires and can be cleared","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10265},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":369891,"byte_end":369904,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"TimeoutHandle","qualname":"::webapi::window_or_worker::TimeoutHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a timeout object created by set_clearable_timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":370230,"byte_end":370235,"line_start":59,"line_end":59,"column_start":13,"column_end":18},"name":"clear","qualname":"<TimeoutHandle>::clear","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears a timer previously established by set_clearable_timeout","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10275},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":370784,"byte_end":370793,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TokenList","qualname":"::webapi::token_list::TokenList","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TokenList` represents a set of space-separated tokens.","sig":null,"attributes":[{"value":"reference(instance_of = \"DOMTokenList\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":370730,"byte_end":370772,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":371058,"byte_end":371061,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"len","qualname":"<TokenList>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of tokens in the list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":371369,"byte_end":371372,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"add","qualname":"<TokenList>::add","value":"fn (&self, token: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Adds token to the underlying string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":371751,"byte_end":371757,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"remove","qualname":"<TokenList>::remove","value":"fn (&self, token: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Removes token from the underlying string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":372176,"byte_end":372184,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"contains","qualname":"<TokenList>::contains","value":"fn (&self, token: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the underlying string contains token, otherwise `false`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372814,"byte_end":372830,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"DocumentFragment","qualname":"::webapi::document_fragment::DocumentFragment","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object DocumentFragment.","sig":null,"attributes":[{"value":"reference(instance_of = \"DocumentFragment\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372711,"byte_end":372757,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"reference(subclass_of (EventTarget, Node))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372758,"byte_end":372802,"line_start":12,"line_end":12,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":10427},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373724,"byte_end":373732,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"TextNode","qualname":"::webapi::text_node::TextNode","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TextNode` represents the textual content of an [IElement](trait.IElement.html)","sig":null,"attributes":[{"value":"reference(instance_of = \"Text\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373633,"byte_end":373667,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (EventTarget, Node))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373668,"byte_end":373712,"line_start":17,"line_end":17,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":10499},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":374965,"byte_end":374973,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"NodeList","qualname":"::webapi::node_list::NodeList","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NodeList` objects are collections of nodes such as those returned by properties\n such as [INode::child_nodes](trait.INode.html#method.child_nodes) and the\n [Document::query_selector_all](struct.Document.html#method.query_selector_all) method.","sig":null,"attributes":[{"value":"reference(instance_of = \"NodeList\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":374915,"byte_end":374953,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":375262,"byte_end":375265,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"len","qualname":"<NodeList>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of [Node](struct.Node.html)s contained in this list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":375571,"byte_end":375575,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"item","qualname":"<NodeList>::item","value":"fn (&self, index: u32) -> Option<Node>","parent":null,"children":[],"decl_id":null,"docs":" Returns a node from a NodeList by index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":375761,"byte_end":375765,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"iter","qualname":"<NodeList>::iter","value":"fn (&self) -> NodeIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the list.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10569},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":376382,"byte_end":376390,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"NodeIter","qualname":"::webapi::node_list::NodeIter","value":"NodeIter {  }","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10579},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377327,"byte_end":377336,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"StringMap","qualname":"::webapi::string_map::StringMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used by the `dataset` HTML attribute to represent data for custom attributes added to elements.","sig":null,"attributes":[{"value":"reference(instance_of = \"DOMStringMap\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377273,"byte_end":377315,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377575,"byte_end":377578,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<StringMap>::get","value":"fn (&self, key: &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a value corresponding to the key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377805,"byte_end":377811,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"insert","qualname":"<StringMap>::insert","value":"fn (&self, key: &str, value: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":378083,"byte_end":378089,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"remove","qualname":"<StringMap>::remove","value":"fn (&self, key: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":378277,"byte_end":378289,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StringMap>::contains_key","value":"fn (&self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10659},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":379382,"byte_end":379390,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Location","qualname":"::webapi::location::Location","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Location` interface represents the location (URL) of the object it\n is linked to. Changes done on it are reflected on the object it relates\n to. Both the [Document](struct.Document.html) and [Window](struct.Window.html)\n interface have such a linked `Location`, accessible via [Document::location](struct.Document.html#method.location)\n and [Window::location](struct.Window.html#method.location) respectively.","sig":null,"attributes":[{"value":"reference(instance_of = \"Location\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":379332,"byte_end":379370,"line_start":17,"line_end":17,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":379635,"byte_end":379639,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"href","qualname":"<Location>::href","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" The entire URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":380519,"byte_end":380525,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"origin","qualname":"<Location>::origin","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` containing the Unicode serialization of the origin of the represented\n URL, that is:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":380957,"byte_end":380965,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"protocol","qualname":"<Location>::protocol","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` representing the protocol scheme of the URL, including the final ':'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":381458,"byte_end":381462,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"host","qualname":"<Location>::host","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` containing the host (i.e. hostname) and then, if the port of the\n URL is nonempty, a ':', and the port of the URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":381859,"byte_end":381867,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"hostname","qualname":"<Location>::hostname","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` which is the domain of the URL","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":382246,"byte_end":382250,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"port","qualname":"<Location>::port","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` containing the port number or `\"\"` if there is no port.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":382636,"byte_end":382644,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"pathname","qualname":"<Location>::pathname","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` containing an initial '/' followed by the path of the URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":383178,"byte_end":383184,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"search","qualname":"<Location>::search","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` which is a search string, also called a query string, that is a `String`\n containing a '?' followed by the parameters of the URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":383615,"byte_end":383619,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"hash","qualname":"<Location>::hash","value":"fn (&self) -> Result<String, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `String` containing a '#' followed by the fragment\n identifier of the URL. The fragment is not percent-decoded.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10908},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384175,"byte_end":384182,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Storage","qualname":"::webapi::storage::Storage","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Storage` interface of the Web Storage API provides access to\n the session storage or local storage for a particular domain.","sig":null,"attributes":[{"value":"reference(instance_of = \"Storage\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384126,"byte_end":384163,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384473,"byte_end":384476,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"len","qualname":"<Storage>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of data items stored in the `Storage` object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384802,"byte_end":384805,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"get","qualname":"<Storage>::get","value":"fn (&self, key: &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a value corresponding to the key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":385163,"byte_end":385169,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"insert","qualname":"<Storage>::insert","value":"fn (&self, key: &str, value: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":385574,"byte_end":385580,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"remove","qualname":"<Storage>::remove","value":"fn (&self, key: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":385939,"byte_end":385944,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"clear","qualname":"<Storage>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" When invoked, will empty all keys out of the storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":386268,"byte_end":386271,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"key","qualname":"<Storage>::key","value":"fn (&self, nth: u32) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the nth key in the storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":386468,"byte_end":386480,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Storage>::contains_key","value":"fn (&self, key: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the storage contains a value for the specified key.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":387869,"byte_end":387874,"line_start":37,"line_end":37,"column_start":11,"column_end":16},"name":"IBlob","qualname":"::webapi::blob::IBlob","value":"IBlob: ReferenceType","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1734}],"decl_id":null,"docs":" A blob object represents a file-like object of immutable, raw data.\n Blobs represent data that isn't necessarily in a JavaScript-native format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":388129,"byte_end":388132,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"len","qualname":"::webapi::blob::IBlob::len","value":"fn (&self) -> u64","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" The size, in bytes, of the data contained in the Blob object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":388538,"byte_end":388542,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"mime","qualname":"::webapi::blob::IBlob::mime","value":"fn (&self) -> Option<String>","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" A string indicating the MIME type of the data contained in the `Blob`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389106,"byte_end":389111,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"slice","qualname":"::webapi::blob::IBlob::slice","value":"fn <T> (&self, range: T) -> Blob","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Create a new `Blob` object containing the data in the specified range of bytes of the\n source `Blob`.\n \n See also [slice_with_content_type](IBlob::slice_with_content_type).\n \n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389307,"byte_end":389330,"line_start":75,"line_end":75,"column_start":8,"column_end":31},"name":"slice_with_content_type","qualname":"::webapi::blob::IBlob::slice_with_content_type","value":"fn <T> (&self, range: T, content_type: &str) -> Blob","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" [slice](IBlob::slice) `Blob` with the provided `content_type`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11018},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389811,"byte_end":389815,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Blob","qualname":"::webapi::blob::Blob","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IBlob](trait.IBlob.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"Blob\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389765,"byte_end":389799,"line_start":88,"line_end":88,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":390058,"byte_end":390061,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Blob>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Blob`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11083},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390634,"byte_end":390638,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"File","qualname":"::webapi::file::File","value":"","parent":null,"children":[],"decl_id":null,"docs":" The File interface provides information about files and allows JavaScript\n in a web page to access their content.","sig":null,"attributes":[{"value":"reference(instance_of = \"File\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390556,"byte_end":390590,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Blob))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390591,"byte_end":390622,"line_start":12,"line_end":12,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390942,"byte_end":390946,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the file referenced by the `File` object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11154},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":391694,"byte_end":391702,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"FileList","qualname":"::webapi::file_list::FileList","value":"","parent":null,"children":[],"decl_id":null,"docs":" An object of this type is returned by the files property of the HTML `<input>` element;\n this lets you access the list of files selected with the `<input type=\"file\">` element.\n It's also used for a list of files dropped into web content when using the drag and drop API.","sig":null,"attributes":[{"value":"reference(instance_of = \"FileList\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":391644,"byte_end":391682,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":391984,"byte_end":391987,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"len","qualname":"<FileList>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of [File](struct.File.html)s contained in this list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392125,"byte_end":392129,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"iter","qualname":"<FileList>::iter","value":"fn (&self) -> FileIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the list.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11219},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392746,"byte_end":392754,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"FileIter","qualname":"::webapi::file_list::FileIter","value":"FileIter {  }","parent":null,"children":[{"krate":0,"index":11220},{"krate":0,"index":11221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11229},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394012,"byte_end":394022,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"FileReader","qualname":"::webapi::file_reader::FileReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" The FileReader object lets web applications asynchronously read the contents of files\n (or raw data buffers) stored on the user's computer, using [File](struct.File.html)\n or [Blob](struct.Blob.html) objects to specify the file or data to read.","sig":null,"attributes":[{"value":"reference(instance_of = \"FileReader\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":393921,"byte_end":393961,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (EventTarget))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":393962,"byte_end":394000,"line_start":16,"line_end":16,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394365,"byte_end":394371,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"String","qualname":"::webapi::file_reader::FileReaderResult::String","value":"FileReaderResult::String(String)","parent":{"krate":0,"index":11295},"children":[],"decl_id":null,"docs":" A string; a result of calling [FileReader::read_as_text](struct.FileReader.html#method.read_as_text).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11299},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394547,"byte_end":394558,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"name":"ArrayBuffer","qualname":"::webapi::file_reader::FileReaderResult::ArrayBuffer","value":"FileReaderResult::ArrayBuffer(ArrayBuffer)","parent":{"krate":0,"index":11295},"children":[],"decl_id":null,"docs":" An [ArrayBuffer](struct.ArrayBuffer.html); a result of calling [FileReader::read_as_array_buffer](struct.FileReader.html#method.read_as_array_buffer).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11295},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394232,"byte_end":394248,"line_start":23,"line_end":23,"column_start":10,"column_end":26},"name":"FileReaderResult","qualname":"::webapi::file_reader::FileReaderResult","value":"FileReaderResult::{String, ArrayBuffer}","parent":null,"children":[{"krate":0,"index":11296},{"krate":0,"index":11299}],"decl_id":null,"docs":" The [result](struct.FileReader.html#method.result) of a read operation performed with a [FileReader](struct.File.html).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11307},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394850,"byte_end":394855,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Empty","qualname":"::webapi::file_reader::FileReaderReadyState::Empty","value":"FileReaderReadyState::Empty","parent":{"krate":0,"index":11306},"children":[],"decl_id":null,"docs":" No data has been loaded yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11309},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394901,"byte_end":394908,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"Loading","qualname":"::webapi::file_reader::FileReaderReadyState::Loading","value":"FileReaderReadyState::Loading","parent":{"krate":0,"index":11306},"children":[],"decl_id":null,"docs":" Data is currently being loaded.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11311},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394966,"byte_end":394970,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Done","qualname":"::webapi::file_reader::FileReaderReadyState::Done","value":"FileReaderReadyState::Done","parent":{"krate":0,"index":11306},"children":[],"decl_id":null,"docs":" The entire read request has been completed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11306},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394786,"byte_end":394806,"line_start":35,"line_end":35,"column_start":10,"column_end":30},"name":"FileReaderReadyState","qualname":"::webapi::file_reader::FileReaderReadyState","value":"FileReaderReadyState::{Empty, Loading, Done}","parent":null,"children":[{"krate":0,"index":11307},{"krate":0,"index":11309},{"krate":0,"index":11311}],"decl_id":null,"docs":" A number indicating the state of the `FileReader`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":395225,"byte_end":395228,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<FileReader>::new","value":"fn () -> FileReader","parent":null,"children":[],"decl_id":null,"docs":" Returns a newly constructed `FileReader`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":395654,"byte_end":395666,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"read_as_text","qualname":"<FileReader>::read_as_text","value":"fn <T> (&self, blob: &T) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Starts reading the contents of the specified blob. Once finished\n the `result` attribute will contain the contents of the file as a text string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":396181,"byte_end":396201,"line_start":68,"line_end":68,"column_start":12,"column_end":32},"name":"read_as_array_buffer","qualname":"<FileReader>::read_as_array_buffer","value":"fn <T> (&self, blob: &T) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Starts reading the contents of the specified blob. Once finished\n the `result` attribute will contain the contents of the file as an [TypedArray](struct.ArrayBuffer.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":396603,"byte_end":396608,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"abort","qualname":"<FileReader>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Aborts the read operation. Upon return, the `ready_state` will be `Done`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":396896,"byte_end":396907,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"ready_state","qualname":"<FileReader>::ready_state","value":"fn (&self) -> FileReaderReadyState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of the reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":397682,"byte_end":397688,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"result","qualname":"<FileReader>::result","value":"fn (&self) -> Option<FileReaderResult>","parent":null,"children":[],"decl_id":null,"docs":" The file's contents. This method will only return a value after the read operation\n is complete, and the format of the data depends on which of the methods was used\n to initiate the read operation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":398850,"byte_end":398861,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ArrayBuffer","qualname":"::webapi::array_buffer::ArrayBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic, fixed-length raw binary data buffer.\n You cannot directly manipulate the contents of an ArrayBuffer; instead, you create an [TypedArray](struct.TypedArray.html)\n to do it.","sig":null,"attributes":[{"value":"reference(instance_of = \"ArrayBuffer\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":398797,"byte_end":398838,"line_start":14,"line_end":14,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399054,"byte_end":399057,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"fn (length: u64) -> Result<Self, TODO>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ArrayBuffer` with the given length in bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399400,"byte_end":399403,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBuffer>::len","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer, in bytes.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400262,"byte_end":400271,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"ArrayKind","qualname":"::webapi::typed_array::ArrayKind","value":"ArrayKind: Sized","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400288,"byte_end":400302,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"is_typed_array","qualname":"::webapi::typed_array::ArrayKind::is_typed_array","value":"fn (reference: &Reference) -> bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400344,"byte_end":400360,"line_start":10,"line_end":10,"column_start":8,"column_end":24},"name":"into_typed_array","qualname":"::webapi::typed_array::ArrayKind::into_typed_array","value":"fn (slice: &[Self]) -> TypedArray<Self>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400409,"byte_end":400443,"line_start":11,"line_end":11,"column_start":8,"column_end":42},"name":"into_typed_array_from_array_buffer","qualname":"::webapi::typed_array::ArrayKind::into_typed_array_from_array_buffer","value":"fn (buffer: &ArrayBuffer) -> TypedArray<Self>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400498,"byte_end":400514,"line_start":12,"line_end":12,"column_start":8,"column_end":24},"name":"from_typed_array","qualname":"::webapi::typed_array::ArrayKind::from_typed_array","value":"fn (array: &TypedArray<Self>) -> Vec<Self>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11680},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":404171,"byte_end":404181,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"TypedArray","qualname":"::webapi::typed_array::TypedArray","value":"","parent":null,"children":[],"decl_id":null,"docs":" JavaScript typed arrays are array-like objects and provide a mechanism for accessing raw binary data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":404601,"byte_end":404607,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"buffer","qualname":"<TypedArray<T>>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Returns the [TypedArray](struct.ArrayBuffer.html) referenced by this typed array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":404900,"byte_end":404903,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"len","qualname":"<TypedArray<T>>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405082,"byte_end":405088,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<TypedArray<T>>::to_vec","value":"fn (&self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Copies `self` into a new `Vec`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11762},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410107,"byte_end":410121,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"XmlHttpRequest","qualname":"::webapi::xml_http_request::XmlHttpRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use XmlHttpRequest (XHR) objects to interact with servers.\n You can retrieve data from a URL without having to do a full page refresh.\n This enables a Web page to update just part of a page without disrupting\n what the user is doing. XmlHttpRequest is used heavily in Ajax programming.","sig":null,"attributes":[{"value":"reference(instance_of = \"XMLHttpRequest\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410012,"byte_end":410056,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"reference(subclass_of (EventTarget))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410057,"byte_end":410095,"line_start":20,"line_end":20,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11829},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410533,"byte_end":410539,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Unsent","qualname":"::webapi::xml_http_request::XhrReadyState::Unsent","value":"XhrReadyState::Unsent","parent":{"krate":0,"index":11828},"children":[],"decl_id":null,"docs":" Client has been created. [open()](struct.XmlHttpRequest.html#method.open) not called yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11831},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410619,"byte_end":410625,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Opened","qualname":"::webapi::xml_http_request::XhrReadyState::Opened","value":"XhrReadyState::Opened","parent":{"krate":0,"index":11828},"children":[],"decl_id":null,"docs":" [open()](struct.XmlHttpRequest.html#method.open) has been called.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11833},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410789,"byte_end":410804,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"HeadersReceived","qualname":"::webapi::xml_http_request::XhrReadyState::HeadersReceived","value":"XhrReadyState::HeadersReceived","parent":{"krate":0,"index":11828},"children":[],"decl_id":null,"docs":" [send()](struct.XmlHttpRequest.html#method.send) has been called, and headers and [status()](struct.XmlHttpRequest.html#method.status) are available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11835},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410916,"byte_end":410923,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Loading","qualname":"::webapi::xml_http_request::XhrReadyState::Loading","value":"XhrReadyState::Loading","parent":{"krate":0,"index":11828},"children":[],"decl_id":null,"docs":" Downloading; [reponse_text()](struct.XmlHttpRequest.html#method.reponse_text) holds partial data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11837},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410964,"byte_end":410968,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Done","qualname":"::webapi::xml_http_request::XhrReadyState::Done","value":"XhrReadyState::Done","parent":{"krate":0,"index":11828},"children":[],"decl_id":null,"docs":" The operation is complete.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11828},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":410415,"byte_end":410428,"line_start":28,"line_end":28,"column_start":10,"column_end":23},"name":"XhrReadyState","qualname":"::webapi::xml_http_request::XhrReadyState","value":"XhrReadyState::{Unsent, Opened, HeadersReceived, Loading, Done}","parent":null,"children":[{"krate":0,"index":11829},{"krate":0,"index":11831},{"krate":0,"index":11833},{"krate":0,"index":11835},{"krate":0,"index":11837}],"decl_id":null,"docs":" An enum indicating the state of the `XmlHttpRequest`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11851},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411343,"byte_end":411354,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"ArrayBuffer","qualname":"::webapi::xml_http_request::XhrResponseType::ArrayBuffer","value":"XhrResponseType::ArrayBuffer","parent":{"krate":0,"index":11850},"children":[],"decl_id":null,"docs":" A JavaScript ArrayBuffer containing binary data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11853},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411408,"byte_end":411412,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Blob","qualname":"::webapi::xml_http_request::XhrResponseType::Blob","value":"XhrResponseType::Blob","parent":{"krate":0,"index":11850},"children":[],"decl_id":null,"docs":" A Blob object container the binary data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11855},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411462,"byte_end":411470,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"Document","qualname":"::webapi::xml_http_request::XhrResponseType::Document","value":"XhrResponseType::Document","parent":{"krate":0,"index":11850},"children":[],"decl_id":null,"docs":" An HTML Document or XML XMLDocument\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11857},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411521,"byte_end":411525,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Json","qualname":"::webapi::xml_http_request::XhrResponseType::Json","value":"XhrResponseType::Json","parent":{"krate":0,"index":11850},"children":[],"decl_id":null,"docs":" A JavaScript object parsed from JSON\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11859},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411563,"byte_end":411567,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Text","qualname":"::webapi::xml_http_request::XhrResponseType::Text","value":"XhrResponseType::Text","parent":{"krate":0,"index":11850},"children":[],"decl_id":null,"docs":" Text in a String object\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11850},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411265,"byte_end":411280,"line_start":46,"line_end":46,"column_start":10,"column_end":25},"name":"XhrResponseType","qualname":"::webapi::xml_http_request::XhrResponseType","value":"XhrResponseType::{ArrayBuffer, Blob, Document, Json, Text}","parent":null,"children":[{"krate":0,"index":11851},{"krate":0,"index":11853},{"krate":0,"index":11855},{"krate":0,"index":11857},{"krate":0,"index":11859}],"decl_id":null,"docs":" An enum describing the type of the response to `XmlHttpRequest`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11883},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411766,"byte_end":411783,"line_start":66,"line_end":66,"column_start":5,"column_end":22},"name":"InvalidStateError","qualname":"::webapi::xml_http_request::XhrSetResponseTypeError::InvalidStateError","value":"XhrSetResponseTypeError::InvalidStateError(InvalidStateError)","parent":{"krate":0,"index":11882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/macros.rs","byte_start":33332,"byte_end":33350,"line_start":451,"line_end":451,"column_start":20,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11886},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411816,"byte_end":411834,"line_start":68,"line_end":68,"column_start":5,"column_end":23},"name":"InvalidAccessError","qualname":"::webapi::xml_http_request::XhrSetResponseTypeError::InvalidAccessError","value":"XhrSetResponseTypeError::InvalidAccessError(InvalidAccessError)","parent":{"krate":0,"index":11882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/macros.rs","byte_start":33332,"byte_end":33350,"line_start":451,"line_end":451,"column_start":20,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":11882},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411709,"byte_end":411732,"line_start":63,"line_end":63,"column_start":5,"column_end":28},"name":"XhrSetResponseTypeError","qualname":"::webapi::xml_http_request::XhrSetResponseTypeError","value":"XhrSetResponseTypeError::{InvalidStateError, InvalidAccessError}","parent":null,"children":[{"krate":0,"index":11883},{"krate":0,"index":11886}],"decl_id":null,"docs":" An error returned from `XmlHttpRequest::set_response_type`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411972,"byte_end":411975,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<XmlHttpRequest>::new","value":"fn () -> XmlHttpRequest","parent":null,"children":[],"decl_id":null,"docs":" Creates new `XmlHttpRequest`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":412362,"byte_end":412373,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"ready_state","qualname":"<XmlHttpRequest>::ready_state","value":"fn (&self) -> XhrReadyState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of the request as a [XhrReadyState](enum.XhrReadyState.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":413072,"byte_end":413085,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"response_type","qualname":"<XmlHttpRequest>::response_type","value":"fn (&self) -> XhrResponseType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the request as a [XhrResponseType](enum.XhrResponseType.html)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":413820,"byte_end":413837,"line_start":116,"line_end":116,"column_start":12,"column_end":29},"name":"set_response_type","qualname":"<XmlHttpRequest>::set_response_type","value":"fn (&self, kind: XhrResponseType) -> Result<(), XhrSetResponseTypeError>","parent":null,"children":[],"decl_id":null,"docs":" Set the type that the XmlHttpRequest should return","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":414607,"byte_end":414620,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"response_text","qualname":"<XmlHttpRequest>::response_text","value":"fn (&self) -> Result<Option<String>, TODO>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string that contains the response to the request as text, or None\n if the request was unsuccessful or has not yet been sent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":415140,"byte_end":415152,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"raw_response","qualname":"<XmlHttpRequest>::raw_response","value":"fn (&self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the object representing the response","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":415487,"byte_end":415493,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"status","qualname":"<XmlHttpRequest>::status","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsigned short with the status of the response of the request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":415838,"byte_end":415842,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"open","qualname":"<XmlHttpRequest>::open","value":"fn (&self, method: &str, url: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Open connection with given method (ie GET or POST), and the url to hit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":416433,"byte_end":416452,"line_start":179,"line_end":179,"column_start":12,"column_end":31},"name":"get_response_header","qualname":"<XmlHttpRequest>::get_response_header","value":"fn (&self, header: &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the string containing the text of the specified header. If there\n are multiple response headers with the same name, then their values are\n returned as a single concatenated string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":417163,"byte_end":417181,"line_start":194,"line_end":194,"column_start":12,"column_end":30},"name":"set_request_header","qualname":"<XmlHttpRequest>::set_request_header","value":"fn (&self, header: &str, value: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of an HTTP request header. Must be called after `open()`,\n but before `send()`. If this method is called several times with the same\n header, the values are merged into one single request header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":417601,"byte_end":417605,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"send","qualname":"<XmlHttpRequest>::send","value":"fn (&self) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Send request on an open connection with no data","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":417971,"byte_end":417987,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"send_with_string","qualname":"<XmlHttpRequest>::send_with_string","value":"fn (&self, body: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Send request on an open connection with string body","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":418378,"byte_end":418393,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"send_with_bytes","qualname":"<XmlHttpRequest>::send_with_bytes","value":"fn (&self, body: &[u8]) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Send request on an open connection with a byte array body","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":419094,"byte_end":419099,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"abort","qualname":"<XmlHttpRequest>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Aborts the request if it has already been sent.\n When a request is aborted, its [ready_state](struct.XmlHttpRequest.html#method.ready_state) is changed to [Done](enum.XhrReadyState.html#variant.Done)\n and the [status](struct.XmlHttpRequest.html#method.status) code is set to\n [Unsent](enum.XhrReadyState.html#variant.Unsent).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11979},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":419537,"byte_end":419544,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"History","qualname":"::webapi::history::History","value":"","parent":null,"children":[],"decl_id":null,"docs":" [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/History)\n","sig":null,"attributes":[{"value":"reference(instance_of = \"History\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":419488,"byte_end":419525,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":421246,"byte_end":421256,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"push_state","qualname":"<History>::push_state","value":"fn <T> (&self, state: T, title: &str, url: Option<&str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entry to history.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":421901,"byte_end":421914,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"replace_state","qualname":"<History>::replace_state","value":"fn <T> (&self, state: T, title: &str, url: Option<&str>) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Operates exactly like history.push_state() except that replace_state() modifies the current\n history entry instead of creating a new one. Note that this doesn't prevent the creation of\n a new entry in the global browser history.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":422548,"byte_end":422550,"line_start":61,"line_end":61,"column_start":12,"column_end":14},"name":"go","qualname":"<History>::go","value":"fn (&self, offset: i32) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" You can use the go() method to load a specific page from session history, identified by its\n relative position to the current page (with the current page being, of course, relative\n index 0).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":422949,"byte_end":422953,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"back","qualname":"<History>::back","value":"fn (&self) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Move one step backward through history.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":423334,"byte_end":423341,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"forward","qualname":"<History>::forward","value":"fn (&self) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Move one step forward through history.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":423702,"byte_end":423705,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"len","qualname":"<History>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of history entries.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12069},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":424419,"byte_end":424434,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"SocketCloseCode","qualname":"::webapi::web_socket::SocketCloseCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type around a CloseEvent code, indicating why the WebSocket was closed","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12094},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":424679,"byte_end":424693,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"NORMAL_CLOSURE","qualname":"::webapi::web_socket::SocketCloseCode::NORMAL_CLOSURE","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" Normal closure; the connection successfully completed whatever purpose for which it was\n created.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12095},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":424869,"byte_end":424879,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"GOING_AWAY","qualname":"::webapi::web_socket::SocketCloseCode::GOING_AWAY","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The endpoint is going away, either because of a server failure or because the browser is\n navigating away from the page that opened the connection.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12096},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":424968,"byte_end":424982,"line_start":26,"line_end":26,"column_start":5,"column_end":19},"name":"PROTOCOL_ERROR","qualname":"::webapi::web_socket::SocketCloseCode::PROTOCOL_ERROR","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The endpoint is terminating the connection due to a protocol error.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12097},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":425166,"byte_end":425182,"line_start":29,"line_end":29,"column_start":5,"column_end":21},"name":"UNSUPPORTED_DATA","qualname":"::webapi::web_socket::SocketCloseCode::UNSUPPORTED_DATA","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The connection is being terminated because the endpoint received data of a type it cannot\n accept (for example, a text-only endpoint received binary data).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12098},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":425286,"byte_end":425304,"line_start":31,"line_end":31,"column_start":5,"column_end":23},"name":"NO_STATUS_RECEIVED","qualname":"::webapi::web_socket::SocketCloseCode::NO_STATUS_RECEIVED","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" Reserved. Indicates that no status code was provided even though one was expected.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12099},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":425474,"byte_end":425490,"line_start":34,"line_end":34,"column_start":5,"column_end":21},"name":"ABNORMAL_CLOSURE","qualname":"::webapi::web_socket::SocketCloseCode::ABNORMAL_CLOSURE","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" Reserved. Used to indicate that a connection was closed abnormally (that is, with no close\n frame being sent) when a status code is expected.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12100},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":425672,"byte_end":425698,"line_start":37,"line_end":37,"column_start":5,"column_end":31},"name":"INVALID_FRAME_PAYLOAD_DATA","qualname":"::webapi::web_socket::SocketCloseCode::INVALID_FRAME_PAYLOAD_DATA","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The endpoint is terminating the connection because a message was received that contained\n inconsistent data (e.g., non-UTF-8 data within a text message).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12101},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":425905,"byte_end":425921,"line_start":40,"line_end":40,"column_start":5,"column_end":21},"name":"POLICY_VIOLATION","qualname":"::webapi::web_socket::SocketCloseCode::POLICY_VIOLATION","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The endpoint is terminating the connection because it received a message that violates its\n policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12102},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426046,"byte_end":426061,"line_start":43,"line_end":43,"column_start":5,"column_end":20},"name":"MESSAGE_TOO_BIG","qualname":"::webapi::web_socket::SocketCloseCode::MESSAGE_TOO_BIG","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The endpoint is terminating the connection because a data frame was received that is too\n large.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12103},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426222,"byte_end":426239,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"MISSING_EXTENSION","qualname":"::webapi::web_socket::SocketCloseCode::MISSING_EXTENSION","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The client is terminating the connection because it expected the server to negotiate one or\n more extensions, but the server didn't.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426403,"byte_end":426417,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"INTERNAL_ERROR","qualname":"::webapi::web_socket::SocketCloseCode::INTERNAL_ERROR","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The server is terminating the connection because it encountered an unexpected condition\n that prevented it from fulfilling the request.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12105},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426505,"byte_end":426520,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"SERVICE_RESTART","qualname":"::webapi::web_socket::SocketCloseCode::SERVICE_RESTART","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The server is terminating the connection because it is restarting.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12106},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426682,"byte_end":426697,"line_start":54,"line_end":54,"column_start":5,"column_end":20},"name":"TRY_AGAIN_LATER","qualname":"::webapi::web_socket::SocketCloseCode::TRY_AGAIN_LATER","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The server is terminating the connection due to a temporary condition, e.g. it is\n overloaded and is casting off some of its clients.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12107},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":426870,"byte_end":426881,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"BAD_GATEWAY","qualname":"::webapi::web_socket::SocketCloseCode::BAD_GATEWAY","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" The server was acting as a gateway or proxy and received an invalid response from the\n upstream server. This is similar to 502 HTTP Status Code.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12108},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427055,"byte_end":427068,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TLS_HANDSHAKE","qualname":"::webapi::web_socket::SocketCloseCode::TLS_HANDSHAKE","value":"SocketCloseCode","parent":{"krate":0,"index":12093},"children":[],"decl_id":null,"docs":" Reserved. Indicates that the connection was closed due to a failure to perform a TLS\n handshake (e.g., the server certificate can't be verified).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12111},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427526,"byte_end":427535,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::webapi::web_socket::WebSocket","value":"","parent":null,"children":[],"decl_id":null,"docs":" The WebSocket object provides the API for creating and managing a WebSocket connection to a\n server, as well as for sending and receiving data on the connection.","sig":null,"attributes":[{"value":"reference(instance_of = \"WebSocket\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427436,"byte_end":427475,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"reference(subclass_of (EventTarget))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427476,"byte_end":427514,"line_start":70,"line_end":70,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12178},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":428078,"byte_end":428082,"line_start":83,"line_end":83,"column_start":5,"column_end":9},"name":"Blob","qualname":"::webapi::web_socket::SocketBinaryType::Blob","value":"SocketBinaryType::Blob","parent":{"krate":0,"index":12177},"children":[],"decl_id":null,"docs":" A Blob object represents a file-like object of immutable, raw data.\n [(Javascript docs)](https://developer.mozilla.org/en-US/docs/Web/API/Blob)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12180},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":428310,"byte_end":428321,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"ArrayBuffer","qualname":"::webapi::web_socket::SocketBinaryType::ArrayBuffer","value":"SocketBinaryType::ArrayBuffer","parent":{"krate":0,"index":12177},"children":[],"decl_id":null,"docs":" The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer.\n [(Javascript docs)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12177},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427896,"byte_end":427912,"line_start":80,"line_end":80,"column_start":10,"column_end":26},"name":"SocketBinaryType","qualname":"::webapi::web_socket::SocketBinaryType","value":"SocketBinaryType::{Blob, ArrayBuffer}","parent":null,"children":[{"krate":0,"index":12178},{"krate":0,"index":12180}],"decl_id":null,"docs":" The type of binary data being transmitted by the WebSocket connection.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12201},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429117,"byte_end":429127,"line_start":112,"line_end":112,"column_start":5,"column_end":15},"name":"Connecting","qualname":"::webapi::web_socket::SocketReadyState::Connecting","value":"SocketReadyState::Connecting","parent":{"krate":0,"index":12200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12204},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429137,"byte_end":429141,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"Open","qualname":"::webapi::web_socket::SocketReadyState::Open","value":"SocketReadyState::Open","parent":{"krate":0,"index":12200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12207},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429151,"byte_end":429158,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Closing","qualname":"::webapi::web_socket::SocketReadyState::Closing","value":"SocketReadyState::Closing","parent":{"krate":0,"index":12200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12210},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429168,"byte_end":429174,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"Closed","qualname":"::webapi::web_socket::SocketReadyState::Closed","value":"SocketReadyState::Closed","parent":{"krate":0,"index":12200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12200},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429094,"byte_end":429110,"line_start":111,"line_end":111,"column_start":10,"column_end":26},"name":"SocketReadyState","qualname":"::webapi::web_socket::SocketReadyState","value":"SocketReadyState::{Connecting, Open, Closing, Closed}","parent":null,"children":[{"krate":0,"index":12201},{"krate":0,"index":12204},{"krate":0,"index":12207},{"krate":0,"index":12210}],"decl_id":null,"docs":" A number indicating the state of the `WebSocket`.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":428994,"byte_end":429016,"line_start":109,"line_end":109,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429947,"byte_end":429950,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocket>::new","value":"fn (url: &str) -> Result<WebSocket, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a newly constructed `WebSocket`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":430316,"byte_end":430334,"line_start":148,"line_end":148,"column_start":12,"column_end":30},"name":"new_with_protocols","qualname":"<WebSocket>::new_with_protocols","value":"fn (url: &str, protocols: &[&str]) -> Result<WebSocket, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a newly constructed `WebSocket`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":430822,"byte_end":430833,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"binary_type","qualname":"<WebSocket>::binary_type","value":"fn (&self) -> SocketBinaryType","parent":null,"children":[],"decl_id":null,"docs":" Returns the binary type of the web socket. Only affects received messages.\n The default binary type is `Blob`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":431324,"byte_end":431339,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"set_binary_type","qualname":"<WebSocket>::set_binary_type","value":"fn (&self, binary_type: SocketBinaryType) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the binary type of the web socket. Only affects received messages.\n The default binary type is `Blob`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":431995,"byte_end":432010,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"buffered_amount","qualname":"<WebSocket>::buffered_amount","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes of data that have been queued using calls to send()\n but not yet transmitted to the network. This value resets to zero once all queued\n data has been sent. This value does not reset to zero when the connection is closed;\n if you keep calling send(), this will continue to climb.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":432453,"byte_end":432463,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"extensions","qualname":"<WebSocket>::extensions","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the extensions selected by the server. This is currently only the empty\n string or a list of extensions as negotiated by the connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":432950,"byte_end":432958,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"protocol","qualname":"<WebSocket>::protocol","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string indicating the name of the sub-protocol the server selected;\n this will be one of the strings specified in the protocols parameter when\n creating the WebSocket object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":433291,"byte_end":433302,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"ready_state","qualname":"<WebSocket>::ready_state","value":"fn (&self) -> SocketReadyState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of the connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":433675,"byte_end":433678,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"url","qualname":"<WebSocket>::url","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the URL as resolved by the constructor. This is always an absolute URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":434098,"byte_end":434103,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket>::close","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the WebSocket connection or connection attempt, if any. If the connection\n is already CLOSED, this method does nothing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":434504,"byte_end":434521,"line_start":233,"line_end":233,"column_start":12,"column_end":29},"name":"close_with_status","qualname":"<WebSocket>::close_with_status","value":"fn (&self, code: SocketCloseCode, reason: &str) -> Result<(), CloseError>","parent":null,"children":[],"decl_id":null,"docs":" Closes the WebSocket connection or connection attempt, if any. If the connection\n is already CLOSED, this method does nothing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":435136,"byte_end":435145,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"send_text","qualname":"<WebSocket>::send_text","value":"fn (&self, text: &str) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Enqueues the specified data to be transmitted to the server over the WebSocket\n connection, increasing the value of bufferedAmount by the number of bytes needed\n to contain the data. If the data can't be sent (for example, because it needs to\n be buffered but the buffer is full), the socket is closed automatically.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":435700,"byte_end":435709,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"send_blob","qualname":"<WebSocket>::send_blob","value":"fn (&self, blob: &Blob) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Enqueues the specified data to be transmitted to the server over the WebSocket\n connection, increasing the value of bufferedAmount by the number of bytes needed\n to contain the data. If the data can't be sent (for example, because it needs to\n be buffered but the buffer is full), the socket is closed automatically.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":436265,"byte_end":436282,"line_start":264,"line_end":264,"column_start":12,"column_end":29},"name":"send_array_buffer","qualname":"<WebSocket>::send_array_buffer","value":"fn (&self, array_buffer: &ArrayBuffer) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Enqueues the specified data to be transmitted to the server over the WebSocket\n connection, increasing the value of bufferedAmount by the number of bytes needed\n to contain the data. If the data can't be sent (for example, because it needs to\n be buffered but the buffer is full), the socket is closed automatically.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":436861,"byte_end":436871,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"send_bytes","qualname":"<WebSocket>::send_bytes","value":"fn (&self, bytes: &[u8]) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Enqueues the specified data to be transmitted to the server over the WebSocket\n connection, increasing the value of bufferedAmount by the number of bytes needed\n to contain the data. If the data can't be sent (for example, because it needs to\n be buffered but the buffer is full), the socket is closed automatically.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12360},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437102,"byte_end":437115,"line_start":283,"line_end":283,"column_start":5,"column_end":18},"name":"SecurityError","qualname":"::webapi::web_socket::CreationError::SecurityError","value":"CreationError::SecurityError(SecurityError)","parent":{"krate":0,"index":12359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12363},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437117,"byte_end":437128,"line_start":283,"line_end":283,"column_start":20,"column_end":31},"name":"SyntaxError","qualname":"::webapi::web_socket::CreationError::SyntaxError","value":"CreationError::SyntaxError(SyntaxError)","parent":{"krate":0,"index":12359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12359},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437083,"byte_end":437096,"line_start":282,"line_end":282,"column_start":5,"column_end":18},"name":"CreationError","qualname":"::webapi::web_socket::CreationError","value":"CreationError::{SecurityError, SyntaxError}","parent":null,"children":[{"krate":0,"index":12360},{"krate":0,"index":12363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12381},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437231,"byte_end":437249,"line_start":289,"line_end":289,"column_start":5,"column_end":23},"name":"InvalidAccessError","qualname":"::webapi::web_socket::CloseError::InvalidAccessError","value":"CloseError::InvalidAccessError(InvalidAccessError)","parent":{"krate":0,"index":12380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12384},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437251,"byte_end":437262,"line_start":289,"line_end":289,"column_start":25,"column_end":36},"name":"SyntaxError","qualname":"::webapi::web_socket::CloseError::SyntaxError","value":"CloseError::SyntaxError(SyntaxError)","parent":{"krate":0,"index":12380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12380},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":437215,"byte_end":437225,"line_start":288,"line_end":288,"column_start":5,"column_end":15},"name":"CloseError","qualname":"::webapi::web_socket::CloseError","value":"CloseError::{InvalidAccessError, SyntaxError}","parent":null,"children":[{"krate":0,"index":12381},{"krate":0,"index":12384}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":439365,"byte_end":439381,"line_start":10,"line_end":10,"column_start":11,"column_end":27},"name":"RenderingContext","qualname":"::webapi::rendering_context::RenderingContext","value":"RenderingContext","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"decl_id":null,"docs":" Trait implemented by rendering contexts which can be obtained from a canvas.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":439460,"byte_end":439465,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::webapi::rendering_context::RenderingContext::Error","value":"type Error;","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Type of error which can occur whilst creating this context\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":439536,"byte_end":439547,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"from_canvas","qualname":"::webapi::rendering_context::RenderingContext::from_canvas","value":"fn (canvas: &CanvasElement) -> Result<Self, Self::Error>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Name which identifies this kind of rendering context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12391},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":439993,"byte_end":440017,"line_start":23,"line_end":23,"column_start":12,"column_end":36},"name":"CanvasRenderingContext2d","qualname":"::webapi::rendering_context::CanvasRenderingContext2d","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used for drawing rectangles, text, images and other objects onto the canvas element.","sig":null,"attributes":[{"value":"reference(instance_of = \"CanvasRenderingContext2D\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":439927,"byte_end":439981,"line_start":22,"line_end":22,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":12451},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":440501,"byte_end":440515,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"CanvasGradient","qualname":"::webapi::rendering_context::CanvasGradient","value":"","parent":null,"children":[],"decl_id":null,"docs":" The CanvasGradient struct represents an opaque object describing a gradient.\n It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or\n CanvasRenderingContext2D.createRadialGradient().","sig":null,"attributes":[{"value":"reference(instance_of = \"CanvasGradient\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":440445,"byte_end":440489,"line_start":32,"line_end":32,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":12511},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":441032,"byte_end":441045,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"CanvasPattern","qualname":"::webapi::rendering_context::CanvasPattern","value":"","parent":null,"children":[],"decl_id":null,"docs":" The CanvasPattern struct represents an opaque object describing a pattern, based on an image,\n a canvas or a video, created by the CanvasRenderingContext2D.createPattern() method.\n Intentionally blank, no non-experimental properties or methods.","sig":null,"attributes":[{"value":"reference(instance_of = \"CanvasPattern\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":440977,"byte_end":441020,"line_start":42,"line_end":42,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":12571},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":441669,"byte_end":441678,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"ImageData","qualname":"::webapi::rendering_context::ImageData","value":"","parent":null,"children":[],"decl_id":null,"docs":" The ImageData struct represents the underlying pixel data of an area of a `<canvas>` element.\n You can create a new instance by calling [`CanvasRenderingContext2d::create_image_data`](struct.CanvasRenderingContext2d.html#method.create_image_data)\n or [`CanvasRenderingContext2d::create_image_data_size_of`](struct.CanvasRenderingContext2d.html#method.create_image_data_size_of).","sig":null,"attributes":[{"value":"reference(instance_of = \"ImageData\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":441618,"byte_end":441657,"line_start":52,"line_end":52,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12624},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442061,"byte_end":442072,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"TextMetrics","qualname":"::webapi::rendering_context::TextMetrics","value":"","parent":null,"children":[],"decl_id":null,"docs":" The TextMetrics struct represents the dimension of a text in the canvas, as created by the CanvasRenderingContext2D.measureText() method.","sig":null,"attributes":[{"value":"reference(instance_of = \"TextMetrics\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442008,"byte_end":442049,"line_start":60,"line_end":60,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12678},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442418,"byte_end":442428,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"SourceOver","qualname":"::webapi::rendering_context::CompositeOperation::SourceOver","value":"CompositeOperation::SourceOver","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Draws new shapes over existing canvas content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12680},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442585,"byte_end":442593,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"SourceIn","qualname":"::webapi::rendering_context::CompositeOperation::SourceIn","value":"CompositeOperation::SourceIn","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Draws new shapes over existing canvas content, but only where existing canvas content overlaps. Anything not in that area becomes transparent.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12682},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442739,"byte_end":442748,"line_start":73,"line_end":73,"column_start":5,"column_end":14},"name":"SourceOut","qualname":"::webapi::rendering_context::CompositeOperation::SourceOut","value":"CompositeOperation::SourceOut","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" New shapes are drawn where there is no existing canvas content. Everything else (including old canvas content) is made transparent.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12684},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442853,"byte_end":442863,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"SourceAtop","qualname":"::webapi::rendering_context::CompositeOperation::SourceAtop","value":"CompositeOperation::SourceAtop","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Draws new shapes only where there is existing canvas content, over existing canvas content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12686},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442925,"byte_end":442940,"line_start":77,"line_end":77,"column_start":5,"column_end":20},"name":"DestinationOver","qualname":"::webapi::rendering_context::CompositeOperation::DestinationOver","value":"CompositeOperation::DestinationOver","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Draws new shapes behind existing canvas content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12688},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443074,"byte_end":443087,"line_start":79,"line_end":79,"column_start":5,"column_end":18},"name":"DestinationIn","qualname":"::webapi::rendering_context::CompositeOperation::DestinationIn","value":"CompositeOperation::DestinationIn","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Keeps existing canvas content where it overlaps with the new shape. Everything outside the overlap is made transparent.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12690},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443243,"byte_end":443257,"line_start":81,"line_end":81,"column_start":5,"column_end":19},"name":"DestinationOut","qualname":"::webapi::rendering_context::CompositeOperation::DestinationOut","value":"CompositeOperation::DestinationOut","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" The existing content is kept where it doesn't overlap with the new shape. Everything else, including the new shape area, is made transparent.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12692},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443391,"byte_end":443406,"line_start":83,"line_end":83,"column_start":5,"column_end":20},"name":"DestinationAtop","qualname":"::webapi::rendering_context::CompositeOperation::DestinationAtop","value":"CompositeOperation::DestinationAtop","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Existing content is kept only where it overlaps with the new shape. The new shape is drawn behind the existing content.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12694},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443498,"byte_end":443505,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"Lighter","qualname":"::webapi::rendering_context::CompositeOperation::Lighter","value":"CompositeOperation::Lighter","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Where both shapes overlap, the new color is determined by adding color values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12696},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443547,"byte_end":443551,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Copy","qualname":"::webapi::rendering_context::CompositeOperation::Copy","value":"CompositeOperation::Copy","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Only the new shape is shown\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12698},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443612,"byte_end":443615,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"Xor","qualname":"::webapi::rendering_context::CompositeOperation::Xor","value":"CompositeOperation::Xor","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Where both shapes overlap, make it transparent\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12700},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443754,"byte_end":443762,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::webapi::rendering_context::CompositeOperation::Multiply","value":"CompositeOperation::Multiply","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" The pixels of the new and old layer are multiplied. (Pixel values are in the range of [0,1], so this makes a darker picture)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12702},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":443935,"byte_end":443941,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Screen","qualname":"::webapi::rendering_context::CompositeOperation::Screen","value":"CompositeOperation::Screen","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Pixels from both new and old are inverted, multiplied together, then inverted again. (Pixel values are in the range of [0,1], so this makes a lighter picture)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12704},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444064,"byte_end":444071,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Overlay","qualname":"::webapi::rendering_context::CompositeOperation::Overlay","value":"CompositeOperation::Overlay","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Applies Multiply to dark colors in the existing content, and Screen to bright colors in the existing content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12706},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444112,"byte_end":444118,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Darken","qualname":"::webapi::rendering_context::CompositeOperation::Darken","value":"CompositeOperation::Darken","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Retains the darkest pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12708},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444159,"byte_end":444166,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"Lighten","qualname":"::webapi::rendering_context::CompositeOperation::Lighten","value":"CompositeOperation::Lighten","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Retains the lighest pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444232,"byte_end":444242,"line_start":101,"line_end":101,"column_start":5,"column_end":15},"name":"ColorDodge","qualname":"::webapi::rendering_context::CompositeOperation::ColorDodge","value":"CompositeOperation::ColorDodge","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Divides the bottom layer by the inverted top layer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12712},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444337,"byte_end":444346,"line_start":103,"line_end":103,"column_start":5,"column_end":14},"name":"ColorBurn","qualname":"::webapi::rendering_context::CompositeOperation::ColorBurn","value":"CompositeOperation::ColorBurn","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Divides the inverted bottom layer by the top layer, and then inverts the result.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12714},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444450,"byte_end":444459,"line_start":105,"line_end":105,"column_start":5,"column_end":14},"name":"HardLight","qualname":"::webapi::rendering_context::CompositeOperation::HardLight","value":"CompositeOperation::HardLight","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" A combination of multiply and screen like overlay, but with top and bottom layer swapped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12716},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444565,"byte_end":444574,"line_start":107,"line_end":107,"column_start":5,"column_end":14},"name":"SoftLight","qualname":"::webapi::rendering_context::CompositeOperation::SoftLight","value":"CompositeOperation::SoftLight","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" A softer version of hard-light. Pure black or white does not result in pure black or white.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12718},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444689,"byte_end":444699,"line_start":109,"line_end":109,"column_start":5,"column_end":15},"name":"Difference","qualname":"::webapi::rendering_context::CompositeOperation::Difference","value":"CompositeOperation::Difference","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Subtracts the bottom layer from the top layer or the other way round to always get a positive value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12720},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444755,"byte_end":444764,"line_start":111,"line_end":111,"column_start":5,"column_end":14},"name":"Exclusion","qualname":"::webapi::rendering_context::CompositeOperation::Exclusion","value":"CompositeOperation::Exclusion","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Like difference, but with lower contrast.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12722},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444870,"byte_end":444873,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"Hue","qualname":"::webapi::rendering_context::CompositeOperation::Hue","value":"CompositeOperation::Hue","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12724},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":444979,"byte_end":444989,"line_start":115,"line_end":115,"column_start":5,"column_end":15},"name":"Saturation","qualname":"::webapi::rendering_context::CompositeOperation::Saturation","value":"CompositeOperation::Saturation","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12726},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445095,"byte_end":445100,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Color","qualname":"::webapi::rendering_context::CompositeOperation::Color","value":"CompositeOperation::Color","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12728},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445206,"byte_end":445216,"line_start":119,"line_end":119,"column_start":5,"column_end":15},"name":"Luminosity","qualname":"::webapi::rendering_context::CompositeOperation::Luminosity","value":"CompositeOperation::Luminosity","parent":{"krate":0,"index":12677},"children":[],"decl_id":null,"docs":" Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12677},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":442339,"byte_end":442357,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"name":"CompositeOperation","qualname":"::webapi::rendering_context::CompositeOperation","value":"CompositeOperation::{SourceOver, SourceIn, SourceOut, SourceAtop, DestinationOver, DestinationIn, DestinationOut, DestinationAtop, Lighter, Copy, Xor, Multiply, Screen, Overlay, Darken, Lighten, ColorDodge, ColorBurn, HardLight, SoftLight, Difference, Exclusion, Hue, Saturation, Color, Luminosity}","parent":null,"children":[{"krate":0,"index":12678},{"krate":0,"index":12680},{"krate":0,"index":12682},{"krate":0,"index":12684},{"krate":0,"index":12686},{"krate":0,"index":12688},{"krate":0,"index":12690},{"krate":0,"index":12692},{"krate":0,"index":12694},{"krate":0,"index":12696},{"krate":0,"index":12698},{"krate":0,"index":12700},{"krate":0,"index":12702},{"krate":0,"index":12704},{"krate":0,"index":12706},{"krate":0,"index":12708},{"krate":0,"index":12710},{"krate":0,"index":12712},{"krate":0,"index":12714},{"krate":0,"index":12716},{"krate":0,"index":12718},{"krate":0,"index":12720},{"krate":0,"index":12722},{"krate":0,"index":12724},{"krate":0,"index":12726},{"krate":0,"index":12728}],"decl_id":null,"docs":" The type of compositing operation to apply when drawing new shapes","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12742},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445608,"byte_end":445615,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"NonZero","qualname":"::webapi::rendering_context::FillRule::NonZero","value":"FillRule::NonZero","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":" [Non-zero winding rule](https://en.wikipedia.org/wiki/Nonzero-rule)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12744},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445706,"byte_end":445713,"line_start":131,"line_end":131,"column_start":5,"column_end":12},"name":"EvenOdd","qualname":"::webapi::rendering_context::FillRule::EvenOdd","value":"FillRule::EvenOdd","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":" [Even-odd winding rule](https://en.wikipedia.org/wiki/Even%E2%80%93odd_rule)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12741},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445517,"byte_end":445525,"line_start":127,"line_end":127,"column_start":10,"column_end":18},"name":"FillRule","qualname":"::webapi::rendering_context::FillRule","value":"FillRule::{NonZero, EvenOdd}","parent":null,"children":[{"krate":0,"index":12742},{"krate":0,"index":12744}],"decl_id":null,"docs":" The algorithm by which to determine if a point is inside a path or outside a path.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12758},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445875,"byte_end":445881,"line_start":138,"line_end":138,"column_start":5,"column_end":11},"name":"String","qualname":"::webapi::rendering_context::CanvasStyle::String","value":"CanvasStyle::String(String)","parent":{"krate":0,"index":12757},"children":[],"decl_id":null,"docs":" String representing the style\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12761},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445941,"byte_end":445955,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"CanvasGradient","qualname":"::webapi::rendering_context::CanvasStyle::CanvasGradient","value":"CanvasStyle::CanvasGradient(CanvasGradient)","parent":{"krate":0,"index":12757},"children":[],"decl_id":null,"docs":" CanvasGradient representing the style\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12764},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":446022,"byte_end":446035,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"CanvasPattern","qualname":"::webapi::rendering_context::CanvasStyle::CanvasPattern","value":"CanvasStyle::CanvasPattern(CanvasPattern)","parent":{"krate":0,"index":12757},"children":[],"decl_id":null,"docs":" CanvasPattern representing the style\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12757},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":445819,"byte_end":445830,"line_start":136,"line_end":136,"column_start":10,"column_end":21},"name":"CanvasStyle","qualname":"::webapi::rendering_context::CanvasStyle","value":"CanvasStyle::{String, CanvasGradient, CanvasPattern}","parent":null,"children":[{"krate":0,"index":12758},{"krate":0,"index":12761},{"krate":0,"index":12764}],"decl_id":null,"docs":" Certain style functions can return multiple types\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12779},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":446388,"byte_end":446392,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"Butt","qualname":"::webapi::rendering_context::LineCap::Butt","value":"LineCap::Butt","parent":{"krate":0,"index":12778},"children":[],"decl_id":null,"docs":" The ends of lines are squared off at the endpoints\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12781},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":446436,"byte_end":446441,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"Round","qualname":"::webapi::rendering_context::LineCap::Round","value":"LineCap::Round","parent":{"krate":0,"index":12778},"children":[],"decl_id":null,"docs":" The ends of lines are rounded\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12783},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":446570,"byte_end":446576,"line_start":156,"line_end":156,"column_start":5,"column_end":11},"name":"Square","qualname":"::webapi::rendering_context::LineCap::Square","value":"LineCap::Square","parent":{"krate":0,"index":12778},"children":[],"decl_id":null,"docs":" The ends of lines are squared off by adding a box with an equal width and half the height of the line's thickness.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12778},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":446315,"byte_end":446322,"line_start":150,"line_end":150,"column_start":10,"column_end":17},"name":"LineCap","qualname":"::webapi::rendering_context::LineCap","value":"LineCap::{Butt, Round, Square}","parent":null,"children":[{"krate":0,"index":12779},{"krate":0,"index":12781},{"krate":0,"index":12783}],"decl_id":null,"docs":" How the end points of every line are drawn.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12797},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447117,"byte_end":447122,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"Bevel","qualname":"::webapi::rendering_context::LineJoin::Bevel","value":"LineJoin::Bevel","parent":{"krate":0,"index":12796},"children":[],"decl_id":null,"docs":" Fills an additional triangular area\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12799},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447170,"byte_end":447175,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Round","qualname":"::webapi::rendering_context::LineJoin::Round","value":"LineJoin::Round","parent":{"krate":0,"index":12796},"children":[],"decl_id":null,"docs":" Rounds off the corners of a shape\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12801},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447281,"byte_end":447286,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Miter","qualname":"::webapi::rendering_context::LineJoin::Miter","value":"LineJoin::Miter","parent":{"krate":0,"index":12796},"children":[],"decl_id":null,"docs":" Connected segments are joined by extending their outside edges to connect at a single point\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12796},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447058,"byte_end":447066,"line_start":166,"line_end":166,"column_start":10,"column_end":18},"name":"LineJoin","qualname":"::webapi::rendering_context::LineJoin","value":"LineJoin::{Bevel, Round, Miter}","parent":null,"children":[{"krate":0,"index":12797},{"krate":0,"index":12799},{"krate":0,"index":12801}],"decl_id":null,"docs":" determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are\n joined together (degenerate segments with zero lengths, whose specified endpoints and control points are\n exactly at the same position, are skipped).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12815},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447560,"byte_end":447566,"line_start":181,"line_end":181,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::webapi::rendering_context::Repetition::Repeat","value":"Repetition::Repeat","parent":{"krate":0,"index":12814},"children":[],"decl_id":null,"docs":" Repeat in both directions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12817},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447600,"byte_end":447607,"line_start":183,"line_end":183,"column_start":5,"column_end":12},"name":"RepeatX","qualname":"::webapi::rendering_context::Repetition::RepeatX","value":"Repetition::RepeatX","parent":{"krate":0,"index":12814},"children":[],"decl_id":null,"docs":" Repeat horizontally\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12819},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447639,"byte_end":447646,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"RepeatY","qualname":"::webapi::rendering_context::Repetition::RepeatY","value":"Repetition::RepeatY","parent":{"krate":0,"index":12814},"children":[],"decl_id":null,"docs":" Repeat vertically\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12821},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447673,"byte_end":447681,"line_start":187,"line_end":187,"column_start":5,"column_end":13},"name":"NoRepeat","qualname":"::webapi::rendering_context::Repetition::NoRepeat","value":"Repetition::NoRepeat","parent":{"krate":0,"index":12814},"children":[],"decl_id":null,"docs":" Don't repeat\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12814},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447509,"byte_end":447519,"line_start":179,"line_end":179,"column_start":10,"column_end":20},"name":"Repetition","qualname":"::webapi::rendering_context::Repetition","value":"Repetition::{Repeat, RepeatX, RepeatY, NoRepeat}","parent":null,"children":[{"krate":0,"index":12815},{"krate":0,"index":12817},{"krate":0,"index":12819},{"krate":0,"index":12821}],"decl_id":null,"docs":" An enum indicating how to repeat the image.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12835},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447975,"byte_end":447979,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"name":"Left","qualname":"::webapi::rendering_context::TextAlign::Left","value":"TextAlign::Left","parent":{"krate":0,"index":12834},"children":[],"decl_id":null,"docs":" Text is left-aligned\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12837},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448015,"byte_end":448020,"line_start":199,"line_end":199,"column_start":5,"column_end":10},"name":"Right","qualname":"::webapi::rendering_context::TextAlign::Right","value":"TextAlign::Right","parent":{"krate":0,"index":12834},"children":[],"decl_id":null,"docs":" Text is right-aligned\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12839},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448051,"byte_end":448057,"line_start":201,"line_end":201,"column_start":5,"column_end":11},"name":"Center","qualname":"::webapi::rendering_context::TextAlign::Center","value":"TextAlign::Center","parent":{"krate":0,"index":12834},"children":[],"decl_id":null,"docs":" Text is centered\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12841},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448142,"byte_end":448147,"line_start":203,"line_end":203,"column_start":5,"column_end":10},"name":"Start","qualname":"::webapi::rendering_context::TextAlign::Start","value":"TextAlign::Start","parent":{"krate":0,"index":12834},"children":[],"decl_id":null,"docs":" Text is aligned at the normal start of the line for the current locale\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12843},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448230,"byte_end":448233,"line_start":205,"line_end":205,"column_start":5,"column_end":8},"name":"End","qualname":"::webapi::rendering_context::TextAlign::End","value":"TextAlign::End","parent":{"krate":0,"index":12834},"children":[],"decl_id":null,"docs":" Text is aligned at the normal end of the line for the current locale\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12834},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":447930,"byte_end":447939,"line_start":195,"line_end":195,"column_start":10,"column_end":19},"name":"TextAlign","qualname":"::webapi::rendering_context::TextAlign","value":"TextAlign::{Left, Right, Center, Start, End}","parent":null,"children":[{"krate":0,"index":12835},{"krate":0,"index":12837},{"krate":0,"index":12839},{"krate":0,"index":12841},{"krate":0,"index":12843}],"decl_id":null,"docs":" Specifies text alignment","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12857},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448571,"byte_end":448574,"line_start":215,"line_end":215,"column_start":5,"column_end":8},"name":"Top","qualname":"::webapi::rendering_context::TextBaseline::Top","value":"TextBaseline::Top","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is top of the em square\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12859},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448627,"byte_end":448634,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"Hanging","qualname":"::webapi::rendering_context::TextBaseline::Hanging","value":"TextBaseline::Hanging","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is the hanging baseline.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12861},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448693,"byte_end":448699,"line_start":219,"line_end":219,"column_start":5,"column_end":11},"name":"Middle","qualname":"::webapi::rendering_context::TextBaseline::Middle","value":"TextBaseline::Middle","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is the middle of the em square\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12863},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448772,"byte_end":448782,"line_start":221,"line_end":221,"column_start":5,"column_end":15},"name":"Alphabetic","qualname":"::webapi::rendering_context::TextBaseline::Alphabetic","value":"TextBaseline::Alphabetic","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is the normal alphabetic baseline. (default)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12865},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448838,"byte_end":448849,"line_start":223,"line_end":223,"column_start":5,"column_end":16},"name":"Ideographic","qualname":"::webapi::rendering_context::TextBaseline::Ideographic","value":"TextBaseline::Ideographic","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is the ideographic baseline\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12867},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448912,"byte_end":448918,"line_start":225,"line_end":225,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::webapi::rendering_context::TextBaseline::Bottom","value":"TextBaseline::Bottom","parent":{"krate":0,"index":12856},"children":[],"decl_id":null,"docs":" Text baseline is the bottom of the bounding box.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12856},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":448506,"byte_end":448518,"line_start":213,"line_end":213,"column_start":10,"column_end":22},"name":"TextBaseline","qualname":"::webapi::rendering_context::TextBaseline","value":"TextBaseline::{Top, Hanging, Middle, Alphabetic, Ideographic, Bottom}","parent":null,"children":[{"krate":0,"index":12857},{"krate":0,"index":12859},{"krate":0,"index":12861},{"krate":0,"index":12863},{"krate":0,"index":12865},{"krate":0,"index":12867}],"decl_id":null,"docs":" Text baseline being used when drawing text","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12891},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449221,"byte_end":449232,"line_start":233,"line_end":233,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::webapi::rendering_context::AddColorStopError::SyntaxError","value":"AddColorStopError::SyntaxError(SyntaxError)","parent":{"krate":0,"index":12890},"children":[],"decl_id":null,"docs":" A SyntaxError if the color could not be parsed as a valid CSS color\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12894},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449313,"byte_end":449327,"line_start":235,"line_end":235,"column_start":5,"column_end":19},"name":"IndexSizeError","qualname":"::webapi::rendering_context::AddColorStopError::IndexSizeError","value":"AddColorStopError::IndexSizeError(IndexSizeError)","parent":{"krate":0,"index":12890},"children":[],"decl_id":null,"docs":" An IndexSizeError if the offset was not between 0 and 1, inclusive\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12890},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449122,"byte_end":449139,"line_start":231,"line_end":231,"column_start":5,"column_end":22},"name":"AddColorStopError","qualname":"::webapi::rendering_context::AddColorStopError","value":"AddColorStopError::{SyntaxError, IndexSizeError}","parent":null,"children":[{"krate":0,"index":12891},{"krate":0,"index":12894}],"decl_id":null,"docs":" A enum of the exceptions that CanvasGradient.add_color_stop() may throw\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12912},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449572,"byte_end":449586,"line_start":242,"line_end":242,"column_start":5,"column_end":19},"name":"IndexSizeError","qualname":"::webapi::rendering_context::DrawImageError::IndexSizeError","value":"DrawImageError::IndexSizeError(IndexSizeError)","parent":{"krate":0,"index":12911},"children":[],"decl_id":null,"docs":" An IndexSizeError if the source or destination rectangle has an width or height of 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12915},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449652,"byte_end":449669,"line_start":244,"line_end":244,"column_start":5,"column_end":22},"name":"InvalidStateError","qualname":"::webapi::rendering_context::DrawImageError::InvalidStateError","value":"DrawImageError::InvalidStateError(InvalidStateError)","parent":{"krate":0,"index":12911},"children":[],"decl_id":null,"docs":" An InvalidStateError if the image has no image data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12918},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449703,"byte_end":449720,"line_start":246,"line_end":246,"column_start":5,"column_end":22},"name":"NotSupportedError","qualname":"::webapi::rendering_context::DrawImageError::NotSupportedError","value":"DrawImageError::NotSupportedError(NotSupportedError)","parent":{"krate":0,"index":12911},"children":[],"decl_id":null,"docs":" A NotSupportedError\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12921},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449794,"byte_end":449803,"line_start":248,"line_end":248,"column_start":5,"column_end":14},"name":"TypeError","qualname":"::webapi::rendering_context::DrawImageError::TypeError","value":"DrawImageError::TypeError(TypeError)","parent":{"krate":0,"index":12911},"children":[],"decl_id":null,"docs":" A TypeError if the specified source element isn't supported\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12911},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449459,"byte_end":449473,"line_start":240,"line_end":240,"column_start":5,"column_end":19},"name":"DrawImageError","qualname":"::webapi::rendering_context::DrawImageError","value":"DrawImageError::{IndexSizeError, InvalidStateError, NotSupportedError, TypeError}","parent":null,"children":[{"krate":0,"index":12912},{"krate":0,"index":12915},{"krate":0,"index":12918},{"krate":0,"index":12921}],"decl_id":null,"docs":" A enum of the exceptions that CanvasRenderingContext2D.draw_image() and similar may throw\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12939},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450004,"byte_end":450018,"line_start":255,"line_end":255,"column_start":5,"column_end":19},"name":"IndexSizeError","qualname":"::webapi::rendering_context::GetImageDataError::IndexSizeError","value":"GetImageDataError::IndexSizeError(IndexSizeError)","parent":{"krate":0,"index":12938},"children":[],"decl_id":null,"docs":" An IndexSizeError if thw width or height is 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12942},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450048,"byte_end":450061,"line_start":257,"line_end":257,"column_start":5,"column_end":18},"name":"SecurityError","qualname":"::webapi::rendering_context::GetImageDataError::SecurityError","value":"GetImageDataError::SecurityError(SecurityError)","parent":{"krate":0,"index":12938},"children":[],"decl_id":null,"docs":" A SecurityError\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12938},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":449927,"byte_end":449944,"line_start":253,"line_end":253,"column_start":5,"column_end":22},"name":"GetImageDataError","qualname":"::webapi::rendering_context::GetImageDataError","value":"GetImageDataError::{IndexSizeError, SecurityError}","parent":null,"children":[{"krate":0,"index":12939},{"krate":0,"index":12942}],"decl_id":null,"docs":" A enum of the exceptions that CanvasRenderingContext2D.get_image_data() may throw\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":451620,"byte_end":451634,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"add_color_stop","qualname":"<CanvasGradient>::add_color_stop","value":"fn (&self, offset: f64, color: &str) -> Result<(), AddColorStopError>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new stop, defined by an offset and a color, to the gradient. If the offset is\n not between 0 and 1, an INDEX_SIZE_ERR is returned, if the color can't be parsed as a\n CSS <color>, a SYNTAX_ERR is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":452657,"byte_end":452667,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"get_height","qualname":"<ImageData>::get_height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of rows in the image data object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":453024,"byte_end":453033,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"get_width","qualname":"<ImageData>::get_width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of pixels per row in the image data object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":453596,"byte_end":453606,"line_start":354,"line_end":354,"column_start":12,"column_end":22},"name":"get_canvas","qualname":"<CanvasRenderingContext2d>::get_canvas","value":"fn (&self) -> CanvasElement","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.canvas property is a read-only reference to the HTMLCanvasElement\n object that is associated with the context. It might be null if there is no association with an <canvas> element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":454091,"byte_end":454105,"line_start":365,"line_end":365,"column_start":12,"column_end":26},"name":"get_fill_style","qualname":"<CanvasRenderingContext2d>::get_fill_style","value":"fn (&self) -> CanvasStyle","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color or style to use inside shapes.\n The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":454590,"byte_end":454610,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"set_fill_style_color","qualname":"<CanvasRenderingContext2d>::set_fill_style_color","value":"fn (&self, color: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color or style to use inside shapes.\n The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":455080,"byte_end":455103,"line_start":387,"line_end":387,"column_start":12,"column_end":35},"name":"set_fill_style_gradient","qualname":"<CanvasRenderingContext2d>::set_fill_style_gradient","value":"fn (&self, gradient: &CanvasGradient) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color or style to use inside shapes.\n The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":455590,"byte_end":455612,"line_start":398,"line_end":398,"column_start":12,"column_end":34},"name":"set_fill_style_pattern","qualname":"<CanvasRenderingContext2d>::set_fill_style_pattern","value":"fn (&self, pattern: &CanvasPattern) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color or style to use inside shapes.\n The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":456179,"byte_end":456187,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"get_font","qualname":"<CanvasRenderingContext2d>::get_font","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.font property of the Canvas 2D API specifies the current\n text style being used when drawing text. This string uses the same syntax as the CSS\n font specifier. The default font is 10px sans-serif.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":456735,"byte_end":456743,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"set_font","qualname":"<CanvasRenderingContext2d>::set_font","value":"fn (&self, font: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.font property of the Canvas 2D API specifies the current\n text style being used when drawing text. This string uses the same syntax as the CSS\n font specifier. The default font is 10px sans-serif.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":457331,"byte_end":457347,"line_start":434,"line_end":434,"column_start":12,"column_end":28},"name":"get_global_alpha","qualname":"<CanvasRenderingContext2d>::get_global_alpha","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.globalAlpha property of the Canvas 2D API specifies the alpha\n value that is applied to shapes and images before they are drawn onto the canvas.\n The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":457940,"byte_end":457956,"line_start":446,"line_end":446,"column_start":12,"column_end":28},"name":"set_global_alpha","qualname":"<CanvasRenderingContext2d>::set_global_alpha","value":"fn (&self, global_alpha: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.globalAlpha property of the Canvas 2D API specifies the alpha\n value that is applied to shapes and images before they are drawn onto the canvas.\n The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":458594,"byte_end":458624,"line_start":458,"line_end":458,"column_start":12,"column_end":42},"name":"get_global_composite_operation","qualname":"<CanvasRenderingContext2d>::get_global_composite_operation","value":"fn (&self) -> CompositeOperation","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.globalCompositeOperation property of the Canvas 2D API sets the\n type of compositing operation to apply when drawing new shapes, where type is a string identifying\n which of the compositing or blending mode operations to use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":460976,"byte_end":461006,"line_start":499,"line_end":499,"column_start":12,"column_end":42},"name":"set_global_composite_operation","qualname":"<CanvasRenderingContext2d>::set_global_composite_operation","value":"fn (&self, composite_operation: CompositeOperation) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The CanvasRenderingContext2D.globalCompositeOperation property of the Canvas 2D API sets the\n type of compositing operation to apply when drawing new shapes, where type is a string identifying\n which of the compositing or blending mode operations to use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":463153,"byte_end":463165,"line_start":539,"line_end":539,"column_start":12,"column_end":24},"name":"get_line_cap","qualname":"<CanvasRenderingContext2d>::get_line_cap","value":"fn (&self) -> LineCap","parent":null,"children":[],"decl_id":null,"docs":" Determines how the end points of every line are drawn.\n There are three possible values for this property and those are: butt, round and square.\n By default this property is set to butt.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":463951,"byte_end":463963,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"set_line_cap","qualname":"<CanvasRenderingContext2d>::set_line_cap","value":"fn (&self, line_cap: LineCap) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Determines how the end points of every line are drawn.\n There are three possible values for this property and those are: butt, round and square.\n By default this property is set to butt.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":464581,"byte_end":464601,"line_start":573,"line_end":573,"column_start":12,"column_end":32},"name":"get_line_dash_offset","qualname":"<CanvasRenderingContext2d>::get_line_dash_offset","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Sets the line dash pattern offset or \"phase\" to achieve a \"marching ants\" effect, for example.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":465032,"byte_end":465052,"line_start":583,"line_end":583,"column_start":12,"column_end":32},"name":"set_line_dash_offset","qualname":"<CanvasRenderingContext2d>::set_line_dash_offset","value":"fn (&self, line_dash_offset: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the line dash pattern offset or \"phase\" to achieve a \"marching ants\" effect, for example.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":465668,"byte_end":465681,"line_start":595,"line_end":595,"column_start":12,"column_end":25},"name":"get_line_join","qualname":"<CanvasRenderingContext2d>::get_line_join","value":"fn (&self) -> LineJoin","parent":null,"children":[],"decl_id":null,"docs":" Determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are\n joined together (degenerate segments with zero lengths, whose specified endpoints and control points are\n exactly at the same position, are skipped).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":466545,"byte_end":466558,"line_start":613,"line_end":613,"column_start":12,"column_end":25},"name":"set_line_join","qualname":"<CanvasRenderingContext2d>::set_line_join","value":"fn (&self, line_join: LineJoin) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are\n joined together (degenerate segments with zero lengths, whose specified endpoints and control points are\n exactly at the same position, are skipped).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":467307,"byte_end":467321,"line_start":629,"line_end":629,"column_start":12,"column_end":26},"name":"get_line_width","qualname":"<CanvasRenderingContext2d>::get_line_width","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Sets the thickness of lines in space units. When getting, it returns the current value (1.0 by default).\n When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":467875,"byte_end":467889,"line_start":640,"line_end":640,"column_start":12,"column_end":26},"name":"set_line_width","qualname":"<CanvasRenderingContext2d>::set_line_width","value":"fn (&self, line_width: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the thickness of lines in space units. When getting, it returns the current value (1.0 by default).\n When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":468457,"byte_end":468472,"line_start":651,"line_end":651,"column_start":12,"column_end":27},"name":"get_miter_limit","qualname":"<CanvasRenderingContext2d>::get_miter_limit","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" sets the miter limit ratio in space units. When getting, it returns the current value (10.0 by default).\n When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":469029,"byte_end":469044,"line_start":662,"line_end":662,"column_start":12,"column_end":27},"name":"set_miter_limit","qualname":"<CanvasRenderingContext2d>::set_miter_limit","value":"fn (&self, miter_limit: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" sets the miter limit ratio in space units. When getting, it returns the current value (10.0 by default).\n When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":469568,"byte_end":469583,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"get_shadow_blur","qualname":"<CanvasRenderingContext2d>::get_shadow_blur","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Specifies the level of the blurring effect; this value doesn't correspond to a number of pixels and is not\n affected by the current transformation matrix. The default value is 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":470093,"byte_end":470108,"line_start":684,"line_end":684,"column_start":12,"column_end":27},"name":"set_shadow_blur","qualname":"<CanvasRenderingContext2d>::set_shadow_blur","value":"fn (&self, shadow_blur: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the level of the blurring effect; this value doesn't correspond to a number of pixels and is not\n affected by the current transformation matrix. The default value is 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":470483,"byte_end":470499,"line_start":694,"line_end":694,"column_start":12,"column_end":28},"name":"get_shadow_color","qualname":"<CanvasRenderingContext2d>::get_shadow_color","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color of the shadow.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":470864,"byte_end":470880,"line_start":704,"line_end":704,"column_start":12,"column_end":28},"name":"set_shadow_color","qualname":"<CanvasRenderingContext2d>::set_shadow_color","value":"fn (&self, shadow_color: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color of the shadow.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":471306,"byte_end":471325,"line_start":714,"line_end":714,"column_start":12,"column_end":31},"name":"get_shadow_offset_x","qualname":"<CanvasRenderingContext2d>::get_shadow_offset_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Specifies the distance that the shadow will be offset in horizontal distance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":471736,"byte_end":471755,"line_start":724,"line_end":724,"column_start":12,"column_end":31},"name":"set_shadow_offset_x","qualname":"<CanvasRenderingContext2d>::set_shadow_offset_x","value":"fn (&self, shadow_offset_x: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the distance that the shadow will be offset in horizontal distance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":472186,"byte_end":472205,"line_start":734,"line_end":734,"column_start":12,"column_end":31},"name":"get_shadow_offset_y","qualname":"<CanvasRenderingContext2d>::get_shadow_offset_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Specifies the distance that the shadow will be offset in vertical distance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":472614,"byte_end":472633,"line_start":744,"line_end":744,"column_start":12,"column_end":31},"name":"set_shadow_offset_y","qualname":"<CanvasRenderingContext2d>::set_shadow_offset_y","value":"fn (&self, shadow_offset_y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the distance that the shadow will be offset in vertical distance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":473078,"byte_end":473094,"line_start":754,"line_end":754,"column_start":12,"column_end":28},"name":"get_stroke_style","qualname":"<CanvasRenderingContext2d>::get_stroke_style","value":"fn (&self) -> CanvasStyle","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color or style to use for the lines around shapes. The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":473523,"byte_end":473545,"line_start":764,"line_end":764,"column_start":12,"column_end":34},"name":"set_stroke_style_color","qualname":"<CanvasRenderingContext2d>::set_stroke_style_color","value":"fn (&self, color: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color or style to use for the lines around shapes. The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":473968,"byte_end":473993,"line_start":774,"line_end":774,"column_start":12,"column_end":37},"name":"set_stroke_style_gradient","qualname":"<CanvasRenderingContext2d>::set_stroke_style_gradient","value":"fn (&self, gradient: &CanvasGradient) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color or style to use for the lines around shapes. The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":474433,"byte_end":474457,"line_start":784,"line_end":784,"column_start":12,"column_end":36},"name":"set_stroke_style_pattern","qualname":"<CanvasRenderingContext2d>::set_stroke_style_pattern","value":"fn (&self, pattern: &CanvasPattern) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the color or style to use for the lines around shapes. The default is #000 (black).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":475033,"byte_end":475047,"line_start":796,"line_end":796,"column_start":12,"column_end":26},"name":"get_text_align","qualname":"<CanvasRenderingContext2d>::get_text_align","value":"fn (&self) -> TextAlign","parent":null,"children":[],"decl_id":null,"docs":" specifies the current text alignment being used when drawing text.\n Beware that the alignment is based on the x value of the fillText() method.\n So if textAlign is \"center\", then the text would be drawn at x - (width / 2).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":475969,"byte_end":475983,"line_start":816,"line_end":816,"column_start":12,"column_end":26},"name":"set_text_align","qualname":"<CanvasRenderingContext2d>::set_text_align","value":"fn (&self, text_align: TextAlign) -> ()","parent":null,"children":[],"decl_id":null,"docs":" specifies the current text alignment being used when drawing text.\n Beware that the alignment is based on the x value of the fillText() method.\n So if textAlign is \"center\", then the text would be drawn at x - (width / 2).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":476658,"byte_end":476675,"line_start":833,"line_end":833,"column_start":12,"column_end":29},"name":"get_text_baseline","qualname":"<CanvasRenderingContext2d>::get_text_baseline","value":"fn (&self) -> TextBaseline","parent":null,"children":[],"decl_id":null,"docs":" Specifies the current text baseline being used when drawing text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":477538,"byte_end":477555,"line_start":852,"line_end":852,"column_start":12,"column_end":29},"name":"set_text_baseline","qualname":"<CanvasRenderingContext2d>::set_text_baseline","value":"fn (&self, text_baseline: TextBaseline) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies the current text baseline being used when drawing text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":478462,"byte_end":478465,"line_start":872,"line_end":872,"column_start":12,"column_end":15},"name":"arc","qualname":"<CanvasRenderingContext2d>::arc","value":"fn (&self, x: f64, y: f64, radius: f64, start_angle: f64, end_angle: f64, anticlockwise: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an arc to the path which is centered at (x, y) position with radius r starting\n at startAngle and ending at endAngle going in the given direction by anticlockwise\n (defaulting to clockwise).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":479924,"byte_end":479930,"line_start":893,"line_end":893,"column_start":12,"column_end":18},"name":"arc_to","qualname":"<CanvasRenderingContext2d>::arc_to","value":"fn (&self, x1: f64, y1: f64, x2: f64, y2: f64, radius: f64) -> Result<(), IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Adds an arc to the path with the given control points and radius.\n The arc drawn will be a part of a circle, never elliptical.\n Typical use could be making a rounded corner.\n One way to think about the arc drawn is to imagine two straight segments, from the\n starting point (latest point in current path) to the first control point, and then\n from the first control point to the second control point. These two segments form\n a sharp corner with the first control point being in the corner. Using arcTo, the\n corner will instead be an arc with the given radius.\n The arc is tangential to both segments, which can sometimes produce surprising results,\n e.g. if the radius given is larger than the distance between the starting point and the first control point.\n If the radius specified doesn't make the arc meet the starting point (latest point in the current path),\n the starting point is connected to the arc with a straight line segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":480463,"byte_end":480473,"line_start":903,"line_end":903,"column_start":12,"column_end":22},"name":"begin_path","qualname":"<CanvasRenderingContext2d>::begin_path","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":481070,"byte_end":481085,"line_start":915,"line_end":915,"column_start":12,"column_end":27},"name":"bezier_curve_to","qualname":"<CanvasRenderingContext2d>::bezier_curve_to","value":"fn (&self, cp1x: f64, cp1y: f64, cp2x: f64, cp2y: f64, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a cubic Bézier curve to the path. It requires three points. The first two points\n are control points and the third one is the end point. The starting point is the last\n point in the current path, which can be changed using moveTo() before creating the Bézier curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":481656,"byte_end":481666,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"clear_rect","qualname":"<CanvasRenderingContext2d>::clear_rect","value":"fn (&self, x: f64, y: f64, width: f64, height: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all pixels in the rectangle defined by starting point (x, y) and size (width, height)\n to transparent black, erasing any previously drawn content.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":482247,"byte_end":482251,"line_start":937,"line_end":937,"column_start":12,"column_end":16},"name":"clip","qualname":"<CanvasRenderingContext2d>::clip","value":"fn (&self, fill_rule: FillRule) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Turns the path currently being built into the current clipping path.\n ctx.clip(path, fillRule) is not supported because [(Path2D)](https://developer.mozilla.org/en-US/docs/Web/API/Path2D) is still experimental","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":482926,"byte_end":482936,"line_start":950,"line_end":950,"column_start":12,"column_end":22},"name":"close_path","qualname":"<CanvasRenderingContext2d>::close_path","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Causes the point of the pen to move back to the start of the current sub-path. It tries\n to add a straight line (but does not actually draw it) from the current point to the start.\n If the shape has already been closed or has only one point, this function does nothing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":483350,"byte_end":483372,"line_start":960,"line_end":960,"column_start":12,"column_end":34},"name":"create_linear_gradient","qualname":"<CanvasRenderingContext2d>::create_linear_gradient","value":"fn (&self, x0: f64, y0: f64, x1: f64, y1: f64) -> CanvasGradient","parent":null,"children":[],"decl_id":null,"docs":" Creates a gradient along the line given by the coordinates represented by the parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":483927,"byte_end":483944,"line_start":971,"line_end":971,"column_start":12,"column_end":29},"name":"create_image_data","qualname":"<CanvasRenderingContext2d>::create_image_data","value":"fn (&self, width: f64, height: f64) -> Result<ImageData, IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, blank ImageData object with the specified dimensions.\n All of the pixels in the new object are transparent black.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":484488,"byte_end":484513,"line_start":982,"line_end":982,"column_start":12,"column_end":37},"name":"create_image_data_size_of","qualname":"<CanvasRenderingContext2d>::create_image_data_size_of","value":"fn (&self, image_data: ImageData) -> ImageData","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, blank ImageData object with the specified dimensions.\n All of the pixels in the new object are transparent black.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":485082,"byte_end":485102,"line_start":993,"line_end":993,"column_start":12,"column_end":32},"name":"create_pattern_image","qualname":"<CanvasRenderingContext2d>::create_pattern_image","value":"fn (&self, image: ImageElement, repetition: Repetition) -> CanvasPattern","parent":null,"children":[],"decl_id":null,"docs":" Creates a pattern using the specified image (a CanvasImageSource). It repeats the source in\n the directions specified by the repetition argument. This method returns a CanvasPattern.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":486060,"byte_end":486082,"line_start":1022,"line_end":1022,"column_start":12,"column_end":34},"name":"create_radial_gradient","qualname":"<CanvasRenderingContext2d>::create_radial_gradient","value":"fn (&self, x0: f64, y0: f64, r0: f64, x1: f64, y1: f64, r1: f64) -> Result<CanvasGradient, IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a radial gradient given by the coordinates of the two circles represented by the parameters.\n This method returns a CanvasGradient.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":486643,"byte_end":486663,"line_start":1032,"line_end":1032,"column_start":12,"column_end":32},"name":"draw_focus_if_needed","qualname":"<CanvasRenderingContext2d>::draw_focus_if_needed","value":"fn <T> (&self, element: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a focus ring around the current path or given path, If a given element is focused.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":487082,"byte_end":487092,"line_start":1042,"line_end":1042,"column_start":12,"column_end":22},"name":"draw_image","qualname":"<CanvasRenderingContext2d>::draw_image","value":"fn (&self, image: ImageElement, dx: f64, dy: f64) -> Result<(), DrawImageError>","parent":null,"children":[],"decl_id":null,"docs":" Provides different ways to draw an image onto the canvas.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":487555,"byte_end":487567,"line_start":1052,"line_end":1052,"column_start":12,"column_end":24},"name":"draw_image_d","qualname":"<CanvasRenderingContext2d>::draw_image_d","value":"fn (&self, image: ImageElement, dx: f64, dy: f64, d_width: f64, d_height: f64) -> Result<(), DrawImageError>","parent":null,"children":[],"decl_id":null,"docs":" Provides different ways to draw an image onto the canvas.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":488084,"byte_end":488096,"line_start":1062,"line_end":1062,"column_start":12,"column_end":24},"name":"draw_image_s","qualname":"<CanvasRenderingContext2d>::draw_image_s","value":"fn (&self, image: ImageElement, sx: f64, sy: f64, s_width: f64, s_height: f64, dx: f64, dy: f64, d_width: f64, d_height: f64) -> Result<(), DrawImageError>","parent":null,"children":[],"decl_id":null,"docs":" Provides different ways to draw an image onto the canvas.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":488960,"byte_end":488964,"line_start":1077,"line_end":1077,"column_start":12,"column_end":16},"name":"fill","qualname":"<CanvasRenderingContext2d>::fill","value":"fn (&self, fill_rule: FillRule) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the current or given path with the current fill style using the non-zero or even-odd winding rule.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":489530,"byte_end":489539,"line_start":1089,"line_end":1089,"column_start":12,"column_end":21},"name":"fill_rect","qualname":"<CanvasRenderingContext2d>::fill_rect","value":"fn (&self, x: f64, y: f64, width: f64, height: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a filled rectangle whose starting point is at the coordinates (x, y) with the\n specified width and height and whose style is determined by the fillStyle attribute.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":490218,"byte_end":490227,"line_start":1102,"line_end":1102,"column_start":12,"column_end":21},"name":"fill_text","qualname":"<CanvasRenderingContext2d>::fill_text","value":"fn (&self, text: &str, x: f64, y: f64, max_width: Option<f64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a text string at the specified coordinates, filling the string's characters\n with the current foreground color. An optional parameter allows specifying a maximum\n width for the rendered text, which the user agent will achieve by condensing the\n text or by using a lower font size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":491183,"byte_end":491197,"line_start":1122,"line_end":1122,"column_start":12,"column_end":26},"name":"get_image_data","qualname":"<CanvasRenderingContext2d>::get_image_data","value":"fn (&self, sx: f64, sy: f64, sw: f64, sh: f64) -> Result<ImageData, GetImageDataError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an ImageData object representing the underlying pixel data for the area of the\n canvas denoted by the rectangle which starts at (sx, sy) and has an sw width and sh height.\n This method is not affected by the canvas transformation matrix.\n Pixels outside of the canvas area are present as transparent black values in the returned ImageData.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":491651,"byte_end":491664,"line_start":1132,"line_end":1132,"column_start":12,"column_end":25},"name":"get_line_dash","qualname":"<CanvasRenderingContext2d>::get_line_dash","value":"fn (&self) -> Vec<f64>","parent":null,"children":[],"decl_id":null,"docs":" Gets the current line dash pattern.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":492293,"byte_end":492309,"line_start":1145,"line_end":1145,"column_start":12,"column_end":28},"name":"is_point_in_path","qualname":"<CanvasRenderingContext2d>::is_point_in_path","value":"fn (&self, x: f64, y: f64, fill_rule: FillRule) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reports whether or not the specified point is contained in the current path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":493033,"byte_end":493051,"line_start":1158,"line_end":1158,"column_start":12,"column_end":30},"name":"is_point_in_stroke","qualname":"<CanvasRenderingContext2d>::is_point_in_stroke","value":"fn (&self, x: f64, y: f64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reports whether or not the specified point is inside the area contained by the stroking of a path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":493519,"byte_end":493526,"line_start":1168,"line_end":1168,"column_start":12,"column_end":19},"name":"line_to","qualname":"<CanvasRenderingContext2d>::line_to","value":"fn (&self, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Connects the last point in the sub-path to the x, y coordinates with a straight line (but does not actually draw it).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":493967,"byte_end":493979,"line_start":1178,"line_end":1178,"column_start":12,"column_end":24},"name":"measure_text","qualname":"<CanvasRenderingContext2d>::measure_text","value":"fn (&self, text: &str) -> Result<TextMetrics, SecurityError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a TextMetrics object that contains information about the measured text (such as its width for example).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":494411,"byte_end":494418,"line_start":1188,"line_end":1188,"column_start":12,"column_end":19},"name":"move_to","qualname":"<CanvasRenderingContext2d>::move_to","value":"fn (&self, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the starting point of a new sub-path to the (x, y) coordinates.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":494966,"byte_end":494980,"line_start":1199,"line_end":1199,"column_start":12,"column_end":26},"name":"put_image_data","qualname":"<CanvasRenderingContext2d>::put_image_data","value":"fn (&self, image_data: ImageData, dx: f32, dy: f32) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Paints data from the given ImageData object onto the bitmap. If a dirty rectangle is provided, only the pixels\n from that rectangle are painted. This method is not affected by the canvas transformation matrix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":495703,"byte_end":495723,"line_start":1213,"line_end":1213,"column_start":12,"column_end":32},"name":"put_image_data_dirty","qualname":"<CanvasRenderingContext2d>::put_image_data_dirty","value":"fn (&self, image_data: ImageData, dx: f32, dy: f32, dirty_x: f32, dirty_y: f32, dirty_width: f32, dirty_height: f32) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Paints data from the given ImageData object onto the bitmap. If a dirty rectangle is provided, only the pixels\n from that rectangle are painted. This method is not affected by the canvas transformation matrix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":496718,"byte_end":496736,"line_start":1231,"line_end":1231,"column_start":12,"column_end":30},"name":"quadratic_curve_to","qualname":"<CanvasRenderingContext2d>::quadratic_curve_to","value":"fn (&self, cpx: f64, cpy: f64, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a quadratic Bézier curve to the path. It requires two points.\n The first point is a control point and the second one is the end point.\n The starting point is the last point in the current path, which can be changed using\n moveTo() before creating the quadratic Bézier curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":497349,"byte_end":497353,"line_start":1243,"line_end":1243,"column_start":12,"column_end":16},"name":"rect","qualname":"<CanvasRenderingContext2d>::rect","value":"fn (&self, x: f64, y: f64, width: f64, height: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.\n Those four points are connected by straight lines and the sub-path is marked as closed,\n so that you can fill or stroke this rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":497879,"byte_end":497886,"line_start":1254,"line_end":1254,"column_start":12,"column_end":19},"name":"restore","qualname":"<CanvasRenderingContext2d>::restore","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Restores the most recently saved canvas state by popping the top entry in the drawing state stack.\n If there is no saved state, this method does nothing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":498312,"byte_end":498318,"line_start":1264,"line_end":1264,"column_start":12,"column_end":18},"name":"rotate","qualname":"<CanvasRenderingContext2d>::rotate","value":"fn (&self, angle: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a rotation to the transformation matrix. The angle argument represents a clockwise rotation angle and is expressed in radians.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":498707,"byte_end":498711,"line_start":1274,"line_end":1274,"column_start":12,"column_end":16},"name":"save","qualname":"<CanvasRenderingContext2d>::save","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Saves the entire state of the canvas by pushing the current state onto a stack.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":499484,"byte_end":499489,"line_start":1288,"line_end":1288,"column_start":12,"column_end":17},"name":"scale","qualname":"<CanvasRenderingContext2d>::scale","value":"fn (&self, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" adds a scaling transformation to the canvas units by x horizontally and by y vertically.\n By default, one unit on the canvas is exactly one pixel. If we apply, for instance, a scaling factor of 0.5,\n the resulting unit would become 0.5 pixels and so shapes would be drawn at half size.\n In a similar way setting the scaling factor to 2.0 would increase the unit size and one unit now becomes two pixels.\n This results in shapes being drawn twice as large.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":499975,"byte_end":499988,"line_start":1298,"line_end":1298,"column_start":12,"column_end":25},"name":"set_line_dash","qualname":"<CanvasRenderingContext2d>::set_line_dash","value":"fn (&self, segments: Vec<f64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the line dash pattern used when stroking lines, using an array of values which specify alternating lengths of lines and gaps which describe the pattern.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":500605,"byte_end":500618,"line_start":1309,"line_end":1309,"column_start":12,"column_end":25},"name":"set_transform","qualname":"<CanvasRenderingContext2d>::set_transform","value":"fn (&self, a: f64, b: f64, c: f64, d: f64, e: f64, f: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets (overrides) the current transformation to the identity matrix and then invokes a transformation described by the arguments of this method.\n See also the transform() method, which does not override the current transform matrix and multiplies it with a given one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":501244,"byte_end":501250,"line_start":1321,"line_end":1321,"column_start":12,"column_end":18},"name":"stroke","qualname":"<CanvasRenderingContext2d>::stroke","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Strokes the current or given path with the current stroke style using the non-zero winding rule.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":501690,"byte_end":501701,"line_start":1331,"line_end":1331,"column_start":12,"column_end":23},"name":"stroke_rect","qualname":"<CanvasRenderingContext2d>::stroke_rect","value":"fn (&self, x: f64, y: f64, width: f64, height: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Paints a rectangle which has a starting point at (x, y) and has a w width and an h height onto the canvas, using the current stroke style.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":502469,"byte_end":502480,"line_start":1343,"line_end":1343,"column_start":12,"column_end":23},"name":"stroke_text","qualname":"<CanvasRenderingContext2d>::stroke_text","value":"fn (&self, text: &str, x: f64, y: f64, max_width: Option<f64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Strokes — that is, draws the outlines of — the characters of a specified text string at the given (x, y) position.\n If the optional fourth parameter for a maximum width is provided, the text is scaled to fit that width.\n See the CanvasRenderingContext2D.fillText() method to draw the text with the characters filled with color rather than having just their outlines drawn.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":503373,"byte_end":503382,"line_start":1362,"line_end":1362,"column_start":12,"column_end":21},"name":"transform","qualname":"<CanvasRenderingContext2d>::transform","value":"fn (&self, a: f64, b: f64, c: f64, d: f64, e: f64, f: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the current transformation with the matrix described by the arguments of this method.\n You are able to scale, rotate, move and skew the context.\n See also the setTransform() method which resets the current transform to the identity matrix and then invokes transform().","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":503881,"byte_end":503890,"line_start":1372,"line_end":1372,"column_start":12,"column_end":21},"name":"translate","qualname":"<CanvasRenderingContext2d>::translate","value":"fn (&self, x: f64, y: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a translation transformation by moving the canvas and its origin x horizontally and y vertically on the grid.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":504517,"byte_end":504526,"line_start":1397,"line_end":1397,"column_start":12,"column_end":21},"name":"get_width","qualname":"<TextMetrics>::get_width","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Contains the text's advance width (the width of that inline box) in CSS pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13515},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":506279,"byte_end":506295,"line_start":15,"line_end":15,"column_start":12,"column_end":28},"name":"MutationObserver","qualname":"::webapi::mutation_observer::MutationObserver","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides a way to receive notifications about changes to the DOM.","sig":null,"attributes":[{"value":"reference(instance_of = \"MutationObserver\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":506221,"byte_end":506267,"line_start":14,"line_end":14,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":13575},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":506647,"byte_end":506667,"line_start":23,"line_end":23,"column_start":12,"column_end":32},"name":"MutationObserverInit","qualname":"::webapi::mutation_observer::MutationObserverInit","value":"MutationObserverInit { child_list, attributes, character_data, subtree, attribute_old_value, character_data_old_value, attribute_filter }","parent":null,"children":[{"krate":0,"index":13577},{"krate":0,"index":13578},{"krate":0,"index":13579},{"krate":0,"index":13580},{"krate":0,"index":13581},{"krate":0,"index":13582},{"krate":0,"index":13583}],"decl_id":null,"docs":" Specifies which changes should be observed for the target.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13577},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507021,"byte_end":507031,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"child_list","qualname":"::webapi::mutation_observer::MutationObserverInit::child_list","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will observe all inserts and removals of the target's children (including text nodes).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13578},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507122,"byte_end":507132,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"attributes","qualname":"::webapi::mutation_observer::MutationObserverInit::attributes","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will observe all changes to the target's attributes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13579},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507226,"byte_end":507240,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"character_data","qualname":"::webapi::mutation_observer::MutationObserverInit::character_data","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will observe all changes to the `CharacterData`'s data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13580},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507470,"byte_end":507477,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"subtree","qualname":"::webapi::mutation_observer::MutationObserverInit::subtree","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will observe all changes to the target, the target's children, and the target's sub-children.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13581},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507637,"byte_end":507656,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"name":"attribute_old_value","qualname":"::webapi::mutation_observer::MutationObserverInit::attribute_old_value","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will store the target's old attribute value in [`old_value`](enum.MutationRecord.html#variant.Attribute.field.old_value).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13582},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":507816,"byte_end":507840,"line_start":46,"line_end":46,"column_start":9,"column_end":33},"name":"character_data_old_value","qualname":"::webapi::mutation_observer::MutationObserverInit::character_data_old_value","value":"bool","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `true` it will store the `CharacterData`'s old data in [`old_data`](enum.MutationRecord.html#variant.CharacterData.field.old_data).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13583},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":508036,"byte_end":508052,"line_start":51,"line_end":51,"column_start":9,"column_end":25},"name":"attribute_filter","qualname":"::webapi::mutation_observer::MutationObserverInit::attribute_filter","value":"std::option::Option<&'a [&'a str]>","parent":{"krate":0,"index":13575},"children":[],"decl_id":null,"docs":" If `Some` it will only observe the specified attributes. The attributes should be specified without a namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":508645,"byte_end":508648,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<MutationObserver>::new","value":"fn <F> (callback: F) -> MutationObserverHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`MutationObserverHandle`](struct.MutationObserverHandle.html) with the given callback.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":510930,"byte_end":510937,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"observe","qualname":"<MutationObserver>::observe","value":"fn <T> (&self, target: &T, options: MutationObserverInit) -> Result<(), TODO>","parent":null,"children":[],"decl_id":null,"docs":" Starts observing changes to the `target`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":512159,"byte_end":512169,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<MutationObserver>::disconnect","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops observing all targets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":512729,"byte_end":512741,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"take_records","qualname":"<MutationObserver>::take_records","value":"fn (&self) -> Vec<MutationRecord>","parent":null,"children":[],"decl_id":null,"docs":" Empties the `MutationObserver`'s record queue and returns what was in there.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13615},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":513336,"byte_end":513358,"line_start":166,"line_end":166,"column_start":12,"column_end":34},"name":"MutationObserverHandle","qualname":"::webapi::mutation_observer::MutationObserverHandle","value":"MutationObserverHandle {  }","parent":null,"children":[{"krate":0,"index":13616},{"krate":0,"index":13617}],"decl_id":null,"docs":" A wrapper which ensures that memory is properly cleaned up when it's no longer needed.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":13626},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":514231,"byte_end":514240,"line_start":201,"line_end":201,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::webapi::mutation_observer::MutationRecord::Attribute","value":"MutationRecord::Attribute { target, name, namespace, old_value }","parent":{"krate":0,"index":13625},"children":[],"decl_id":null,"docs":" One of the target's attributes was changed.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":13631},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":514648,"byte_end":514661,"line_start":216,"line_end":216,"column_start":5,"column_end":18},"name":"CharacterData","qualname":"::webapi::mutation_observer::MutationRecord::CharacterData","value":"MutationRecord::CharacterData { target, old_data }","parent":{"krate":0,"index":13625},"children":[],"decl_id":null,"docs":" The target's data was changed.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":13634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":514895,"byte_end":514904,"line_start":225,"line_end":225,"column_start":5,"column_end":14},"name":"ChildList","qualname":"::webapi::mutation_observer::MutationRecord::ChildList","value":"MutationRecord::ChildList { target, inserted_nodes, removed_nodes, previous_sibling, next_sibling }","parent":{"krate":0,"index":13625},"children":[],"decl_id":null,"docs":" The children of the target were changed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13625},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":514158,"byte_end":514172,"line_start":199,"line_end":199,"column_start":10,"column_end":24},"name":"MutationRecord","qualname":"::webapi::mutation_observer::MutationRecord","value":"MutationRecord::{Attribute, CharacterData, ChildList}","parent":null,"children":[{"krate":0,"index":13626},{"krate":0,"index":13631},{"krate":0,"index":13634}],"decl_id":null,"docs":" Contains information about an individual change to the DOM.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":518392,"byte_end":518398,"line_start":10,"line_end":10,"column_start":11,"column_end":17},"name":"IError","qualname":"::webapi::error::IError","value":"IError: ReferenceType","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"decl_id":null,"docs":" Represents the JavaScript `Error` interface. An `Error` is thrown whenever a run-time error\n occurs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":518712,"byte_end":518719,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"message","qualname":"::webapi::error::IError::message","value":"fn (&self) -> String","parent":{"krate":0,"index":2084},"children":[],"decl_id":null,"docs":" Returns a human-readable description of the error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":518695,"byte_end":518704,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519121,"byte_end":519125,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"name","qualname":"::webapi::error::IError::name","value":"fn (&self) -> String","parent":{"krate":0,"index":2084},"children":[],"decl_id":null,"docs":" Returns a name specifiying the type of error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519104,"byte_end":519113,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":13704},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519635,"byte_end":519640,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"Error","qualname":"::webapi::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript `Error` object. An `Error` is thrown whenever a run-time error\n occurs.","sig":null,"attributes":[{"value":"reference(instance_of = \"Error\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519588,"byte_end":519623,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519882,"byte_end":519885,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn (description: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Error` with the specified `description`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519861,"byte_end":519870,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":13773},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520408,"byte_end":520417,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"TypeError","qualname":"::webapi::error::TypeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to indicate an unsuccessful operation when none of the other NativeError objects are an appropriate indication of the failure cause.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520324,"byte_end":520356,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"reference(instance_of = \"TypeError\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520357,"byte_end":520396,"line_start":61,"line_end":61,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":13836},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":521738,"byte_end":521743,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Touch","qualname":"::webapi::touch::Touch","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Touch interface represents a single contact point on a touch-sensitive\n device. The contact point is commonly a finger or stylus and the device may\n be a touchscreen or trackpad.","sig":null,"attributes":[{"value":"reference(instance_of = \"Touch\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":521691,"byte_end":521726,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522177,"byte_end":522187,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"identifier","qualname":"<Touch>::identifier","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns a unique identifier for this Touch object. A given touch point\n (say, by a finger) will have the same identifier for the duration of\n its movement around the surface. This lets you ensure that you're\n tracking the same touch all the time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522156,"byte_end":522165,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522520,"byte_end":522528,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"screen_x","qualname":"<Touch>::screen_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the X coordinate of the touch point relative to the left edge of the screen.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522499,"byte_end":522508,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522858,"byte_end":522866,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"screen_y","qualname":"<Touch>::screen_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y coordinate of the touch point relative to the left edge of the screen.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":522837,"byte_end":522846,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":523239,"byte_end":523247,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"client_x","qualname":"<Touch>::client_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the X coordinate of the touch point relative to the left edge of the browser viewport, not including any scroll offset.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":523218,"byte_end":523227,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":523620,"byte_end":523628,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"client_y","qualname":"<Touch>::client_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y coordinate of the touch point relative to the left edge of the browser viewport, not including any scroll offset.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":523599,"byte_end":523608,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524032,"byte_end":524038,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"page_x","qualname":"<Touch>::page_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the X coordinate of the touch point relative to the left edge of the document. Unlike clientX, this value includes the horizontal scroll offset, if any.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524011,"byte_end":524020,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524440,"byte_end":524446,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"page_y","qualname":"<Touch>::page_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y coordinate of the touch point relative to the left edge of the document. Unlike clientX, this value includes the horizontal scroll offset, if any.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524419,"byte_end":524428,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524907,"byte_end":524913,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"target","qualname":"<Touch>::target","value":"fn (&self) -> EventTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns the Element on which the touch point started when it was first placed on the surface, even if the touch point has since moved outside the interactive area of that element or even been removed from the document.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":524886,"byte_end":524895,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":525371,"byte_end":525379,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"radius_x","qualname":"<Touch>::radius_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the X radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as screenX.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":525304,"byte_end":525313,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":525782,"byte_end":525790,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"radius_y","qualname":"<Touch>::radius_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as screenY.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":525761,"byte_end":525770,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":526229,"byte_end":526243,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"rotation_angle","qualname":"<Touch>::rotation_angle","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the angle (in degrees) that the ellipse described by radiusX and radiusY must be rotated, clockwise, to most accurately cover the area of contact between the user and the surface.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":526208,"byte_end":526217,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":526630,"byte_end":526635,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"force","qualname":"<Touch>::force","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of pressure being applied to the surface by the user, as a float between 0.0 (no pressure) and 1.0 (maximum pressure).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":526609,"byte_end":526618,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":527138,"byte_end":527152,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"altitude_angle","qualname":"<Touch>::altitude_angle","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The altitude (in radians) of a stylus, in the range 0 (parallel to the surface) to π/2 (perpendicular to the surface). The value 0 should be used for devices which do not support this property.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":527117,"byte_end":527126,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":527726,"byte_end":527739,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"azimuth_angle","qualname":"<Touch>::azimuth_angle","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The azimuth angle (in radians) of a stylus, in the range 0 to 2π. 0 represents a stylus whose cap is pointing in the direction of increasing screenX values. π/2 represents a stylus whose cap is pointing in the direction of increasing screenY values. The value 0 should be used for devices which do not support this property.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":527705,"byte_end":527714,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528002,"byte_end":528012,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"touch_type","qualname":"<Touch>::touch_type","value":"fn (&self) -> TouchType","parent":null,"children":[],"decl_id":null,"docs":" The type of device used to trigger the touch.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":527981,"byte_end":527990,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13972},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528414,"byte_end":528420,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"Direct","qualname":"::webapi::touch::TouchType::Direct","value":"TouchType::Direct","parent":{"krate":0,"index":13971},"children":[],"decl_id":null,"docs":" A direct touch from a finger on the screen.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13974},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528471,"byte_end":528477,"line_start":191,"line_end":191,"column_start":5,"column_end":11},"name":"Stylus","qualname":"::webapi::touch::TouchType::Stylus","value":"TouchType::Stylus","parent":{"krate":0,"index":13971},"children":[],"decl_id":null,"docs":" A touch from a stylus or pen device.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13971},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528346,"byte_end":528355,"line_start":187,"line_end":187,"column_start":10,"column_end":19},"name":"TouchType","qualname":"::webapi::touch::TouchType","value":"TouchType::{Direct, Stylus}","parent":null,"children":[{"krate":0,"index":13972},{"krate":0,"index":13974}],"decl_id":null,"docs":" An enumeration representing the different types of possible touch input.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529234,"byte_end":529247,"line_start":9,"line_end":9,"column_start":11,"column_end":24},"name":"IDomException","qualname":"::webapi::dom_exception::IDomException","value":"IDomException: IError","parent":null,"children":[],"decl_id":null,"docs":" The `IDomException` interface represents an abnormal event which occurs as the result of\n calling a web API.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13987},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529600,"byte_end":529612,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"DomException","qualname":"::webapi::dom_exception::DomException","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript `DOMException` object.","sig":null,"attributes":[{"value":"reference(instance_of = \"DOMException\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529513,"byte_end":529555,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"reference(subclass_of (Error))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529556,"byte_end":529588,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":14057},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529976,"byte_end":529997,"line_start":29,"line_end":29,"column_start":12,"column_end":33},"name":"HierarchyRequestError","qualname":"::webapi::dom_exception::HierarchyRequestError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when an operation would result in an incorrect node tree.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529918,"byte_end":529964,"line_start":28,"line_end":28,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14133},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530426,"byte_end":530444,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"InvalidAccessError","qualname":"::webapi::dom_exception::InvalidAccessError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when an object does not support an operation or argument.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530368,"byte_end":530414,"line_start":39,"line_end":39,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14209},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530848,"byte_end":530874,"line_start":51,"line_end":51,"column_start":12,"column_end":38},"name":"NoModificationAllowedError","qualname":"::webapi::dom_exception::NoModificationAllowedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when the object can not be modified.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530790,"byte_end":530836,"line_start":50,"line_end":50,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14285},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531303,"byte_end":531316,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"NotFoundError","qualname":"::webapi::dom_exception::NotFoundError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when the specified object cannot be found.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531245,"byte_end":531291,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14361},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531692,"byte_end":531705,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"SecurityError","qualname":"::webapi::dom_exception::SecurityError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when the requested operation is insecure.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531634,"byte_end":531680,"line_start":72,"line_end":72,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14437},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532091,"byte_end":532102,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"SyntaxError","qualname":"::webapi::dom_exception::SyntaxError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when an argument does not match the expected pattern.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532033,"byte_end":532079,"line_start":83,"line_end":83,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14513},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532448,"byte_end":532462,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"IndexSizeError","qualname":"::webapi::dom_exception::IndexSizeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when an argument is out of range.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532390,"byte_end":532436,"line_start":94,"line_end":94,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14582},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532828,"byte_end":532845,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"InvalidStateError","qualname":"::webapi::dom_exception::InvalidStateError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Occurs when an object is in an invalid state.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532770,"byte_end":532816,"line_start":105,"line_end":105,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14651},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533315,"byte_end":533332,"line_start":117,"line_end":117,"column_start":12,"column_end":29},"name":"NotSupportedError","qualname":"::webapi::dom_exception::NotSupportedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to indicate an unsuccessful operation when none of the other NativeError objects are an appropriate indication of the failure cause.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533257,"byte_end":533303,"line_start":116,"line_end":116,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14720},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533747,"byte_end":533768,"line_start":128,"line_end":128,"column_start":12,"column_end":33},"name":"InvalidCharacterError","qualname":"::webapi::dom_exception::InvalidCharacterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to indicate the string contains one or more characters which are invalid.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533689,"byte_end":533735,"line_start":127,"line_end":127,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14789},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534224,"byte_end":534240,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"InvalidPointerId","qualname":"::webapi::dom_exception::InvalidPointerId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to indicate that a pointer id passed as an argument was for some reason invalid.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534166,"byte_end":534212,"line_start":138,"line_end":138,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14858},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534610,"byte_end":534620,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"AbortError","qualname":"::webapi::dom_exception::AbortError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to indicate that the operation was aborted.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534552,"byte_end":534598,"line_start":149,"line_end":149,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14927},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534986,"byte_end":535000,"line_start":161,"line_end":161,"column_start":12,"column_end":26},"name":"NamespaceError","qualname":"::webapi::dom_exception::NamespaceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates an xml namespace-related feature was used incorrectly.\n","sig":null,"attributes":[{"value":"reference(subclass_of (Error, DomException))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534928,"byte_end":534974,"line_start":160,"line_end":160,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":14996},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536778,"byte_end":536789,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ChangeEvent","qualname":"::webapi::events::dom::ChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ChangeEvent` is fired for input, select, and textarea\n elements when a change to the element's value is committed\n by the user. Unlike the input event, the change event is not\n necessarily fired for each change to an element's value.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536667,"byte_end":536702,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"reference(event = \"change\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536703,"byte_end":536733,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536734,"byte_end":536766,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15064},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537576,"byte_end":537586,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"InputEvent","qualname":"::webapi::events::dom::InputEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `InputEvent` is fired synchronously when the value of an\n input, select, or textarea element is changed. For input elements\n with type=checkbox or type=radio, the input event should fire when\n a user toggles the control (via touch, mouse or keyboard) per the\n HTML5 specification, but historically, this has not been the case.\n Check compatibility, or attach to the change event instead for\n elements of these types.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537466,"byte_end":537501,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"reference(event = \"input\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537502,"byte_end":537531,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537532,"byte_end":537564,"line_start":32,"line_end":32,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15132},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538037,"byte_end":538054,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"ResourceLoadEvent","qualname":"::webapi::events::dom::ResourceLoadEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ResourceLoadEvent` is fired when a resource and its dependent resources have finished loading.","sig":null,"attributes":[{"value":"reference(instance_of = \"UIEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537917,"byte_end":537954,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"reference(event = \"load\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537955,"byte_end":537983,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event, UiEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537984,"byte_end":538025,"line_start":44,"line_end":44,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":15206},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538548,"byte_end":538566,"line_start":58,"line_end":58,"column_start":12,"column_end":30},"name":"ResourceAbortEvent","qualname":"::webapi::events::dom::ResourceAbortEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ResourceAbortEvent` is fired when the loading of a resource has been aborted.","sig":null,"attributes":[{"value":"reference(instance_of = \"UIEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538427,"byte_end":538464,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"reference(event = \"abort\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538465,"byte_end":538494,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, UiEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538495,"byte_end":538536,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":15280},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539120,"byte_end":539138,"line_start":72,"line_end":72,"column_start":12,"column_end":30},"name":"ResourceErrorEvent","qualname":"::webapi::events::dom::ResourceErrorEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ResourceErrorEvent` is fired when an error occurred; the exact circumstances vary,\n since this event is used from a variety of APIs.","sig":null,"attributes":[{"value":"reference(instance_of = \"UIEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538999,"byte_end":539036,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"reference(event = \"error\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539037,"byte_end":539066,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, UiEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539067,"byte_end":539108,"line_start":71,"line_end":71,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":15354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539719,"byte_end":539730,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"ResizeEvent","qualname":"::webapi::events::dom::ResizeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resize event is fired when the document view has been resized.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539608,"byte_end":539643,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"reference(event = \"resize\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539644,"byte_end":539674,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539675,"byte_end":539707,"line_start":86,"line_end":86,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15422},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540182,"byte_end":540193,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"ScrollEvent","qualname":"::webapi::events::dom::ScrollEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The scroll event is fired when the document view or an element has been scrolled.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540071,"byte_end":540106,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"reference(event = \"scroll\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540107,"byte_end":540137,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540138,"byte_end":540170,"line_start":98,"line_end":98,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15490},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540667,"byte_end":540688,"line_start":111,"line_end":111,"column_start":12,"column_end":33},"name":"ReadyStateChangeEvent","qualname":"::webapi::events::dom::ReadyStateChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The readystatechange event is fired when the readyState attribute of a document has changed.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540546,"byte_end":540581,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"reference(event = \"readystatechange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540582,"byte_end":540622,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540623,"byte_end":540655,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15558},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541101,"byte_end":541112,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"SubmitEvent","qualname":"::webapi::events::dom::SubmitEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The submit event is fired when a form is submitted.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540990,"byte_end":541025,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"reference(event = \"submit\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541026,"byte_end":541056,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541057,"byte_end":541089,"line_start":122,"line_end":122,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":15626},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541615,"byte_end":541635,"line_start":136,"line_end":136,"column_start":12,"column_end":32},"name":"SelectionChangeEvent","qualname":"::webapi::events::dom::SelectionChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The selectionchange event of the Selection API is fired when the current text selection on a\n document is changed.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541495,"byte_end":541530,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"reference(event = \"selectionchange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541531,"byte_end":541570,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541571,"byte_end":541603,"line_start":135,"line_end":135,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":544884,"byte_end":544894,"line_start":22,"line_end":22,"column_start":11,"column_end":21},"name":"IDragEvent","qualname":"::webapi::events::drag::IDragEvent","value":"IDragEvent: IMouseEvent","parent":null,"children":[{"krate":0,"index":2194}],"decl_id":null,"docs":" The DragEvent interface is a DOM event that represents a drag and drop interaction.\n The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface\n and then dragging the pointer to a new location (such as another DOM element).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545230,"byte_end":545243,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"data_transfer","qualname":"::webapi::events::drag::IDragEvent::data_transfer","value":"fn (&self) -> Option<DataTransfer>","parent":{"krate":0,"index":2193},"children":[],"decl_id":null,"docs":" The DataEvent.dataTransfer property holds the drag operation's data (as a DataTransfer object).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545213,"byte_end":545222,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15699},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545806,"byte_end":545822,"line_start":43,"line_end":43,"column_start":12,"column_end":28},"name":"DragRelatedEvent","qualname":"::webapi::events::drag::DragRelatedEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IDragEvent](trait.IDragEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545701,"byte_end":545740,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545741,"byte_end":545794,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":15777},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546478,"byte_end":546487,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"DragEvent","qualname":"::webapi::events::drag::DragEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The drag event is fired every few hundred milliseconds as an element or text selection is being\n dragged by the user.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546326,"byte_end":546365,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"reference(event = \"drag\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546366,"byte_end":546394,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546395,"byte_end":546466,"line_start":61,"line_end":61,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":15863},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547098,"byte_end":547112,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"DragStartEvent","qualname":"::webapi::events::drag::DragStartEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragstart event is fired when the user starts dragging an element or text selection.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546941,"byte_end":546980,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragstart\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546981,"byte_end":547014,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547015,"byte_end":547086,"line_start":79,"line_end":79,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":15949},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547752,"byte_end":547766,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"DragEnterEvent","qualname":"::webapi::events::drag::DragEnterEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragenter event is fired when a dragged element or text selection enters a valid drop target.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547595,"byte_end":547634,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragenter\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547635,"byte_end":547668,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547669,"byte_end":547740,"line_start":97,"line_end":97,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16035},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548415,"byte_end":548428,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"DragExitEvent","qualname":"::webapi::events::drag::DragExitEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragexit event is fired when an element is no longer the drag operation's immediate\n selection target.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548259,"byte_end":548298,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragexit\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548299,"byte_end":548331,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548332,"byte_end":548403,"line_start":116,"line_end":116,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16121},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549064,"byte_end":549078,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"DragLeaveEvent","qualname":"::webapi::events::drag::DragLeaveEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragleave event is fired when a dragged element or text selection leaves a valid drop target.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548907,"byte_end":548946,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragleave\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548947,"byte_end":548980,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548981,"byte_end":549052,"line_start":134,"line_end":134,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16207},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549759,"byte_end":549772,"line_start":154,"line_end":154,"column_start":12,"column_end":25},"name":"DragOverEvent","qualname":"::webapi::events::drag::DragOverEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragover event is fired when an element or text selection is being dragged over a valid drop\n target (every few hundred milliseconds).","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549603,"byte_end":549642,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragover\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549643,"byte_end":549675,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549676,"byte_end":549747,"line_start":153,"line_end":153,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16293},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550388,"byte_end":550401,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"DragDropEvent","qualname":"::webapi::events::drag::DragDropEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The drop event is fired when an element or text selection is dropped on a valid drop target.","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550236,"byte_end":550275,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"reference(event = \"drop\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550276,"byte_end":550304,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550305,"byte_end":550376,"line_start":171,"line_end":171,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16379},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551058,"byte_end":551070,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"DragEndEvent","qualname":"::webapi::events::drag::DragEndEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The dragend event is fired when a drag operation is being ended (by releasing a mouse button or\n hitting the escape key).","sig":null,"attributes":[{"value":"reference(instance_of = \"DragEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550903,"byte_end":550942,"line_start":188,"line_end":188,"column_start":1,"column_end":40}},{"value":"reference(event = \"dragend\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550943,"byte_end":550974,"line_start":189,"line_end":189,"column_start":1,"column_end":32}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, DragRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550975,"byte_end":551046,"line_start":190,"line_end":190,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":16465},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551760,"byte_end":551772,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"DataTransfer","qualname":"::webapi::events::drag::DataTransfer","value":"","parent":null,"children":[],"decl_id":null,"docs":" The DataTransfer object is used to hold the data that is being dragged during a drag and drop\n operation.","sig":null,"attributes":[{"value":"reference(instance_of = \"DataTransfer\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551706,"byte_end":551748,"line_start":210,"line_end":210,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":552141,"byte_end":552152,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"drop_effect","qualname":"<DataTransfer>::drop_effect","value":"fn (&self) -> DropEffect","parent":null,"children":[],"decl_id":null,"docs":" Gets the type of drag-and-drop operation currently selected type.\n The value must be none, copy, link or move.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":552895,"byte_end":552910,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"set_drop_effect","qualname":"<DataTransfer>::set_drop_effect","value":"fn (&self, value: DropEffect) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the type of drag-and-drop operation currently selected.\n The value must be none, copy, link or move.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":553615,"byte_end":553629,"line_start":252,"line_end":252,"column_start":12,"column_end":26},"name":"effect_allowed","qualname":"<DataTransfer>::effect_allowed","value":"fn (&self) -> EffectAllowed","parent":null,"children":[],"decl_id":null,"docs":" Provides all of the types of operations that are possible.\n Must be one of none, copy, copyLink, copyMove, link, linkMove, move, all or uninitialized.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":554694,"byte_end":554712,"line_start":275,"line_end":275,"column_start":12,"column_end":30},"name":"set_effect_allowed","qualname":"<DataTransfer>::set_effect_allowed","value":"fn (&self, value: EffectAllowed) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the effect that is allowed for a drag operation.\n Must be one of none, copy, copyLink, copyMove, link, linkMove, move, all or uninitialized.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":555577,"byte_end":555582,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"items","qualname":"<DataTransfer>::items","value":"fn (&self) -> DataTransferItemList","parent":null,"children":[],"decl_id":null,"docs":" Gives a DataTransferItemList object which is a list of all of the drag data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":556082,"byte_end":556087,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"files","qualname":"<DataTransfer>::files","value":"fn (&self) -> FileList","parent":null,"children":[],"decl_id":null,"docs":" Contains a list of all the local files available on the data transfer.\n If the drag operation doesn't involve dragging files, this property is an empty list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":556487,"byte_end":556492,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"types","qualname":"<DataTransfer>::types","value":"fn (&self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" An array of strings giving the formats that were set in the dragstart event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":557132,"byte_end":557142,"line_start":329,"line_end":329,"column_start":12,"column_end":22},"name":"clear_data","qualname":"<DataTransfer>::clear_data","value":"fn (&self, format: Option<&str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the data associated with a given type. The type argument is optional.\n If the type is empty or not specified, the data associated with all types is removed.\n If data for the specified type does not exist, or the data transfer contains no data,\n this method will have no effect.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":557709,"byte_end":557717,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"get_data","qualname":"<DataTransfer>::get_data","value":"fn (&self, format: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the data for a given type, or an empty string if data for that type does not exist\n or the data transfer contains no data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":558340,"byte_end":558348,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"set_data","qualname":"<DataTransfer>::set_data","value":"fn (&self, format: &str, data: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the data for a given type.\n If data for the type does not exist, it is added at the end, such that the last item in the\n types list will be the new format.\n If data for the type already exists, the existing data is replaced in the same position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":558773,"byte_end":558787,"line_start":364,"line_end":364,"column_start":12,"column_end":26},"name":"set_drag_image","qualname":"<DataTransfer>::set_drag_image","value":"fn (&self, img: &ImageElement, x_offset: i32, y_offset: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the image to be used for dragging if a custom one is desired.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16586},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559242,"byte_end":559246,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Copy","qualname":"::webapi::events::drag::DropEffect::Copy","value":"DropEffect::Copy","parent":{"krate":0,"index":16585},"children":[],"decl_id":null,"docs":" A copy of the source item is made at the new location\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16588},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559296,"byte_end":559300,"line_start":378,"line_end":378,"column_start":5,"column_end":9},"name":"Move","qualname":"::webapi::events::drag::DropEffect::Move","value":"DropEffect::Move","parent":{"krate":0,"index":16585},"children":[],"decl_id":null,"docs":" An item is moved to a new location.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16590},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559371,"byte_end":559375,"line_start":380,"line_end":380,"column_start":5,"column_end":9},"name":"Link","qualname":"::webapi::events::drag::DropEffect::Link","value":"DropEffect::Link","parent":{"krate":0,"index":16585},"children":[],"decl_id":null,"docs":" A link is established to the source at the new location.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16592},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559418,"byte_end":559422,"line_start":382,"line_end":382,"column_start":5,"column_end":9},"name":"None","qualname":"::webapi::events::drag::DropEffect::None","value":"DropEffect::None","parent":{"krate":0,"index":16585},"children":[],"decl_id":null,"docs":" The item may not be dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":16585},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559163,"byte_end":559173,"line_start":374,"line_end":374,"column_start":10,"column_end":20},"name":"DropEffect","qualname":"::webapi::events::drag::DropEffect","value":"DropEffect::{Copy, Move, Link, None}","parent":null,"children":[{"krate":0,"index":16586},{"krate":0,"index":16588},{"krate":0,"index":16590},{"krate":0,"index":16592}],"decl_id":null,"docs":" A DOMString representing the drag operation effect.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16606},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559679,"byte_end":559683,"line_start":390,"line_end":390,"column_start":5,"column_end":9},"name":"None","qualname":"::webapi::events::drag::EffectAllowed::None","value":"EffectAllowed::None","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" The item may not be dropped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16608},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559756,"byte_end":559760,"line_start":392,"line_end":392,"column_start":5,"column_end":9},"name":"Copy","qualname":"::webapi::events::drag::EffectAllowed::Copy","value":"EffectAllowed::Copy","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" A copy of the source item may be made at the new location.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16610},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559813,"byte_end":559821,"line_start":394,"line_end":394,"column_start":5,"column_end":13},"name":"CopyLink","qualname":"::webapi::events::drag::EffectAllowed::CopyLink","value":"EffectAllowed::CopyLink","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" A copy or link operation is permitted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16612},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559874,"byte_end":559882,"line_start":396,"line_end":396,"column_start":5,"column_end":13},"name":"CopyMove","qualname":"::webapi::events::drag::EffectAllowed::CopyMove","value":"EffectAllowed::CopyMove","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" A copy or move operation is permitted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16614},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559957,"byte_end":559961,"line_start":398,"line_end":398,"column_start":5,"column_end":9},"name":"Link","qualname":"::webapi::events::drag::EffectAllowed::Link","value":"EffectAllowed::Link","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" A link may be established to the source at the new location.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16616},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560014,"byte_end":560022,"line_start":400,"line_end":400,"column_start":5,"column_end":13},"name":"LinkMove","qualname":"::webapi::events::drag::EffectAllowed::LinkMove","value":"EffectAllowed::LinkMove","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" A link or move operation is permitted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16618},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560076,"byte_end":560080,"line_start":402,"line_end":402,"column_start":5,"column_end":9},"name":"Move","qualname":"::webapi::events::drag::EffectAllowed::Move","value":"EffectAllowed::Move","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" An item may be moved to a new location.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16620},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560124,"byte_end":560127,"line_start":404,"line_end":404,"column_start":5,"column_end":8},"name":"All","qualname":"::webapi::events::drag::EffectAllowed::All","value":"EffectAllowed::All","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" All operations are permitted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16622},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560212,"byte_end":560225,"line_start":406,"line_end":406,"column_start":5,"column_end":18},"name":"Uninitialized","qualname":"::webapi::events::drag::EffectAllowed::Uninitialized","value":"EffectAllowed::Uninitialized","parent":{"krate":0,"index":16605},"children":[],"decl_id":null,"docs":" The default value when the effect has not been set, equivalent to all.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":16605},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":559622,"byte_end":559635,"line_start":388,"line_end":388,"column_start":10,"column_end":23},"name":"EffectAllowed","qualname":"::webapi::events::drag::EffectAllowed","value":"EffectAllowed::{None, Copy, CopyLink, CopyMove, Link, LinkMove, Move, All, Uninitialized}","parent":null,"children":[{"krate":0,"index":16606},{"krate":0,"index":16608},{"krate":0,"index":16610},{"krate":0,"index":16612},{"krate":0,"index":16614},{"krate":0,"index":16616},{"krate":0,"index":16618},{"krate":0,"index":16620},{"krate":0,"index":16622}],"decl_id":null,"docs":" A DOMString representing the drag operation that is allowed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560765,"byte_end":560785,"line_start":418,"line_end":418,"column_start":12,"column_end":32},"name":"DataTransferItemList","qualname":"::webapi::events::drag::DataTransferItemList","value":"","parent":null,"children":[],"decl_id":null,"docs":" The DataTransferItemList object is a list of DataTransferItem objects representing items being\n dragged.\n During a drag operation, each DragEvent has a dataTransfer property and that property is a\n DataTransferItemList.","sig":null,"attributes":[{"value":"reference(instance_of = \"DataTransferItemList\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560703,"byte_end":560753,"line_start":417,"line_end":417,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":561115,"byte_end":561118,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"len","qualname":"<DataTransferItemList>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" An unsigned long that is the number of drag items in the list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":561565,"byte_end":561575,"line_start":435,"line_end":435,"column_start":12,"column_end":22},"name":"add_string","qualname":"<DataTransferItemList>::add_string","value":"fn (&self, data: &str, ty: &str) -> Result<Option<DataTransferItem>, NotSupportedError>","parent":null,"children":[],"decl_id":null,"docs":" Adds an item of kind \"string\" to the drag item list and returns\n a DataTransferItem object for the new item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":562096,"byte_end":562104,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"add_file","qualname":"<DataTransferItemList>::add_file","value":"fn (&self, file: &File) -> Option<DataTransferItem>","parent":null,"children":[],"decl_id":null,"docs":" Adds an item of kind \"file\" to the drag item list and returns\n a DataTransferItem object for the new item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":562537,"byte_end":562543,"line_start":456,"line_end":456,"column_start":12,"column_end":18},"name":"remove","qualname":"<DataTransferItemList>::remove","value":"fn (&self, index: u32) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Removes the drag item from the list at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":562934,"byte_end":562939,"line_start":464,"line_end":464,"column_start":12,"column_end":17},"name":"clear","qualname":"<DataTransferItemList>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all of the drag items from the list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":563305,"byte_end":563310,"line_start":472,"line_end":472,"column_start":12,"column_end":17},"name":"index","qualname":"<DataTransferItemList>::index","value":"fn (&self, index: u32) -> Option<DataTransferItem>","parent":null,"children":[],"decl_id":null,"docs":" Getter that returns a DataTransferItem at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":563623,"byte_end":563627,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"iter","qualname":"<DataTransferItemList>::iter","value":"fn (&self) -> DataTransferItemIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16757},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":564620,"byte_end":564640,"line_start":530,"line_end":530,"column_start":12,"column_end":32},"name":"DataTransferItemIter","qualname":"::webapi::events::drag::DataTransferItemIter","value":"DataTransferItemIter {  }","parent":null,"children":[{"krate":0,"index":16758},{"krate":0,"index":16759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16762},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":565214,"byte_end":565230,"line_start":543,"line_end":543,"column_start":12,"column_end":28},"name":"DataTransferItem","qualname":"::webapi::events::drag::DataTransferItem","value":"","parent":null,"children":[],"decl_id":null,"docs":" The DataTransferItem object represents one drag data item. During a drag operation, each drag\n event has a dataTransfer property which contains a list of drag data items. Each item in the\n list is a DataTransferItem object.","sig":null,"attributes":[{"value":"reference(instance_of = \"DataTransferItem\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":565156,"byte_end":565202,"line_start":542,"line_end":542,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":565527,"byte_end":565531,"line_start":550,"line_end":550,"column_start":12,"column_end":16},"name":"kind","qualname":"<DataTransferItem>::kind","value":"fn (&self) -> DataTransferItemKind","parent":null,"children":[],"decl_id":null,"docs":" The kind of drag data item, string or file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":566178,"byte_end":566180,"line_start":565,"line_end":565,"column_start":12,"column_end":14},"name":"ty","qualname":"<DataTransferItem>::ty","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The drag data item's type, typically a MIME type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":566624,"byte_end":566635,"line_start":576,"line_end":576,"column_start":12,"column_end":23},"name":"get_as_file","qualname":"<DataTransferItem>::get_as_file","value":"fn (&self) -> Option<File>","parent":null,"children":[],"decl_id":null,"docs":" Returns the File object associated with the drag data item\n (or null if the drag item is not a file)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":567067,"byte_end":567080,"line_start":586,"line_end":586,"column_start":12,"column_end":25},"name":"get_as_string","qualname":"<DataTransferItem>::get_as_string","value":"fn <F> (&self, callback: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes the specified callback with the drag data item string as its argument.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16843},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568386,"byte_end":568390,"line_start":623,"line_end":623,"column_start":5,"column_end":9},"name":"File","qualname":"::webapi::events::drag::DataTransferItemKind::File","value":"DataTransferItemKind::File","parent":{"krate":0,"index":16842},"children":[],"decl_id":null,"docs":" If the drag data item is a file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16845},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568461,"byte_end":568467,"line_start":625,"line_end":625,"column_start":5,"column_end":11},"name":"String","qualname":"::webapi::events::drag::DataTransferItemKind::String","value":"DataTransferItemKind::String","parent":{"krate":0,"index":16842},"children":[],"decl_id":null,"docs":" If the kind of drag data item is a plain Unicode string.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16847},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568590,"byte_end":568597,"line_start":628,"line_end":628,"column_start":5,"column_end":12},"name":"__Other","qualname":"::webapi::events::drag::DataTransferItemKind::__Other","value":"DataTransferItemKind::__Other(OtherKind)","parent":{"krate":0,"index":16842},"children":[],"decl_id":null,"docs":" If the kind of drag data is something different (e.g. dragging an <img /> tag in Firefox)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":16842},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568318,"byte_end":568338,"line_start":621,"line_end":621,"column_start":10,"column_end":30},"name":"DataTransferItemKind","qualname":"::webapi::events::drag::DataTransferItemKind","value":"DataTransferItemKind::{File, String, __Other}","parent":null,"children":[{"krate":0,"index":16843},{"krate":0,"index":16845},{"krate":0,"index":16847}],"decl_id":null,"docs":" The kind of drag data item, string or file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568817,"byte_end":568823,"line_start":634,"line_end":634,"column_start":12,"column_end":18},"name":"as_str","qualname":"<DataTransferItemKind>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string representation of this DataTransferItemKind\n Useful in case the browser returns a non-standard kind that you want to special case.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16861},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":569118,"byte_end":569127,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"OtherKind","qualname":"::webapi::events::drag::OtherKind","value":"OtherKind {  }","parent":null,"children":[{"krate":0,"index":16862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573142,"byte_end":573153,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"IFocusEvent","qualname":"::webapi::events::focus::IFocusEvent","value":"IFocusEvent: IEvent","parent":null,"children":[{"krate":0,"index":2279}],"decl_id":null,"docs":" The `IFocusEvent` interface represents focus-related\n events.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573424,"byte_end":573438,"line_start":17,"line_end":17,"column_start":8,"column_end":22},"name":"related_target","qualname":"::webapi::events::focus::IFocusEvent::related_target","value":"fn (&self) -> Option<EventTarget>","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":" Returns the secondary target of this event, if any.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573407,"byte_end":573416,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16879},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573961,"byte_end":573978,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"FocusRelatedEvent","qualname":"::webapi::events::focus::FocusRelatedEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IFocusEvent](trait.IFocusEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"FocusEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573876,"byte_end":573916,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573917,"byte_end":573949,"line_start":31,"line_end":31,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":16945},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574555,"byte_end":574565,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"FocusEvent","qualname":"::webapi::events::focus::FocusEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `FocusEvent` is fired when an element has received focus. The main\n difference between this event and focusin is that only the latter bubbles.","sig":null,"attributes":[{"value":"reference(instance_of = \"FocusEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574421,"byte_end":574461,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"reference(event = \"focus\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574462,"byte_end":574491,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, FocusRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574492,"byte_end":574543,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":17019},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575121,"byte_end":575130,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"BlurEvent","qualname":"::webapi::events::focus::BlurEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `BlurEvent` is fired when an element has lost focus. The main difference\n between this event and focusout is that only the latter bubbles.","sig":null,"attributes":[{"value":"reference(instance_of = \"FocusEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574988,"byte_end":575028,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"reference(event = \"blur\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575029,"byte_end":575057,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event, FocusRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575058,"byte_end":575109,"line_start":59,"line_end":59,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576225,"byte_end":576238,"line_start":11,"line_end":11,"column_start":11,"column_end":24},"name":"IGamepadEvent","qualname":"::webapi::events::gamepad::IGamepadEvent","value":"IGamepadEvent: IEvent","parent":null,"children":[{"krate":0,"index":2294}],"decl_id":null,"docs":" A GamepadEvent is fired on the window object, when a gamepad is connected or disconnected to the system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576327,"byte_end":576334,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"gamepad","qualname":"::webapi::events::gamepad::IGamepadEvent::gamepad","value":"fn (&self) -> Gamepad","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":" Returns the gamepad associated with this event.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576310,"byte_end":576319,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17098},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576860,"byte_end":576872,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"GamepadEvent","qualname":"::webapi::events::gamepad::GamepadEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IGamepadEvent](trait.IGamepadEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"GamepadEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576773,"byte_end":576815,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576816,"byte_end":576848,"line_start":29,"line_end":29,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":17164},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577423,"byte_end":577444,"line_start":43,"line_end":43,"column_start":12,"column_end":33},"name":"GamepadConnectedEvent","qualname":"::webapi::events::gamepad::GamepadConnectedEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `GamepadConnected` event is fired on the window object, when the first input is received for a gamepad.","sig":null,"attributes":[{"value":"reference(instance_of = \"GamepadEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577281,"byte_end":577323,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"reference(event = \"gamepadconnected\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577324,"byte_end":577364,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event, GamepadEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577365,"byte_end":577411,"line_start":42,"line_end":42,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":17238},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":578009,"byte_end":578033,"line_start":56,"line_end":56,"column_start":12,"column_end":36},"name":"GamepadDisconnectedEvent","qualname":"::webapi::events::gamepad::GamepadDisconnectedEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `GamepadDisconnected` event is fired on the window object, when a gamepad is disconnected.","sig":null,"attributes":[{"value":"reference(instance_of = \"GamepadEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577864,"byte_end":577906,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"reference(event = \"gamepaddisconnected\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577907,"byte_end":577950,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"reference(subclass_of (Event, GamepadEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577951,"byte_end":577997,"line_start":55,"line_end":55,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":17312},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579391,"byte_end":579406,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"HashChangeEvent","qualname":"::webapi::events::history::HashChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `HashChangeEvent` is fired when the fragment\n identifier of the URL has changed (the part of the URL\n that follows the # symbol, including the # symbol).","sig":null,"attributes":[{"value":"reference(instance_of = \"HashChangeEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579266,"byte_end":579311,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"reference(event = \"hashchange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579312,"byte_end":579346,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579347,"byte_end":579379,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579764,"byte_end":579771,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"old_url","qualname":"<HashChangeEvent>::old_url","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The previous URL from which the window was navigated.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579743,"byte_end":579752,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":580163,"byte_end":580170,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"new_url","qualname":"<HashChangeEvent>::new_url","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" The new URL to which the window was navigated.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":580142,"byte_end":580151,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17390},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581567,"byte_end":581580,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"PopStateEvent","qualname":"::webapi::events::history::PopStateEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `PopStateEvent` is dispatched to the window every time the active history entry changes\n between two history entries for the same document. If the history entry being activated was\n created by a call to `history.push_state()` or was affected by a call to\n `history.replace_state()`, the `PopStateEvent`'s state property contains a copy of the history\n entry's state object.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581454,"byte_end":581489,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"reference(event = \"popstate\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581490,"byte_end":581522,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581523,"byte_end":581555,"line_start":64,"line_end":64,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581986,"byte_end":581991,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"state","qualname":"<PopStateEvent>::state","value":"fn (&self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" The state object associated to the new history entry, if that entry was created with\n push_state or affected by replace_state.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581965,"byte_end":581974,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585006,"byte_end":585020,"line_start":36,"line_end":36,"column_start":11,"column_end":25},"name":"IKeyboardEvent","qualname":"::webapi::events::keyboard::IKeyboardEvent","value":"IKeyboardEvent: IEvent","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" `IKeyboardEvent` objects describe a user interaction with the\n keyboard. Each event describes a key; the event type identifies\n what kind of activity was performed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585307,"byte_end":585314,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"alt_key","qualname":"::webapi::events::keyboard::IKeyboardEvent::alt_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Indicates whether the Alt key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585290,"byte_end":585299,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585712,"byte_end":585716,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"code","qualname":"::webapi::events::keyboard::IKeyboardEvent::code","value":"fn (&self) -> String","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns a code value that indicates the physical key pressed on the keyboard.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585695,"byte_end":585704,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586107,"byte_end":586115,"line_start":64,"line_end":64,"column_start":8,"column_end":16},"name":"ctrl_key","qualname":"::webapi::events::keyboard::IKeyboardEvent::ctrl_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns whether the Ctrl key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586090,"byte_end":586099,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586529,"byte_end":586547,"line_start":76,"line_end":76,"column_start":8,"column_end":26},"name":"get_modifier_state","qualname":"::webapi::events::keyboard::IKeyboardEvent::get_modifier_state","value":"fn (&self, key: ModifierKey) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns whether a modifier key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586512,"byte_end":586521,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586915,"byte_end":586927,"line_start":85,"line_end":85,"column_start":8,"column_end":20},"name":"is_composing","qualname":"::webapi::events::keyboard::IKeyboardEvent::is_composing","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns whether this event was fired during composition.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":586898,"byte_end":586907,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":587295,"byte_end":587303,"line_start":95,"line_end":95,"column_start":8,"column_end":16},"name":"location","qualname":"::webapi::events::keyboard::IKeyboardEvent::location","value":"fn (&self) -> KeyboardLocation","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns the location of the key on the keyboard.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588042,"byte_end":588045,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"key","qualname":"::webapi::events::keyboard::IKeyboardEvent::key","value":"fn (&self) -> String","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Returns the value of a key or keys pressed by the user.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588025,"byte_end":588034,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588440,"byte_end":588448,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"meta_key","qualname":"::webapi::events::keyboard::IKeyboardEvent::meta_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Indicates whether the Meta key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588423,"byte_end":588432,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588839,"byte_end":588845,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"repeat","qualname":"::webapi::events::keyboard::IKeyboardEvent::repeat","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Indicates whether the key is held down such that it is repeating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":588822,"byte_end":588831,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589241,"byte_end":589250,"line_start":147,"line_end":147,"column_start":8,"column_end":17},"name":"shift_key","qualname":"::webapi::events::keyboard::IKeyboardEvent::shift_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" Indicates whether the Shift key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589224,"byte_end":589233,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17514},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589499,"byte_end":589502,"line_start":158,"line_end":158,"column_start":5,"column_end":8},"name":"Alt","qualname":"::webapi::events::keyboard::ModifierKey::Alt","value":"ModifierKey::Alt","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17516},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589508,"byte_end":589513,"line_start":159,"line_end":159,"column_start":5,"column_end":10},"name":"AltGr","qualname":"::webapi::events::keyboard::ModifierKey::AltGr","value":"ModifierKey::AltGr","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17518},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589519,"byte_end":589527,"line_start":160,"line_end":160,"column_start":5,"column_end":13},"name":"CapsLock","qualname":"::webapi::events::keyboard::ModifierKey::CapsLock","value":"ModifierKey::CapsLock","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17520},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589533,"byte_end":589537,"line_start":161,"line_end":161,"column_start":5,"column_end":9},"name":"Ctrl","qualname":"::webapi::events::keyboard::ModifierKey::Ctrl","value":"ModifierKey::Ctrl","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17522},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589543,"byte_end":589551,"line_start":162,"line_end":162,"column_start":5,"column_end":13},"name":"Function","qualname":"::webapi::events::keyboard::ModifierKey::Function","value":"ModifierKey::Function","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17524},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589557,"byte_end":589569,"line_start":163,"line_end":163,"column_start":5,"column_end":17},"name":"FunctionLock","qualname":"::webapi::events::keyboard::ModifierKey::FunctionLock","value":"ModifierKey::FunctionLock","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17526},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589575,"byte_end":589580,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Hyper","qualname":"::webapi::events::keyboard::ModifierKey::Hyper","value":"ModifierKey::Hyper","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17528},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589586,"byte_end":589590,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Meta","qualname":"::webapi::events::keyboard::ModifierKey::Meta","value":"ModifierKey::Meta","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17530},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589596,"byte_end":589603,"line_start":166,"line_end":166,"column_start":5,"column_end":12},"name":"NumLock","qualname":"::webapi::events::keyboard::ModifierKey::NumLock","value":"ModifierKey::NumLock","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17532},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589609,"byte_end":589611,"line_start":167,"line_end":167,"column_start":5,"column_end":7},"name":"OS","qualname":"::webapi::events::keyboard::ModifierKey::OS","value":"ModifierKey::OS","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17534},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589617,"byte_end":589627,"line_start":168,"line_end":168,"column_start":5,"column_end":15},"name":"ScrollLock","qualname":"::webapi::events::keyboard::ModifierKey::ScrollLock","value":"ModifierKey::ScrollLock","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17536},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589633,"byte_end":589638,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Shift","qualname":"::webapi::events::keyboard::ModifierKey::Shift","value":"ModifierKey::Shift","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17538},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589644,"byte_end":589649,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Super","qualname":"::webapi::events::keyboard::ModifierKey::Super","value":"ModifierKey::Super","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17540},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589655,"byte_end":589661,"line_start":171,"line_end":171,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::webapi::events::keyboard::ModifierKey::Symbol","value":"ModifierKey::Symbol","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17542},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589667,"byte_end":589677,"line_start":172,"line_end":172,"column_start":5,"column_end":15},"name":"SymbolLock","qualname":"::webapi::events::keyboard::ModifierKey::SymbolLock","value":"ModifierKey::SymbolLock","parent":{"krate":0,"index":17513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":17513},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589481,"byte_end":589492,"line_start":157,"line_end":157,"column_start":10,"column_end":21},"name":"ModifierKey","qualname":"::webapi::events::keyboard::ModifierKey","value":"ModifierKey::{Alt, AltGr, CapsLock, Ctrl, Function, FunctionLock, Hyper, Meta, NumLock, OS, ScrollLock, Shift, Super, Symbol, SymbolLock}","parent":null,"children":[{"krate":0,"index":17514},{"krate":0,"index":17516},{"krate":0,"index":17518},{"krate":0,"index":17520},{"krate":0,"index":17522},{"krate":0,"index":17524},{"krate":0,"index":17526},{"krate":0,"index":17528},{"krate":0,"index":17530},{"krate":0,"index":17532},{"krate":0,"index":17534},{"krate":0,"index":17536},{"krate":0,"index":17538},{"krate":0,"index":17540},{"krate":0,"index":17542}],"decl_id":null,"docs":" A modifier key on the keyboard.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589404,"byte_end":589426,"line_start":155,"line_end":155,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17556},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589880,"byte_end":589888,"line_start":179,"line_end":179,"column_start":5,"column_end":13},"name":"Standard","qualname":"::webapi::events::keyboard::KeyboardLocation::Standard","value":"KeyboardLocation::Standard","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The key has only one version, or the location can't be distinguished.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17558},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589934,"byte_end":589938,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Left","qualname":"::webapi::events::keyboard::KeyboardLocation::Left","value":"KeyboardLocation::Left","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The left-hand version of a key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17560},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589985,"byte_end":589990,"line_start":183,"line_end":183,"column_start":5,"column_end":10},"name":"Right","qualname":"::webapi::events::keyboard::KeyboardLocation::Right","value":"KeyboardLocation::Right","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The right-hand version of a key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17562},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590034,"byte_end":590040,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"Numpad","qualname":"::webapi::events::keyboard::KeyboardLocation::Numpad","value":"KeyboardLocation::Numpad","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The key was on a numeric pad.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17564},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590086,"byte_end":590092,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"Mobile","qualname":"::webapi::events::keyboard::KeyboardLocation::Mobile","value":"KeyboardLocation::Mobile","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The key was on a mobile device.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17566},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590133,"byte_end":590141,"line_start":189,"line_end":189,"column_start":5,"column_end":13},"name":"Joystick","qualname":"::webapi::events::keyboard::KeyboardLocation::Joystick","value":"KeyboardLocation::Joystick","parent":{"krate":0,"index":17555},"children":[],"decl_id":null,"docs":" The key was on a joystick.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":17555},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":589779,"byte_end":589795,"line_start":177,"line_end":177,"column_start":10,"column_end":26},"name":"KeyboardLocation","qualname":"::webapi::events::keyboard::KeyboardLocation","value":"KeyboardLocation::{Standard, Left, Right, Numpad, Mobile, Joystick}","parent":null,"children":[{"krate":0,"index":17556},{"krate":0,"index":17558},{"krate":0,"index":17560},{"krate":0,"index":17562},{"krate":0,"index":17564},{"krate":0,"index":17566}],"decl_id":null,"docs":" The location on the keyboard of a key.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17579},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590548,"byte_end":590561,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"KeyboardEvent","qualname":"::webapi::events::keyboard::KeyboardEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IKeyboardEvent](trait.IKeyboardEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"KeyboardEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590460,"byte_end":590503,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590504,"byte_end":590536,"line_start":199,"line_end":199,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":17645},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591099,"byte_end":591112,"line_start":214,"line_end":214,"column_start":12,"column_end":25},"name":"KeyPressEvent","qualname":"::webapi::events::keyboard::KeyPressEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `KeyPressEvent` is fired when a key is pressed down. It's only\n fired for keys which produce a character value.","sig":null,"attributes":[{"value":"reference(instance_of = \"KeyboardEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590963,"byte_end":591006,"line_start":211,"line_end":211,"column_start":1,"column_end":44}},{"value":"reference(event = \"keypress\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591007,"byte_end":591039,"line_start":212,"line_end":212,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, KeyboardEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591040,"byte_end":591087,"line_start":213,"line_end":213,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":17719},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591701,"byte_end":591713,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"KeyDownEvent","qualname":"::webapi::events::keyboard::KeyDownEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `KeyDownEvent` is fired when a key is pressed down.\n Unlike the `KeyPressEvent` event it's also fired for keys which\n do not produce a character value.","sig":null,"attributes":[{"value":"reference(instance_of = \"KeyboardEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591566,"byte_end":591609,"line_start":226,"line_end":226,"column_start":1,"column_end":44}},{"value":"reference(event = \"keydown\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591610,"byte_end":591641,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"reference(subclass_of (Event, KeyboardEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591642,"byte_end":591689,"line_start":228,"line_end":228,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":17793},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592182,"byte_end":592192,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"KeyUpEvent","qualname":"::webapi::events::keyboard::KeyUpEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `KeyUpEvent` is fired when a key is released.","sig":null,"attributes":[{"value":"reference(instance_of = \"KeyboardEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592049,"byte_end":592092,"line_start":239,"line_end":239,"column_start":1,"column_end":44}},{"value":"reference(event = \"keyup\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592093,"byte_end":592122,"line_start":240,"line_end":240,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, KeyboardEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592123,"byte_end":592170,"line_start":241,"line_end":241,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":594720,"byte_end":594731,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"IMouseEvent","qualname":"::webapi::events::mouse::IMouseEvent","value":"IMouseEvent: IUiEvent","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"decl_id":null,"docs":" The `IMouseEvent` interface represents events that occur due to the user\n interacting with a pointing device (such as a mouse).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":595012,"byte_end":595019,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"alt_key","qualname":"::webapi::events::mouse::IMouseEvent::alt_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns whether the Alt key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":594995,"byte_end":595004,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":595373,"byte_end":595379,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"button","qualname":"::webapi::events::mouse::IMouseEvent::button","value":"fn (&self) -> MouseButton","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Indicates the mouse button that fired this event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":596034,"byte_end":596041,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"buttons","qualname":"::webapi::events::mouse::IMouseEvent::buttons","value":"fn (&self) -> MouseButtonsState","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Indicates which mouse buttons were down when this event was fired.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":596506,"byte_end":596514,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"client_x","qualname":"::webapi::events::mouse::IMouseEvent::client_x","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the X position in the application's client area where this event occured.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":596489,"byte_end":596498,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":596916,"byte_end":596924,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"client_y","qualname":"::webapi::events::mouse::IMouseEvent::client_y","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the Y position in the application's client area where this event occured.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":596899,"byte_end":596908,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":597318,"byte_end":597326,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"offset_x","qualname":"::webapi::events::mouse::IMouseEvent::offset_x","value":"fn (&self) -> f64","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the X position on the target element where this event occured.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":597301,"byte_end":597310,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":597720,"byte_end":597728,"line_start":91,"line_end":91,"column_start":8,"column_end":16},"name":"offset_y","qualname":"::webapi::events::mouse::IMouseEvent::offset_y","value":"fn (&self) -> f64","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the Y position on the target element where this event occured.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":597703,"byte_end":597712,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598111,"byte_end":598119,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"ctrl_key","qualname":"::webapi::events::mouse::IMouseEvent::ctrl_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Indicates whether the Ctrl key was down when this event fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598094,"byte_end":598103,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598515,"byte_end":598533,"line_start":113,"line_end":113,"column_start":8,"column_end":26},"name":"get_modifier_state","qualname":"::webapi::events::mouse::IMouseEvent::get_modifier_state","value":"fn (&self, key: ModifierKey) -> bool","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the current state of the specified modifier key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598498,"byte_end":598507,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598893,"byte_end":598901,"line_start":122,"line_end":122,"column_start":8,"column_end":16},"name":"meta_key","qualname":"::webapi::events::mouse::IMouseEvent::meta_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Indicates whether the Meta key was down when this event fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":598876,"byte_end":598885,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":599344,"byte_end":599354,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"movement_x","qualname":"::webapi::events::mouse::IMouseEvent::movement_x","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the change in X coordinate of the pointer between this event and the previous\n MouseMove event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":599327,"byte_end":599336,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":599798,"byte_end":599808,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"movement_y","qualname":"::webapi::events::mouse::IMouseEvent::movement_y","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the change in Y coordinate of the pointer between this event and the previous\n MouseMove event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":599781,"byte_end":599790,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600113,"byte_end":600119,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"region","qualname":"::webapi::events::mouse::IMouseEvent::region","value":"fn (&self) -> Option<String>","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the ID of the hit region affected by the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600096,"byte_end":600105,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600511,"byte_end":600525,"line_start":167,"line_end":167,"column_start":8,"column_end":22},"name":"related_target","qualname":"::webapi::events::mouse::IMouseEvent::related_target","value":"fn (&self) -> Option<EventTarget>","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the secondary target of this event, if any.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600494,"byte_end":600503,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600926,"byte_end":600934,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"screen_x","qualname":"::webapi::events::mouse::IMouseEvent::screen_x","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the X position of the pointer in screen coordinates.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":600909,"byte_end":600918,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601315,"byte_end":601323,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"screen_y","qualname":"::webapi::events::mouse::IMouseEvent::screen_y","value":"fn (&self) -> i32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Returns the Y position of the pointer in screen coordinates.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601298,"byte_end":601307,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601713,"byte_end":601722,"line_start":200,"line_end":200,"column_start":8,"column_end":17},"name":"shift_key","qualname":"::webapi::events::mouse::IMouseEvent::shift_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" Indicates whether the Shift key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601696,"byte_end":601705,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17948},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601998,"byte_end":602002,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Left","qualname":"::webapi::events::mouse::MouseButton::Left","value":"MouseButton::Left","parent":{"krate":0,"index":17947},"children":[],"decl_id":null,"docs":" The left mouse button.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17950},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602053,"byte_end":602058,"line_start":213,"line_end":213,"column_start":5,"column_end":10},"name":"Wheel","qualname":"::webapi::events::mouse::MouseButton::Wheel","value":"MouseButton::Wheel","parent":{"krate":0,"index":17947},"children":[],"decl_id":null,"docs":" The mouse wheel/middle mouse button.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17952},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602096,"byte_end":602101,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"Right","qualname":"::webapi::events::mouse::MouseButton::Right","value":"MouseButton::Right","parent":{"krate":0,"index":17947},"children":[],"decl_id":null,"docs":" The right mouse button.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17954},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602155,"byte_end":602162,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"Button4","qualname":"::webapi::events::mouse::MouseButton::Button4","value":"MouseButton::Button4","parent":{"krate":0,"index":17947},"children":[],"decl_id":null,"docs":" The fourth mouse button (browser back).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17956},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602218,"byte_end":602225,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"Button5","qualname":"::webapi::events::mouse::MouseButton::Button5","value":"MouseButton::Button5","parent":{"krate":0,"index":17947},"children":[],"decl_id":null,"docs":" The fifth mouse button (browser forward).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":17947},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":601949,"byte_end":601960,"line_start":209,"line_end":209,"column_start":10,"column_end":21},"name":"MouseButton","qualname":"::webapi::events::mouse::MouseButton","value":"MouseButton::{Left, Wheel, Right, Button4, Button5}","parent":null,"children":[{"krate":0,"index":17948},{"krate":0,"index":17950},{"krate":0,"index":17952},{"krate":0,"index":17954},{"krate":0,"index":17956}],"decl_id":null,"docs":" Represents buttons on a mouse during mouse events.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17969},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602427,"byte_end":602444,"line_start":226,"line_end":226,"column_start":12,"column_end":29},"name":"MouseButtonsState","qualname":"::webapi::events::mouse::MouseButtonsState","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the state of mouse buttons in a `MouseEvent`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602564,"byte_end":602571,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"is_down","qualname":"<MouseButtonsState>::is_down","value":"fn (&self, button: MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a [MouseButton](enum.MouseButton.html) is currently pressed\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17984},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603327,"byte_end":603337,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"MouseEvent","qualname":"::webapi::events::mouse::MouseEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IMouseEvent](trait.IMouseEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603233,"byte_end":603273,"line_start":247,"line_end":247,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event, UiEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603274,"byte_end":603315,"line_start":248,"line_end":248,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":18056},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603924,"byte_end":603934,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"ClickEvent","qualname":"::webapi::events::mouse::ClickEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ClickEvent` is fired when a pointing device button (usually a\n mouse's primary button) is pressed and released on a single element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603788,"byte_end":603828,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"reference(event = \"click\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603829,"byte_end":603858,"line_start":262,"line_end":262,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603859,"byte_end":603912,"line_start":263,"line_end":263,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18136},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604549,"byte_end":604562,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"AuxClickEvent","qualname":"::webapi::events::mouse::AuxClickEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `AuxClickEvent` event is fired when a non-primary pointing device button\n (e.g. any non-left mouse button) has been pressed and released on an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604410,"byte_end":604450,"line_start":276,"line_end":276,"column_start":1,"column_end":41}},{"value":"reference(event = \"auxclick\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604451,"byte_end":604483,"line_start":277,"line_end":277,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604484,"byte_end":604537,"line_start":278,"line_end":278,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18216},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605198,"byte_end":605214,"line_start":294,"line_end":294,"column_start":12,"column_end":28},"name":"ContextMenuEvent","qualname":"::webapi::events::mouse::ContextMenuEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ContextMenuEvent` event is fired when the right button of the mouse is clicked\n (before the context menu is displayed), or when the context menu key is pressed.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605056,"byte_end":605096,"line_start":291,"line_end":291,"column_start":1,"column_end":41}},{"value":"reference(event = \"contextmenu\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605097,"byte_end":605132,"line_start":292,"line_end":292,"column_start":1,"column_end":36}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605133,"byte_end":605186,"line_start":293,"line_end":293,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18296},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605831,"byte_end":605847,"line_start":310,"line_end":310,"column_start":12,"column_end":28},"name":"DoubleClickEvent","qualname":"::webapi::events::mouse::DoubleClickEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DoubleClickEvent` is fired when a pointing device button\n (usually a mouse's primary button) is clicked twice on a single\n element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605692,"byte_end":605732,"line_start":307,"line_end":307,"column_start":1,"column_end":41}},{"value":"reference(event = \"dblclick\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605733,"byte_end":605765,"line_start":308,"line_end":308,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605766,"byte_end":605819,"line_start":309,"line_end":309,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18376},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606414,"byte_end":606428,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"MouseDownEvent","qualname":"::webapi::events::mouse::MouseDownEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseDownEvent` is fired when a pointing device button is pressed on\n an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606274,"byte_end":606314,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"reference(event = \"mousedown\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606315,"byte_end":606348,"line_start":323,"line_end":323,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606349,"byte_end":606402,"line_start":324,"line_end":324,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18456},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606984,"byte_end":606996,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"MouseUpEvent","qualname":"::webapi::events::mouse::MouseUpEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseUpEvent` is fired when a pointing device button is released\n over an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606846,"byte_end":606886,"line_start":337,"line_end":337,"column_start":1,"column_end":41}},{"value":"reference(event = \"mouseup\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606887,"byte_end":606918,"line_start":338,"line_end":338,"column_start":1,"column_end":32}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606919,"byte_end":606972,"line_start":339,"line_end":339,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18536},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607568,"byte_end":607582,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"MouseMoveEvent","qualname":"::webapi::events::mouse::MouseMoveEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseMoveEvent` is fired when a pointing device (usually a mouse)\n is moved while over an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607428,"byte_end":607468,"line_start":352,"line_end":352,"column_start":1,"column_end":41}},{"value":"reference(event = \"mousemove\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607469,"byte_end":607502,"line_start":353,"line_end":353,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607503,"byte_end":607556,"line_start":354,"line_end":354,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18616},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608214,"byte_end":608228,"line_start":370,"line_end":370,"column_start":12,"column_end":26},"name":"MouseOverEvent","qualname":"::webapi::events::mouse::MouseOverEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseOverEvent` is fired when a pointing device (usually a mouse)\n is moved onto the element that has the listener attached or onto one of its children.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608074,"byte_end":608114,"line_start":367,"line_end":367,"column_start":1,"column_end":41}},{"value":"reference(event = \"mouseover\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608115,"byte_end":608148,"line_start":368,"line_end":368,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608149,"byte_end":608202,"line_start":369,"line_end":369,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18696},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608854,"byte_end":608867,"line_start":385,"line_end":385,"column_start":12,"column_end":25},"name":"MouseOutEvent","qualname":"::webapi::events::mouse::MouseOutEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseOutEvent` is fired when a pointing device (usually a mouse)\n is moved off the element that has the listener attached or off one of its children.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608715,"byte_end":608755,"line_start":382,"line_end":382,"column_start":1,"column_end":41}},{"value":"reference(event = \"mouseout\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608756,"byte_end":608788,"line_start":383,"line_end":383,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608789,"byte_end":608842,"line_start":384,"line_end":384,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18776},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609472,"byte_end":609487,"line_start":400,"line_end":400,"column_start":12,"column_end":27},"name":"MouseEnterEvent","qualname":"::webapi::events::mouse::MouseEnterEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseEnterEvent` is fired when a pointing device (usually a mouse)\n is moved over the element that has the listener attached.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609331,"byte_end":609371,"line_start":397,"line_end":397,"column_start":1,"column_end":41}},{"value":"reference(event = \"mouseenter\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609372,"byte_end":609406,"line_start":398,"line_end":398,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609407,"byte_end":609460,"line_start":399,"line_end":399,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18856},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610105,"byte_end":610120,"line_start":415,"line_end":415,"column_start":12,"column_end":27},"name":"MouseLeaveEvent","qualname":"::webapi::events::mouse::MouseLeaveEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseLeaveEvent` is fired when a pointing device (usually a mouse)\n is moved out of an element that has the listener attached to it.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609964,"byte_end":610004,"line_start":412,"line_end":412,"column_start":1,"column_end":41}},{"value":"reference(event = \"mouseleave\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610005,"byte_end":610039,"line_start":413,"line_end":413,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610040,"byte_end":610093,"line_start":414,"line_end":414,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":18936},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610738,"byte_end":610753,"line_start":430,"line_end":430,"column_start":12,"column_end":27},"name":"MouseWheelEvent","qualname":"::webapi::events::mouse::MouseWheelEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `MouseWheelEvent` is fired when a pointing device's wheel button (usually a mousewheel)\n is rotated over the element that has the listener attached.","sig":null,"attributes":[{"value":"reference(instance_of = \"MouseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610602,"byte_end":610642,"line_start":427,"line_end":427,"column_start":1,"column_end":41}},{"value":"reference(event = \"wheel\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610643,"byte_end":610672,"line_start":428,"line_end":428,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610673,"byte_end":610726,"line_start":429,"line_end":429,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":611118,"byte_end":611125,"line_start":441,"line_end":441,"column_start":12,"column_end":19},"name":"delta_x","qualname":"<MouseWheelEvent>::delta_x","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The change in X of the wheel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":611441,"byte_end":611448,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"delta_y","qualname":"<MouseWheelEvent>::delta_y","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The change in Y of the wheel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":611764,"byte_end":611771,"line_start":461,"line_end":461,"column_start":12,"column_end":19},"name":"delta_z","qualname":"<MouseWheelEvent>::delta_z","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The change in Z of the wheel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":612094,"byte_end":612104,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"delta_mode","qualname":"<MouseWheelEvent>::delta_mode","value":"fn (&self) -> MouseWheelDeltaMode","parent":null,"children":[],"decl_id":null,"docs":" The unit of measure of change","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19037},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":612798,"byte_end":612803,"line_start":491,"line_end":491,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::webapi::events::mouse::MouseWheelDeltaMode::Pixel","value":"MouseWheelDeltaMode::Pixel","parent":{"krate":0,"index":19036},"children":[],"decl_id":null,"docs":" The unit of measurement for the delta is pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19039},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":612933,"byte_end":612937,"line_start":494,"line_end":494,"column_start":5,"column_end":9},"name":"Line","qualname":"::webapi::events::mouse::MouseWheelDeltaMode::Line","value":"MouseWheelDeltaMode::Line","parent":{"krate":0,"index":19036},"children":[],"decl_id":null,"docs":" The unit of measurement for the delta is lines\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19041},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":613068,"byte_end":613072,"line_start":497,"line_end":497,"column_start":5,"column_end":9},"name":"Page","qualname":"::webapi::events::mouse::MouseWheelDeltaMode::Page","value":"MouseWheelDeltaMode::Page","parent":{"krate":0,"index":19036},"children":[],"decl_id":null,"docs":" The unit of measurement for the delta is pages\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":19036},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":612646,"byte_end":612665,"line_start":488,"line_end":488,"column_start":10,"column_end":29},"name":"MouseWheelDeltaMode","qualname":"::webapi::events::mouse::MouseWheelDeltaMode","value":"MouseWheelDeltaMode::{Pixel, Line, Page}","parent":null,"children":[{"krate":0,"index":19037},{"krate":0,"index":19039},{"krate":0,"index":19041}],"decl_id":null,"docs":" What unit of measure the mouse wheel delta is in","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":618802,"byte_end":618815,"line_start":16,"line_end":16,"column_start":11,"column_end":24},"name":"IPointerEvent","qualname":"::webapi::events::pointer::IPointerEvent","value":"IPointerEvent: IMouseEvent","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"decl_id":null,"docs":" The `IPointerEvent` interface represents the state of a DOM event produced by a pointer\n such as the geometry of the contact point, the device type that generated the event, the\n amount of pressure that was applied on the contact surface, etc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619103,"byte_end":619113,"line_start":22,"line_end":22,"column_start":8,"column_end":18},"name":"pointer_id","qualname":"::webapi::events::pointer::IPointerEvent::pointer_id","value":"fn (&self) -> i32","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns a unique identifier for the pointer causing the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619086,"byte_end":619095,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619504,"byte_end":619509,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"width","qualname":"::webapi::events::pointer::IPointerEvent::width","value":"fn (&self) -> f64","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the width, in CSS pixels, of the contact geometry of the pointer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619487,"byte_end":619496,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619899,"byte_end":619905,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"height","qualname":"::webapi::events::pointer::IPointerEvent::height","value":"fn (&self) -> f64","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the height, in CSS pixels, of the contact geometry of the pointer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":619882,"byte_end":619891,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":620386,"byte_end":620394,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"pressure","qualname":"::webapi::events::pointer::IPointerEvent::pressure","value":"fn (&self) -> f64","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the normalized pressure of the pointer in the range [0, 1]","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":620369,"byte_end":620378,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":620961,"byte_end":620980,"line_start":69,"line_end":69,"column_start":8,"column_end":27},"name":"tangential_pressure","qualname":"::webapi::events::pointer::IPointerEvent::tangential_pressure","value":"fn (&self) -> f64","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the normalized tangential pressure of the pointer in the range [-1, 1], where 0 is\n the hardware's neutral position","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":620944,"byte_end":620953,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":621464,"byte_end":621470,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"tilt_x","qualname":"::webapi::events::pointer::IPointerEvent::tilt_x","value":"fn (&self) -> i32","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the angle, in the range of [-90, 90] degrees, between the Y-Z plane and the plane\n containing the transducer (e.g. pen stylus) and the Y axis.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":621447,"byte_end":621456,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":621941,"byte_end":621947,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"tilt_y","qualname":"::webapi::events::pointer::IPointerEvent::tilt_y","value":"fn (&self) -> i32","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the angle, in the range of [-90, 90] degrees, between the X-Z plane and the plane\n containing the transducer (e.g. pen stylus) and the X axis.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":621924,"byte_end":621933,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":622397,"byte_end":622402,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"twist","qualname":"::webapi::events::pointer::IPointerEvent::twist","value":"fn (&self) -> i32","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns the clockwise rotation, in the range of [0, 359] degrees, of\n the transducer (e.g. pen stylus) around it's own major axis","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":622380,"byte_end":622389,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":622776,"byte_end":622788,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"pointer_type","qualname":"::webapi::events::pointer::IPointerEvent::pointer_type","value":"fn (&self) -> String","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Indicates the device type that caused the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":622759,"byte_end":622768,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":623195,"byte_end":623205,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"is_primary","qualname":"::webapi::events::pointer::IPointerEvent::is_primary","value":"fn (&self) -> bool","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Indicates if the pointer represents the primary pointer of this pointer type","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":623178,"byte_end":623187,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624711,"byte_end":624723,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"PointerEvent","qualname":"::webapi::events::pointer::PointerEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IPointerEvent](trait.IPointerEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624603,"byte_end":624645,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624646,"byte_end":624699,"line_start":162,"line_end":162,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":19182},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625359,"byte_end":625375,"line_start":179,"line_end":179,"column_start":12,"column_end":28},"name":"PointerOverEvent","qualname":"::webapi::events::pointer::PointerOverEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerOverEvent` is fired when a pointing device is moved into\n a element's hit test boundaries.","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625201,"byte_end":625243,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerover\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625244,"byte_end":625279,"line_start":177,"line_end":177,"column_start":1,"column_end":36}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625280,"byte_end":625347,"line_start":178,"line_end":178,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19268},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626084,"byte_end":626101,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"PointerEnterEvent","qualname":"::webapi::events::pointer::PointerEnterEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerEnterEvent` is fired when a pointing device is moved into\n the hit test boundaries of an element or its descendants. This event does not bubble.","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625925,"byte_end":625967,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerenter\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625968,"byte_end":626004,"line_start":193,"line_end":193,"column_start":1,"column_end":37}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626005,"byte_end":626072,"line_start":194,"line_end":194,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19354},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626713,"byte_end":626729,"line_start":210,"line_end":210,"column_start":12,"column_end":28},"name":"PointerDownEvent","qualname":"::webapi::events::pointer::PointerDownEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerDownEvent` is fired when a pointer becomes active","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626555,"byte_end":626597,"line_start":207,"line_end":207,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerdown\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626598,"byte_end":626633,"line_start":208,"line_end":208,"column_start":1,"column_end":36}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626634,"byte_end":626701,"line_start":209,"line_end":209,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19440},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627342,"byte_end":627358,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"PointerMoveEvent","qualname":"::webapi::events::pointer::PointerMoveEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerMoveEvent` is fired when a pointer changes coordinates","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627184,"byte_end":627226,"line_start":222,"line_end":222,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointermove\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627227,"byte_end":627262,"line_start":223,"line_end":223,"column_start":1,"column_end":36}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627263,"byte_end":627330,"line_start":224,"line_end":224,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627915,"byte_end":627935,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"get_coalesced_events","qualname":"<PointerMoveEvent>::get_coalesced_events","value":"fn (&self) -> Vec<PointerEvent>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sequence of all `PointerEvent` instances that were coalesced into the dispatched `PointerMoveEvent`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627894,"byte_end":627903,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628508,"byte_end":628522,"line_start":254,"line_end":254,"column_start":12,"column_end":26},"name":"PointerUpEvent","qualname":"::webapi::events::pointer::PointerUpEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerUpEvent` is fired when a pointer is no longer active","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628352,"byte_end":628394,"line_start":251,"line_end":251,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerup\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628395,"byte_end":628428,"line_start":252,"line_end":252,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628429,"byte_end":628496,"line_start":253,"line_end":253,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19617},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629304,"byte_end":629322,"line_start":271,"line_end":271,"column_start":12,"column_end":30},"name":"PointerCancelEvent","qualname":"::webapi::events::pointer::PointerCancelEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerCancelEvent` is fired when a pointer will no longer produce events\n (for example the device is deactivated), or if the pointer starts a gesture after a pointerdown event\n (for example panning, zooming, or drag and drop)","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629144,"byte_end":629186,"line_start":268,"line_end":268,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointercancel\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629187,"byte_end":629224,"line_start":269,"line_end":269,"column_start":1,"column_end":38}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629225,"byte_end":629292,"line_start":270,"line_end":270,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19703},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630074,"byte_end":630089,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"name":"PointerOutEvent","qualname":"::webapi::events::pointer::PointerOutEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerOutEvent` is fired when the pointer moves out of the hit test boundaries of an element.\n This can include when a finger leaves a touch screen or a pen leaves the detectable hover range.","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629917,"byte_end":629959,"line_start":284,"line_end":284,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerout\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629960,"byte_end":629994,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629995,"byte_end":630062,"line_start":286,"line_end":286,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19789},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630890,"byte_end":630907,"line_start":304,"line_end":304,"column_start":12,"column_end":29},"name":"PointerLeaveEvent","qualname":"::webapi::events::pointer::PointerLeaveEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerLeaveEvent` is fired when the pointer moves out of the hit test boundaries\n of an element and it's descendants. This can include when a finger leaves a touch screen\n or a pen leaves the detectable hover range. This event does not bubble.","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630731,"byte_end":630773,"line_start":301,"line_end":301,"column_start":1,"column_end":43}},{"value":"reference(event = \"pointerleave\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630774,"byte_end":630810,"line_start":302,"line_end":302,"column_start":1,"column_end":37}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630811,"byte_end":630878,"line_start":303,"line_end":303,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19875},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631551,"byte_end":631573,"line_start":319,"line_end":319,"column_start":12,"column_end":34},"name":"GotPointerCaptureEvent","qualname":"::webapi::events::pointer::GotPointerCaptureEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `GotPointerCaptureEvent` fires when an element receives pointer capture","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631387,"byte_end":631429,"line_start":316,"line_end":316,"column_start":1,"column_end":43}},{"value":"reference(event = \"gotpointercapture\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631430,"byte_end":631471,"line_start":317,"line_end":317,"column_start":1,"column_end":42}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631472,"byte_end":631539,"line_start":318,"line_end":318,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":19961},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632238,"byte_end":632261,"line_start":334,"line_end":334,"column_start":12,"column_end":35},"name":"LostPointerCaptureEvent","qualname":"::webapi::events::pointer::LostPointerCaptureEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `LostPointerCaptureEvent` fires when an element loses pointer capture","sig":null,"attributes":[{"value":"reference(instance_of = \"PointerEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632073,"byte_end":632115,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"reference(event = \"lostpointercapture\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632116,"byte_end":632158,"line_start":332,"line_end":332,"column_start":1,"column_end":43}},{"value":"reference(subclass_of (Event, UiEvent, MouseEvent, PointerEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632159,"byte_end":632226,"line_start":333,"line_end":333,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":20047},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632900,"byte_end":632922,"line_start":349,"line_end":349,"column_start":12,"column_end":34},"name":"PointerLockChangeEvent","qualname":"::webapi::events::pointer::PointerLockChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerLockChangeEvent` fires when the pointer is locked or unlocked","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632778,"byte_end":632813,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"reference(event = \"pointerlockchange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632814,"byte_end":632855,"line_start":347,"line_end":347,"column_start":1,"column_end":42}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632856,"byte_end":632888,"line_start":348,"line_end":348,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":20115},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633414,"byte_end":633435,"line_start":361,"line_end":361,"column_start":12,"column_end":33},"name":"PointerLockErrorEvent","qualname":"::webapi::events::pointer::PointerLockErrorEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `PointerLockErrorEvent` fires when an error occurs locking a pointer","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633293,"byte_end":633328,"line_start":358,"line_end":358,"column_start":1,"column_end":36}},{"value":"reference(event = \"pointerlockerror\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633329,"byte_end":633369,"line_start":359,"line_end":359,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633370,"byte_end":633402,"line_start":360,"line_end":360,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":638894,"byte_end":638908,"line_start":10,"line_end":10,"column_start":11,"column_end":25},"name":"IProgressEvent","qualname":"::webapi::events::progress::IProgressEvent","value":"IProgressEvent: IEvent","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498}],"decl_id":null,"docs":" The `IProgressEvent` interface represents progress-related\n events.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":639191,"byte_end":639208,"line_start":16,"line_end":16,"column_start":8,"column_end":25},"name":"length_computable","qualname":"::webapi::events::progress::IProgressEvent::length_computable","value":"fn (&self) -> bool","parent":{"krate":0,"index":2495},"children":[],"decl_id":null,"docs":" Indicates whether the progress is measureable.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":639174,"byte_end":639183,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":639609,"byte_end":639615,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"loaded","qualname":"::webapi::events::progress::IProgressEvent::loaded","value":"fn (&self) -> u64","parent":{"krate":0,"index":2495},"children":[],"decl_id":null,"docs":" Returns the amount of work already performed by the underlying process.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":639592,"byte_end":639601,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640006,"byte_end":640011,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"total","qualname":"::webapi::events::progress::IProgressEvent::total","value":"fn (&self) -> u64","parent":{"krate":0,"index":2495},"children":[],"decl_id":null,"docs":" Returns the total amount of work that the underlying process will perform.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":639989,"byte_end":639998,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20198},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640524,"byte_end":640544,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"ProgressRelatedEvent","qualname":"::webapi::events::progress::ProgressRelatedEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [IProgressEvent](trait.IProgressEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640436,"byte_end":640479,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640480,"byte_end":640512,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":20264},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641066,"byte_end":641079,"line_start":66,"line_end":66,"column_start":12,"column_end":25},"name":"ProgressEvent","qualname":"::webapi::events::progress::ProgressEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ProgressEvent` is fired to indicate that an operation is in progress.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640923,"byte_end":640966,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"reference(event = \"progress\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640967,"byte_end":640999,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641000,"byte_end":641054,"line_start":65,"line_end":65,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20338},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641588,"byte_end":641605,"line_start":79,"line_end":79,"column_start":12,"column_end":29},"name":"ProgressLoadEvent","qualname":"::webapi::events::progress::ProgressLoadEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ProgressLoadEvent` is fired when progress has successful finished.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641449,"byte_end":641492,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"reference(event = \"load\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641493,"byte_end":641521,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641522,"byte_end":641576,"line_start":78,"line_end":78,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20412},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642104,"byte_end":642118,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"LoadStartEvent","qualname":"::webapi::events::progress::LoadStartEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `LoadStartEvent` is fired when progress has begun.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641960,"byte_end":642003,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"reference(event = \"loadstart\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642004,"byte_end":642037,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642038,"byte_end":642092,"line_start":91,"line_end":91,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20486},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642712,"byte_end":642724,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"LoadEndEvent","qualname":"::webapi::events::progress::LoadEndEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `LoadEndEvent` is fired when progress has stopped,\n e.g. after `ProgressErrorEvent`, `ProgressAbortEvent`\n or `ProgressLoadEvent` have been dispatched.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642570,"byte_end":642613,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"reference(event = \"loadend\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642614,"byte_end":642645,"line_start":105,"line_end":105,"column_start":1,"column_end":32}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642646,"byte_end":642700,"line_start":106,"line_end":106,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20560},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643232,"byte_end":643250,"line_start":120,"line_end":120,"column_start":12,"column_end":30},"name":"ProgressAbortEvent","qualname":"::webapi::events::progress::ProgressAbortEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ProgressAbortEvent` is fired when the progress has been aborted.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643092,"byte_end":643135,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"reference(event = \"abort\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643136,"byte_end":643165,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643166,"byte_end":643220,"line_start":119,"line_end":119,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643764,"byte_end":643782,"line_start":133,"line_end":133,"column_start":12,"column_end":30},"name":"ProgressErrorEvent","qualname":"::webapi::events::progress::ProgressErrorEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ProgressErrorEvent` is fired when the progress has failed.","sig":null,"attributes":[{"value":"reference(instance_of = \"ProgressEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643624,"byte_end":643667,"line_start":130,"line_end":130,"column_start":1,"column_end":44}},{"value":"reference(event = \"error\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643668,"byte_end":643697,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event, ProgressRelatedEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643698,"byte_end":643752,"line_start":132,"line_end":132,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":20708},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645758,"byte_end":645774,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"SocketCloseEvent","qualname":"::webapi::events::socket::SocketCloseEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A SocketCloseEvent is sent to clients using WebSockets when the connection is closed.","sig":null,"attributes":[{"value":"reference(instance_of = \"CloseEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645643,"byte_end":645683,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"reference(event = \"close\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645684,"byte_end":645713,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645714,"byte_end":645746,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":646100,"byte_end":646104,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"code","qualname":"<SocketCloseEvent>::code","value":"fn (&self) -> SocketCloseCode","parent":null,"children":[],"decl_id":null,"docs":" Returns the close code sent by the server.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":646079,"byte_end":646088,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":646604,"byte_end":646610,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"reason","qualname":"<SocketCloseEvent>::reason","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the reason the server closed the connection. This is specific to the particular server and sub-protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":646583,"byte_end":646592,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647035,"byte_end":647044,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"was_clean","qualname":"<SocketCloseEvent>::was_clean","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the connection was cleanly closed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647014,"byte_end":647023,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20791},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647720,"byte_end":647736,"line_start":67,"line_end":67,"column_start":12,"column_end":28},"name":"SocketErrorEvent","qualname":"::webapi::events::socket::SocketErrorEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error event is fired when an error occurred; the exact circumstances vary,\n events by this name are used from a variety of APIs.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647610,"byte_end":647645,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"reference(event = \"error\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647646,"byte_end":647675,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647676,"byte_end":647708,"line_start":66,"line_end":66,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":20859},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648249,"byte_end":648264,"line_start":80,"line_end":80,"column_start":12,"column_end":27},"name":"SocketOpenEvent","qualname":"::webapi::events::socket::SocketOpenEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" An open event informs the target that a data connection, has been established.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648140,"byte_end":648175,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"reference(event = \"open\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648176,"byte_end":648204,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648205,"byte_end":648237,"line_start":79,"line_end":79,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20928},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648753,"byte_end":648757,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Text","qualname":"::webapi::events::socket::SocketMessageData::Text","value":"SocketMessageData::Text(String)","parent":{"krate":0,"index":20927},"children":[],"decl_id":null,"docs":" Text message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20931},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648813,"byte_end":648817,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"Blob","qualname":"::webapi::events::socket::SocketMessageData::Blob","value":"SocketMessageData::Blob(Blob)","parent":{"krate":0,"index":20927},"children":[],"decl_id":null,"docs":" Binary message received as a blob\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20934},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648880,"byte_end":648891,"line_start":96,"line_end":96,"column_start":5,"column_end":16},"name":"ArrayBuffer","qualname":"::webapi::events::socket::SocketMessageData::ArrayBuffer","value":"SocketMessageData::ArrayBuffer(ArrayBuffer)","parent":{"krate":0,"index":20927},"children":[],"decl_id":null,"docs":" Binary message received as an array buffer\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":20927},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648708,"byte_end":648725,"line_start":90,"line_end":90,"column_start":10,"column_end":27},"name":"SocketMessageData","qualname":"::webapi::events::socket::SocketMessageData","value":"SocketMessageData::{Text, Blob, ArrayBuffer}","parent":null,"children":[{"krate":0,"index":20928},{"krate":0,"index":20931},{"krate":0,"index":20934}],"decl_id":null,"docs":" Represents the types of data which can be received on a web socket. Messages\n are transmitted tagged as either binary or text: text messages are always\n received as strings. Binary messages may be received as either blobs or array\n buffers as preferred by the receiver. This choice is indicated via the\n `binary_type` field on the web socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648988,"byte_end":648997,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"into_text","qualname":"<SocketMessageData>::into_text","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive the message as text\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":649168,"byte_end":649177,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"into_blob","qualname":"<SocketMessageData>::into_blob","value":"fn (self) -> Option<Blob>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive the message as a binary blob\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":649348,"byte_end":649365,"line_start":109,"line_end":109,"column_start":12,"column_end":29},"name":"into_array_buffer","qualname":"<SocketMessageData>::into_array_buffer","value":"fn (self) -> Option<ArrayBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive the message as an array buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":650512,"byte_end":650525,"line_start":138,"line_end":138,"column_start":11,"column_end":24},"name":"IMessageEvent","qualname":"::webapi::events::socket::IMessageEvent","value":"IMessageEvent: IEvent","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548}],"decl_id":null,"docs":" The MessageEvent interface represents a message received by a target object.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":650653,"byte_end":650657,"line_start":140,"line_end":140,"column_start":10,"column_end":14},"name":"Data","qualname":"::webapi::events::socket::IMessageEvent::Data","value":"type Data: TryFrom<Value>;","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" The type of data received with this MessageEvent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":650953,"byte_end":650957,"line_start":147,"line_end":147,"column_start":8,"column_end":12},"name":"data","qualname":"::webapi::events::socket::IMessageEvent::data","value":"fn (&self) -> Self::Data","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" The data sent by the message emitter.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":650936,"byte_end":650945,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":651375,"byte_end":651381,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"origin","qualname":"::webapi::events::socket::IMessageEvent::origin","value":"fn (&self) -> String","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" A string representing the origin of the message emitter.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":651358,"byte_end":651367,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":651799,"byte_end":651812,"line_start":169,"line_end":169,"column_start":8,"column_end":21},"name":"last_event_id","qualname":"::webapi::events::socket::IMessageEvent::last_event_id","value":"fn (&self) -> String","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" A string representing a unique ID for the event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":651782,"byte_end":651791,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":652306,"byte_end":652312,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"source","qualname":"::webapi::events::socket::IMessageEvent::source","value":"fn (&self) -> Option<Reference>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" A MessageEventSource (which can be a WindowProxy, MessagePort, or ServiceWorker object)\n representing the message emitter.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":652289,"byte_end":652298,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":652902,"byte_end":652907,"line_start":194,"line_end":194,"column_start":8,"column_end":13},"name":"ports","qualname":"::webapi::events::socket::IMessageEvent::ports","value":"fn (&self) -> Vec<Reference>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" An array of MessagePort objects representing the ports associated with the channel the\n message is being sent through (where appropriate, e.g. in channel messaging or when sending\n a message to a shared worker).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":652885,"byte_end":652894,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20966},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653422,"byte_end":653440,"line_start":209,"line_end":209,"column_start":12,"column_end":30},"name":"SocketMessageEvent","qualname":"::webapi::events::socket::SocketMessageEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A message event informs a WebSocket object that a message has been received.","sig":null,"attributes":[{"value":"reference(instance_of = \"MessageEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653303,"byte_end":653345,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"reference(event = \"message\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653346,"byte_end":653377,"line_start":207,"line_end":207,"column_start":1,"column_end":32}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653378,"byte_end":653410,"line_start":208,"line_end":208,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":21034},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654927,"byte_end":654942,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"SlotChangeEvent","qualname":"::webapi::events::slot::SlotChangeEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `slotchange` event is fired on an HTMLSlotElement instance\n (`<slot>` element) when the node(s) contained in that slot change.","sig":null,"attributes":[{"value":"reference(instance_of = \"Event\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654812,"byte_end":654847,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"reference(event = \"slotchange\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654848,"byte_end":654882,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654883,"byte_end":654915,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":655428,"byte_end":655439,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"ITouchEvent","qualname":"::webapi::events::touch::ITouchEvent","value":"ITouchEvent: IUiEvent","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574}],"decl_id":null,"docs":" The `ITouchEvent` interface represents events that occur due to the user\n interacting with a touch device (such as a phone).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":655713,"byte_end":655720,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"alt_key","qualname":"::webapi::events::touch::ITouchEvent::alt_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" Returns whether the Alt key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":655696,"byte_end":655705,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656095,"byte_end":656103,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"ctrl_key","qualname":"::webapi::events::touch::ITouchEvent::ctrl_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" Indicates whether the Ctrl key was down when this event fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656078,"byte_end":656087,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656479,"byte_end":656487,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"meta_key","qualname":"::webapi::events::touch::ITouchEvent::meta_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" Indicates whether the Meta key was down when this event fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656462,"byte_end":656471,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656869,"byte_end":656878,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"shift_key","qualname":"::webapi::events::touch::ITouchEvent::shift_key","value":"fn (&self) -> bool","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" Indicates whether the Shift key was down when this event was fired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":656852,"byte_end":656861,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":657269,"byte_end":657276,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"touches","qualname":"::webapi::events::touch::ITouchEvent::touches","value":"fn (&self) -> Vec<Touch>","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" A list of Touches for every point of contact currently touching the surface.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":657252,"byte_end":657261,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":657765,"byte_end":657779,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"target_touches","qualname":"::webapi::events::touch::ITouchEvent::target_touches","value":"fn (&self) -> Vec<Touch>","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" A list of Touches for every point of contact that is touching the surface and started\n on the element that is the target of the current event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":657748,"byte_end":657757,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658223,"byte_end":658238,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"changed_touches","qualname":"::webapi::events::touch::ITouchEvent::changed_touches","value":"fn (&self) -> Vec<Touch>","parent":{"krate":0,"index":2567},"children":[],"decl_id":null,"docs":" A list of Touches, one for each touch touch point that just became active with the current event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658206,"byte_end":658215,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21137},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658791,"byte_end":658801,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"TouchEvent","qualname":"::webapi::events::touch::TouchEvent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to a JavaScript object which implements the [ITouchEvent](trait.ITouchEvent.html)\n interface.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658697,"byte_end":658737,"line_start":98,"line_end":98,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (Event, UiEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658738,"byte_end":658779,"line_start":99,"line_end":99,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":21209},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659353,"byte_end":659362,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"TouchMove","qualname":"::webapi::events::touch::TouchMove","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchMove` is fired when one or more touch points are moved along the\n touch surface.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659213,"byte_end":659253,"line_start":112,"line_end":112,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchmove\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659254,"byte_end":659287,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659288,"byte_end":659341,"line_start":114,"line_end":114,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21289},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660005,"byte_end":660015,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"TouchLeave","qualname":"::webapi::events::touch::TouchLeave","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchLeave` event is fired when a touch point is moved off the\n interactive area of an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659864,"byte_end":659904,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchleave\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659905,"byte_end":659939,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659940,"byte_end":659993,"line_start":131,"line_end":131,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21369},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660662,"byte_end":660672,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"TouchEnter","qualname":"::webapi::events::touch::TouchEnter","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchEnter` event is fired when a touch point is moved onto the\n interactive area of an element.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660521,"byte_end":660561,"line_start":146,"line_end":146,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchenter\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660562,"byte_end":660596,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660597,"byte_end":660650,"line_start":148,"line_end":148,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21449},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661227,"byte_end":661235,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"TouchEnd","qualname":"::webapi::events::touch::TouchEnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchEnd` event is fired when one or more touch points are removed\n from the touch surface.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661088,"byte_end":661128,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchend\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661129,"byte_end":661161,"line_start":162,"line_end":162,"column_start":1,"column_end":33}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661162,"byte_end":661215,"line_start":163,"line_end":163,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21529},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661871,"byte_end":661882,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"TouchCancel","qualname":"::webapi::events::touch::TouchCancel","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchCancel` event is fired when one or more touch points have been\n disrupted in an implementation-specific manner (for example, too many touch\n points are created).","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661729,"byte_end":661769,"line_start":177,"line_end":177,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchcancel\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661770,"byte_end":661805,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661806,"byte_end":661859,"line_start":179,"line_end":179,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21609},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662445,"byte_end":662455,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"TouchStart","qualname":"::webapi::events::touch::TouchStart","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `TouchStart` event is fired when one or more touch points are placed\n on the touch surface.","sig":null,"attributes":[{"value":"reference(instance_of = \"TouchEvent\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662304,"byte_end":662344,"line_start":192,"line_end":192,"column_start":1,"column_end":41}},{"value":"reference(event = \"touchstart\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662345,"byte_end":662379,"line_start":193,"line_end":193,"column_start":1,"column_end":35}},{"value":"reference(subclass_of (Event, UiEvent, TouchEvent))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662380,"byte_end":662433,"line_start":194,"line_end":194,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/parent_node.rs","byte_start":665579,"byte_end":665590,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"IParentNode","qualname":"::webapi::parent_node::IParentNode","value":"IParentNode: ReferenceType","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603}],"decl_id":null,"docs":" The `ParentNode` mixin contains methods and properties\n that are common to all types of `Node` objects that can\n have children.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/parent_node.rs","byte_start":665944,"byte_end":665958,"line_start":21,"line_end":21,"column_start":8,"column_end":22},"name":"query_selector","qualname":"::webapi::parent_node::IParentNode::query_selector","value":"fn (&self, selector: &str) -> Result<Option<Element>, SyntaxError>","parent":{"krate":0,"index":2601},"children":[],"decl_id":null,"docs":" Returns the first element that is a descendant of the element on which it is\n invoked that matches the specified group of selectors.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/parent_node.rs","byte_start":666516,"byte_end":666534,"line_start":32,"line_end":32,"column_start":8,"column_end":26},"name":"query_selector_all","qualname":"::webapi::parent_node::IParentNode::query_selector_all","value":"fn (&self, selector: &str) -> Result<NodeList, SyntaxError>","parent":{"krate":0,"index":2601},"children":[],"decl_id":null,"docs":" Returns a non-live [NodeList](struct.NodeList.html) of all elements descended\n from the element on which it is invoked that matches the specified group of CSS selectors.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/non_element_parent_node.rs","byte_start":670063,"byte_end":670084,"line_start":10,"line_end":10,"column_start":11,"column_end":32},"name":"INonElementParentNode","qualname":"::webapi::non_element_parent_node::INonElementParentNode","value":"INonElementParentNode: ReferenceType","parent":null,"children":[{"krate":0,"index":2608}],"decl_id":null,"docs":" The `INonElementParentNode` mixin contains methods and properties\n that are common to `Document` and `DocumentFragment`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/non_element_parent_node.rs","byte_start":670470,"byte_end":670487,"line_start":16,"line_end":16,"column_start":8,"column_end":25},"name":"get_element_by_id","qualname":"::webapi::non_element_parent_node::INonElementParentNode::get_element_by_id","value":"fn (&self, id: &str) -> Option<Element>","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" Returns a reference to the element by its ID; the ID is a string which can\n be used to uniquely identify the element, found in the HTML `id` attribute.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21736},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":673428,"byte_end":673442,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"HtmlCollection","qualname":"::webapi::html_collection::HtmlCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `HtmlCollection` interface represents a generic collection\n (array-like object similar to arguments) of elements (in document order)\n and offers methods and properties for selecting from the list.\n \n An `HtmlCollection` in the HTML DOM is live; it is automatically\n updated when the underlying document is changed.\n \n [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection)\n","sig":null,"attributes":[{"value":"reference(instance_of = \"HTMLCollection\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":673372,"byte_end":673416,"line_start":15,"line_end":15,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":673720,"byte_end":673723,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"len","qualname":"<HtmlCollection>::len","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the collection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674054,"byte_end":674058,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"item","qualname":"<HtmlCollection>::item","value":"fn (&self, index: u32) -> Option<Element>","parent":null,"children":[],"decl_id":null,"docs":" Returns an element from an `HtmlCollection` by index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674256,"byte_end":674260,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"iter","qualname":"<HtmlCollection>::iter","value":"fn (&self) -> ElementIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21806},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674914,"byte_end":674925,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"ElementIter","qualname":"::webapi::html_collection::ElementIter","value":"ElementIter {  }","parent":null,"children":[{"krate":0,"index":21807},{"krate":0,"index":21808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/child_node.rs","byte_start":675590,"byte_end":675600,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"IChildNode","qualname":"::webapi::child_node::IChildNode","value":"IChildNode: ReferenceType","parent":null,"children":[{"krate":0,"index":2635}],"decl_id":null,"docs":" The `ChildNode` interface contains methods that are particular to `Node`\n objects that can have a parent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/child_node.rs","byte_start":675881,"byte_end":675887,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"remove","qualname":"::webapi::child_node::IChildNode::remove","value":"fn (&self) -> ()","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":" The `ChildNode.remove()` method removes the object from the tree it belongs to.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":21817},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":676434,"byte_end":676443,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"NoMapping","qualname":"::webapi::gamepad::GamepadMappingType::NoMapping","value":"GamepadMappingType::NoMapping","parent":{"krate":0,"index":21816},"children":[],"decl_id":null,"docs":" No mapping is in use for this gamepad\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":21819},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":676555,"byte_end":676563,"line_start":20,"line_end":20,"column_start":5,"column_end":13},"name":"Standard","qualname":"::webapi::gamepad::GamepadMappingType::Standard","value":"GamepadMappingType::Standard","parent":{"krate":0,"index":21816},"children":[],"decl_id":null,"docs":" This gamepad is mapped to the [Standard Gamepad layout](https://w3c.github.io/gamepad/#remapping)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":21816},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":676363,"byte_end":676381,"line_start":16,"line_end":16,"column_start":10,"column_end":28},"name":"GamepadMappingType","qualname":"::webapi::gamepad::GamepadMappingType","value":"GamepadMappingType::{NoMapping, Standard}","parent":null,"children":[{"krate":0,"index":21817},{"krate":0,"index":21819}],"decl_id":null,"docs":" The set of known gamepad layout mappings.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21832},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677327,"byte_end":677340,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"GamepadButton","qualname":"::webapi::gamepad::GamepadButton","value":"","parent":null,"children":[],"decl_id":null,"docs":" The state of an individual button on a gamepad device.","sig":null,"attributes":[{"value":"reference(instance_of = \"GamepadButton\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677272,"byte_end":677315,"line_start":41,"line_end":41,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677616,"byte_end":677623,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"pressed","qualname":"<GamepadButton>::pressed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the button currently pressed?","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677595,"byte_end":677604,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677964,"byte_end":677971,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"touched","qualname":"<GamepadButton>::touched","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the button currently touched?","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677943,"byte_end":677952,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678383,"byte_end":678388,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"value","qualname":"<GamepadButton>::value","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The amount which the button has been pressed, between 0.0 (not pressed), and 1.0 (fully pressed).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678362,"byte_end":678371,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21907},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678779,"byte_end":678786,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"Gamepad","qualname":"::webapi::gamepad::Gamepad","value":"","parent":null,"children":[],"decl_id":null,"docs":" An individual gamepad/controller.","sig":null,"attributes":[{"value":"reference(instance_of = \"Gamepad\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678730,"byte_end":678767,"line_start":85,"line_end":85,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679058,"byte_end":679060,"line_start":95,"line_end":95,"column_start":12,"column_end":14},"name":"id","qualname":"<Gamepad>::id","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" A string containing some information about this gamepad.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679037,"byte_end":679046,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679430,"byte_end":679435,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"index","qualname":"<Gamepad>::index","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" An auto-incrementing integer to uniquely identify a connected Gamepad.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679409,"byte_end":679418,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679807,"byte_end":679816,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"connected","qualname":"<Gamepad>::connected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this gamepad connected to the system, powered on, and usable?","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":679786,"byte_end":679795,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680184,"byte_end":680193,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<Gamepad>::timestamp","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Monotonically increasing time this gamepad was updated.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680163,"byte_end":680172,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680536,"byte_end":680543,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"mapping","qualname":"<Gamepad>::mapping","value":"fn (&self) -> GamepadMappingType","parent":null,"children":[],"decl_id":null,"docs":" The mapping in use for this device.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680515,"byte_end":680524,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680902,"byte_end":680906,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"axes","qualname":"<Gamepad>::axes","value":"fn (&self) -> Vec<f64>","parent":null,"children":[],"decl_id":null,"docs":" Array of values for all axes of the gamepad.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":680881,"byte_end":680890,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":681268,"byte_end":681275,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"buttons","qualname":"<Gamepad>::buttons","value":"fn (&self) -> Vec<GamepadButton>","parent":null,"children":[],"decl_id":null,"docs":" Array of button states for all buttons of the gamepad.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":681247,"byte_end":681256,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":681787,"byte_end":681794,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"get_all","qualname":"<Gamepad>::get_all","value":"fn () -> Vec<Option<Gamepad>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve all connected gamepads, in an array indexed by each gamepad's `index` member.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22008},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":683237,"byte_end":683241,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"None","qualname":"::webapi::selection::SelectionType::None","value":"SelectionType::None","parent":{"krate":0,"index":22007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22010},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":683247,"byte_end":683252,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Caret","qualname":"::webapi::selection::SelectionType::Caret","value":"SelectionType::Caret","parent":{"krate":0,"index":22007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22012},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":683258,"byte_end":683263,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Range","qualname":"::webapi::selection::SelectionType::Range","value":"SelectionType::Range","parent":{"krate":0,"index":22007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22007},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":683217,"byte_end":683230,"line_start":15,"line_end":15,"column_start":10,"column_end":23},"name":"SelectionType","qualname":"::webapi::selection::SelectionType","value":"SelectionType::{None, Caret, Range}","parent":null,"children":[{"krate":0,"index":22008},{"krate":0,"index":22010},{"krate":0,"index":22012}],"decl_id":null,"docs":" Possible values are:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22025},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":684363,"byte_end":684372,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"Selection","qualname":"::webapi::selection::Selection","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the range of text selected by the user or the current position of the caret. To\n obtain a Selection object for examination or modification, call\n [Window.get_selection()](struct.Window.html#method.get_selection).","sig":null,"attributes":[{"value":"reference(instance_of = \"Selection\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":684312,"byte_end":684351,"line_start":36,"line_end":36,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":685010,"byte_end":685021,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"anchor_node","qualname":"<Selection>::anchor_node","value":"fn (&self) -> Option<Node>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Node](struct.Node.html) in which the selection begins.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":685591,"byte_end":685604,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"anchor_offset","qualname":"<Selection>::anchor_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of characters that the selection's anchor is offset within the\n [anchor_node](struct.Selection.html#method.anchor_node).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":686344,"byte_end":686354,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"focus_node","qualname":"<Selection>::focus_node","value":"fn (&self) -> Option<Node>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Node](struct.Node.html) in which the selection ends.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":686918,"byte_end":686930,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"focus_offset","qualname":"<Selection>::focus_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of characters that the selection's anchor is offset within the\n [focus_node](struct.Selection.html#method.focus_node).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":687802,"byte_end":687814,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"is_collapsed","qualname":"<Selection>::is_collapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean which indicates whether or not there is currently any text selected; That\n is to say that the selection's start and end points are at the same position in the\n content.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":688694,"byte_end":688705,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"range_count","qualname":"<Selection>::range_count","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of ranges in the selection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":689249,"byte_end":689253,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"kind","qualname":"<Selection>::kind","value":"fn (&self) -> SelectionType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the current selection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":689849,"byte_end":689861,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"get_range_at","qualname":"<Selection>::get_range_at","value":"fn (&self, index: u32) -> Result<Range, IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [Range](struct.Range.html) object representing one of the ranges currently\n selected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":690210,"byte_end":690219,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"add_range","qualname":"<Selection>::add_range","value":"fn (&self, range: &Range) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a [Range](struct.Range.html) to the [Selection](struct.Selection.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":690538,"byte_end":690550,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"remove_range","qualname":"<Selection>::remove_range","value":"fn (&self, range: &Range) -> Result<(), NotFoundError>","parent":null,"children":[],"decl_id":null,"docs":" Removes a [Range](struct.Range.html) from the [Selection](struct.Selection.html).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":691102,"byte_end":691119,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"remove_all_ranges","qualname":"<Selection>::remove_all_ranges","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all ranges from the [Selection](struct.Selection.html), leaving the\n [anchor_node](struct.Selection.html#method.anchor_node) and\n [focus_node](struct.Selection.html#method.focus_node) properties equal to\n `None` and leaving nothing selected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":691510,"byte_end":691518,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"collapse","qualname":"<Selection>::collapse","value":"fn <N> (&self, node: &N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Collapses the [Selection](struct.Selection.html) to a single point. The document is not\n modified. If the content is focused or editable, the caret will blink there.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":691937,"byte_end":691957,"line_start":210,"line_end":210,"column_start":12,"column_end":32},"name":"collapse_with_offset","qualname":"<Selection>::collapse_with_offset","value":"fn <N> (&self, node: &N, offset: Option<u32>) -> Result<(), IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Collapses the [Selection](struct.Selection.html) to a single point. The document is not\n modified. If the content is focused or editable, the caret will blink there.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":692459,"byte_end":692476,"line_start":220,"line_end":220,"column_start":12,"column_end":29},"name":"collapse_to_start","qualname":"<Selection>::collapse_to_start","value":"fn (&self) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Collapses the [Selection](struct.Selection.html) to the start of the first range in the\n selection. If the content is focused or editable, the caret will blink there.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":692915,"byte_end":692930,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"collapse_to_end","qualname":"<Selection>::collapse_to_end","value":"fn (&self) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Collapses the [Selection](struct.Selection.html) to the end of the last range in the\n selection. If the content is focused or editable, the caret will blink there.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":693380,"byte_end":693386,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"extend","qualname":"<Selection>::extend","value":"fn <N> (&self, node: &N, offset: Option<u32>) -> Result<(), InvalidStateError>","parent":null,"children":[],"decl_id":null,"docs":" Moves the focus of the selection to a specified point. The anchor of the selection does not\n move. The selection will be from the anchor node to the new focus regardless of direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":693874,"byte_end":693893,"line_start":251,"line_end":251,"column_start":12,"column_end":31},"name":"set_base_and_extent","qualname":"<Selection>::set_base_and_extent","value":"fn <N, M> (&self, anchor_node: &N, anchor_offset: u32, focus_node: &M, focus_offset: u32) -> Result<(), IndexSizeError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the selection to be a range including all or parts of the two specified\n [Node](struct.Node.html)s, and any content located between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":694455,"byte_end":694474,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"select_all_children","qualname":"<Selection>::select_all_children","value":"fn <N> (&self, node: &N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds all the children of the specified [Node](struct.Node.html) to the selection. Previous\n selection is lost.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":694857,"byte_end":694877,"line_start":271,"line_end":271,"column_start":12,"column_end":32},"name":"delete_from_document","qualname":"<Selection>::delete_from_document","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Deletes the actual text being represented by the [Selection](struct.Selection.html) from\n the document's DOM.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":695157,"byte_end":695171,"line_start":280,"line_end":280,"column_start":12,"column_end":26},"name":"contains_whole","qualname":"<Selection>::contains_whole","value":"fn <N> (&self, node: &N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the entire node is part of the selection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":695518,"byte_end":695534,"line_start":289,"line_end":289,"column_start":12,"column_end":28},"name":"contains_part_of","qualname":"<Selection>::contains_part_of","value":"fn <N> (&self, node: &N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if atleast some of the node is part of the selection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22272},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":696394,"byte_end":696399,"line_start":307,"line_end":307,"column_start":12,"column_end":17},"name":"Range","qualname":"::webapi::selection::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Range interface represents a fragment of a document that can contain nodes and parts of\n text nodes.","sig":null,"attributes":[{"value":"reference(instance_of = \"Range\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":696347,"byte_end":696382,"line_start":306,"line_end":306,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":696651,"byte_end":696660,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"collapsed","qualname":"<Range>::collapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean indicating whether the range's start and end points are at the same\n position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":697020,"byte_end":697045,"line_start":325,"line_end":325,"column_start":12,"column_end":37},"name":"common_ancestor_container","qualname":"<Range>::common_ancestor_container","value":"fn (&self) -> Node","parent":null,"children":[],"decl_id":null,"docs":" Returns the deepest [Node](struct.Node.html) that contains the startContainer and\n endContainer nodes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":697377,"byte_end":697390,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"end_container","qualname":"<Range>::end_container","value":"fn (&self) -> Node","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Node](struct.Node.html) within which the [Range](struct.Range.html) ends.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":697714,"byte_end":697724,"line_start":343,"line_end":343,"column_start":12,"column_end":22},"name":"end_offset","qualname":"<Range>::end_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number representing where in the endContainer the [Range](struct.Range.html) ends.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":698045,"byte_end":698060,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"start_container","qualname":"<Range>::start_container","value":"fn (&self) -> Node","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Node](struct.Node.html) within which the [Range](struct.Range.html) starts.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":698392,"byte_end":698404,"line_start":361,"line_end":361,"column_start":12,"column_end":24},"name":"start_offset","qualname":"<Range>::start_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number representing where in the startContainer the [Range](struct.Range.html) starts.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/slotable.rs","byte_start":701087,"byte_end":701096,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"ISlotable","qualname":"::webapi::slotable::ISlotable","value":"ISlotable: ReferenceType","parent":null,"children":[{"krate":0,"index":2711}],"decl_id":null,"docs":" The Slotable mixin defines features that allow nodes to become the contents of\n a `<slot>` element — the following features are included in both Element and Text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/slotable.rs","byte_start":701390,"byte_end":701403,"line_start":14,"line_end":14,"column_start":8,"column_end":21},"name":"assigned_slot","qualname":"::webapi::slotable::ISlotable::assigned_slot","value":"fn (&self) -> Option<SlotElement>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" returns a `SlotElement` representing the `<slot>` element the node is inserted in.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22368},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":703431,"byte_end":703435,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Open","qualname":"::webapi::shadow_root::ShadowRootMode::Open","value":"ShadowRootMode::Open","parent":{"krate":0,"index":22367},"children":[],"decl_id":null,"docs":" { mode: \"open\" }\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22370},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":703468,"byte_end":703474,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Closed","qualname":"::webapi::shadow_root::ShadowRootMode::Closed","value":"ShadowRootMode::Closed","parent":{"krate":0,"index":22367},"children":[],"decl_id":null,"docs":" { mode: \"closed\" }\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22367},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":703385,"byte_end":703399,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"ShadowRootMode","qualname":"::webapi::shadow_root::ShadowRootMode","value":"ShadowRootMode::{Open, Closed}","parent":null,"children":[{"krate":0,"index":22368},{"krate":0,"index":22370}],"decl_id":null,"docs":" The mode associated to a shadow root.\n Mainly used in [IElement::attach_shadow](trait.IElement.html#method.attach_shadow) and\n [IShadowRoot::mode](trait.IShadowRoot.html#method.mode).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22383},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704147,"byte_end":704157,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"ShadowRoot","qualname":"::webapi::shadow_root::ShadowRoot","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `ShadowRoot` interface of the Shadow DOM API is the root node of a DOM\n subtree that is rendered separately from a document's main DOM tree.","sig":null,"attributes":[{"value":"reference(instance_of = \"ShadowRoot\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704032,"byte_end":704072,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"reference(subclass_of (EventTarget, Node, DocumentFragment))","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704073,"byte_end":704135,"line_start":37,"line_end":37,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704533,"byte_end":704537,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"mode","qualname":"<ShadowRoot>::mode","value":"fn (&self) -> ShadowRootMode","parent":null,"children":[],"decl_id":null,"docs":" The mode property of the `ShadowRoot` specifies its mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":705185,"byte_end":705189,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"host","qualname":"<ShadowRoot>::host","value":"fn (&self) -> Element","parent":null,"children":[],"decl_id":null,"docs":" The host read-only property of the `ShadowRoot` returns a reference to the DOM element\n the ShadowRoot is attached to.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22471},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708676,"byte_end":708684,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"FormData","qualname":"::webapi::form_data::FormData","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `FormData` interface provides a way to easily construct a set of key/value pairs\n representing form fields and their values, which can then be easily sent using the\n `XMLHttpRequest.send()` method. It uses the same format a form would use if the encoding type\n were set to `\"multipart/form-data\"`.","sig":null,"attributes":[{"value":"reference(instance_of = \"FormData\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708626,"byte_end":708664,"line_start":20,"line_end":20,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22532},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708832,"byte_end":708836,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"File","qualname":"::webapi::form_data::FormDataEntry::File","value":"FormDataEntry::File(File)","parent":{"krate":0,"index":22531},"children":[],"decl_id":null,"docs":" File data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22535},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708868,"byte_end":708874,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"String","qualname":"::webapi::form_data::FormDataEntry::String","value":"FormDataEntry::String(String)","parent":{"krate":0,"index":22531},"children":[],"decl_id":null,"docs":" Text data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22531},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708794,"byte_end":708807,"line_start":25,"line_end":25,"column_start":10,"column_end":23},"name":"FormDataEntry","qualname":"::webapi::form_data::FormDataEntry","value":"FormDataEntry::{File, String}","parent":null,"children":[{"krate":0,"index":22532},{"krate":0,"index":22535}],"decl_id":null,"docs":" Represents a type of data stores in FormData.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22557},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708948,"byte_end":708965,"line_start":34,"line_end":34,"column_start":5,"column_end":22},"name":"InvalidStateError","qualname":"::webapi::form_data::FormDataFromElementError::InvalidStateError","value":"FormDataFromElementError::InvalidStateError(InvalidStateError)","parent":{"krate":0,"index":22556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22560},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708967,"byte_end":708976,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"name":"TypeError","qualname":"::webapi::form_data::FormDataFromElementError::TypeError","value":"FormDataFromElementError::TypeError(TypeError)","parent":{"krate":0,"index":22556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22556},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":708918,"byte_end":708942,"line_start":33,"line_end":33,"column_start":5,"column_end":29},"name":"FormDataFromElementError","qualname":"::webapi::form_data::FormDataFromElementError","value":"FormDataFromElementError::{InvalidStateError, TypeError}","parent":null,"children":[{"krate":0,"index":22557},{"krate":0,"index":22560}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":710093,"byte_end":710096,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<FormData>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FormData`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":710364,"byte_end":710376,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"from_element","qualname":"<FormData>::from_element","value":"fn <T> (form: &T) -> Result<Self, FormDataFromElementError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FormData` from a form element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":711041,"byte_end":711054,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"append_string","qualname":"<FormData>::append_string","value":"fn (&self, name: &str, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a new value onto an existing key, or adds the key if it does not already exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":711451,"byte_end":711462,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"append_blob","qualname":"<FormData>::append_blob","value":"fn <T> (&self, name: &str, value: &T, filename: Option<&str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a new blob onto an existing key, or adds the key if it does not already exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":711815,"byte_end":711821,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"delete","qualname":"<FormData>::delete","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" [(JavaScript docs)](https://developer.mozilla.org/en-US/docs/Web/API/FormData/delete)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":712129,"byte_end":712132,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<FormData>::get","value":"fn (&self, name: &str) -> Option<FormDataEntry>","parent":null,"children":[],"decl_id":null,"docs":" Deletes a key and its value(s).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":712504,"byte_end":712511,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_all","qualname":"<FormData>::get_all","value":"fn (&self, name: &str) -> Vec<FormDataEntry>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the values associated with a given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":712903,"byte_end":712906,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"has","qualname":"<FormData>::has","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean stating whether a `FormData` object contains a certain key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":713291,"byte_end":713301,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"set_string","qualname":"<FormData>::set_string","value":"fn (&self, name: &str, value: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a new value for an existing key, or adds the key/value if it does not already exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":713691,"byte_end":713699,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"set_blob","qualname":"<FormData>::set_blob","value":"fn <T> (&self, name: &str, value: &T, filename: Option<&str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a new blob for an existing key, or adds the key/value if it does not already exist.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22653},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728009,"byte_end":728024,"line_start":317,"line_end":317,"column_start":12,"column_end":27},"name":"ConversionError","qualname":"::ecosystem::serde::ConversionError","value":"ConversionError {  }","parent":null,"children":[{"krate":0,"index":22654}],"decl_id":null,"docs":" A structure denoting a conversion error encountered during\n serialization or deserialization.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22666},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729963,"byte_end":729973,"line_start":381,"line_end":381,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ecosystem::serde::Serializer","value":"Serializer {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":730008,"byte_end":730011,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":734947,"byte_end":734955,"line_start":531,"line_end":531,"column_start":8,"column_end":16},"name":"to_value","qualname":"::ecosystem::serde::to_value","value":"fn <T> (value: T) -> Result<Value, ConversionError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":734930,"byte_end":734939,"line_start":530,"line_end":530,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735136,"byte_end":735146,"line_start":538,"line_end":538,"column_start":8,"column_end":18},"name":"from_value","qualname":"::ecosystem::serde::from_value","value":"fn <'de, T> (value: Value) -> Result<T, ConversionError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735119,"byte_end":735128,"line_start":537,"line_end":537,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":22669},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735311,"byte_end":735323,"line_start":544,"line_end":544,"column_start":12,"column_end":24},"name":"SerializeVec","qualname":"::ecosystem::serde::SerializeVec","value":"SerializeVec {  }","parent":null,"children":[{"krate":0,"index":22670}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22673},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735400,"byte_end":735421,"line_start":550,"line_end":550,"column_start":12,"column_end":33},"name":"SerializeTupleVariant","qualname":"::ecosystem::serde::SerializeTupleVariant","value":"SerializeTupleVariant {  }","parent":null,"children":[{"krate":0,"index":22674},{"krate":0,"index":22675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22678},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735516,"byte_end":735528,"line_start":557,"line_end":557,"column_start":12,"column_end":24},"name":"SerializeMap","qualname":"::ecosystem::serde::SerializeMap","value":"SerializeMap {  }","parent":null,"children":[{"krate":0,"index":22679},{"krate":0,"index":22680}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22683},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735645,"byte_end":735667,"line_start":564,"line_end":564,"column_start":12,"column_end":34},"name":"SerializeStructVariant","qualname":"::ecosystem::serde::SerializeStructVariant","value":"SerializeStructVariant {  }","parent":null,"children":[{"krate":0,"index":22684},{"krate":0,"index":22685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3104},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":758866,"byte_end":758871,"line_start":1246,"line_end":1246,"column_start":12,"column_end":17},"name":"Serde","qualname":"::ecosystem::serde::Serde","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype which makes it possible to pass a value which implements\n Serde's `Serializable` into the [js!](macro.js.html) macro.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5636,"byte_end":5641,"line_start":220,"line_end":220,"column_start":9,"column_end":14},"name":"serde","qualname":"::serde","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3172}],"decl_id":null,"docs":" A module with serde-related APIs.\n","sig":null,"attributes":[{"value":"cfg(feature = \"serde\")","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5564,"byte_end":5589,"line_start":218,"line_end":218,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":5777,"byte_end":5780,"line_start":228,"line_end":228,"column_start":9,"column_end":12},"name":"web","qualname":"::web","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3230},{"krate":0,"index":3245},{"krate":0,"index":3250},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3299},{"krate":0,"index":3308}],"decl_id":null,"docs":" A module with bindings to the Web APIs.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":8525,"byte_end":8530,"line_start":290,"line_end":290,"column_start":13,"column_end":18},"name":"error","qualname":"::web::error","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3289},{"krate":0,"index":3293},{"krate":0,"index":3297},{"krate":0,"index":3298}],"decl_id":null,"docs":" A module containing error types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9329,"byte_end":9341,"line_start":318,"line_end":318,"column_start":13,"column_end":25},"name":"html_element","qualname":"::web::html_element","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"decl_id":null,"docs":" A module containing HTML DOM elements.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":9846,"byte_end":9851,"line_start":330,"line_end":330,"column_start":13,"column_end":18},"name":"event","qualname":"::web::event","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3317},{"krate":0,"index":3334},{"krate":0,"index":3343},{"krate":0,"index":3357},{"krate":0,"index":3364},{"krate":0,"index":3372},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3393},{"krate":0,"index":3397},{"krate":0,"index":3401},{"krate":0,"index":3418}],"decl_id":null,"docs":" A module containing JavaScript DOM events.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3419},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":13706,"byte_end":13714,"line_start":487,"line_end":487,"column_start":9,"column_end":17},"name":"unstable","qualname":"::unstable","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3423}],"decl_id":null,"docs":" A module containing stable counterparts to currently\n unstable Rust features.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14000,"byte_end":14006,"line_start":499,"line_end":499,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3436},{"krate":0,"index":3439}],"decl_id":null,"docs":" A module containing reexports of all of our interface traits.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":14858,"byte_end":14865,"line_start":543,"line_end":543,"column_start":9,"column_end":16},"name":"private","qualname":"::private","value":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":22915},{"krate":0,"index":22917},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17319,"byte_end":17323,"line_start":595,"line_end":595,"column_start":12,"column_end":16},"name":"noop","qualname":"::private::noop","value":"fn <T> (_: &mut T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17266,"byte_end":17285,"line_start":593,"line_end":593,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17290,"byte_end":17307,"line_start":594,"line_end":594,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":22915},"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17408,"byte_end":17412,"line_start":599,"line_end":599,"column_start":16,"column_end":20},"name":"TODO","qualname":"::private::TODO","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38906,"byte_end":38915,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39775,"byte_end":39784,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40093,"byte_end":40102,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40122,"byte_end":40131,"line_start":80,"line_end":80,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40289,"byte_end":40298,"line_start":89,"line_end":89,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40463,"byte_end":40472,"line_start":96,"line_end":96,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42617,"byte_end":42622,"line_start":171,"line_end":171,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46778,"byte_end":46783,"line_start":313,"line_end":313,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46883,"byte_end":46888,"line_start":320,"line_end":320,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47014,"byte_end":47019,"line_start":327,"line_end":327,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47153,"byte_end":47158,"line_start":334,"line_end":334,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47277,"byte_end":47282,"line_start":341,"line_end":341,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47393,"byte_end":47398,"line_start":348,"line_end":348,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47517,"byte_end":47522,"line_start":355,"line_end":355,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47631,"byte_end":47636,"line_start":362,"line_end":362,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47760,"byte_end":47765,"line_start":369,"line_end":369,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47898,"byte_end":47903,"line_start":376,"line_end":376,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48037,"byte_end":48042,"line_start":383,"line_end":383,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48186,"byte_end":48191,"line_start":390,"line_end":390,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48316,"byte_end":48321,"line_start":397,"line_end":397,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48451,"byte_end":48456,"line_start":404,"line_end":404,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48602,"byte_end":48607,"line_start":411,"line_end":411,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48736,"byte_end":48741,"line_start":418,"line_end":418,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48966,"byte_end":48971,"line_start":427,"line_end":427,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49098,"byte_end":49103,"line_start":434,"line_end":434,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49229,"byte_end":49234,"line_start":441,"line_end":441,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49386,"byte_end":49391,"line_start":448,"line_end":448,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49551,"byte_end":49556,"line_start":455,"line_end":455,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49711,"byte_end":49716,"line_start":462,"line_end":462,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49923,"byte_end":49928,"line_start":470,"line_end":470,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50092,"byte_end":50097,"line_start":477,"line_end":477,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50345,"byte_end":50350,"line_start":485,"line_end":485,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50606,"byte_end":50611,"line_start":493,"line_end":493,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50858,"byte_end":50863,"line_start":501,"line_end":501,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51121,"byte_end":51126,"line_start":509,"line_end":509,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51392,"byte_end":51397,"line_start":517,"line_end":517,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51641,"byte_end":51646,"line_start":525,"line_end":525,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51785,"byte_end":51790,"line_start":532,"line_end":532,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51945,"byte_end":51950,"line_start":539,"line_end":539,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56010,"byte_end":56015,"line_start":644,"line_end":644,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56205,"byte_end":56210,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56390,"byte_end":56395,"line_start":664,"line_end":664,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56596,"byte_end":56601,"line_start":674,"line_end":674,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56809,"byte_end":56814,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57025,"byte_end":57030,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57238,"byte_end":57243,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57476,"byte_end":57481,"line_start":714,"line_end":714,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57847,"byte_end":57856,"line_start":731,"line_end":731,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57989,"byte_end":57998,"line_start":738,"line_end":738,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":61032,"byte_end":61047,"line_start":852,"line_end":852,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":61693,"byte_end":61708,"line_start":865,"line_end":865,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62135,"byte_end":62150,"line_start":876,"line_end":876,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62297,"byte_end":62312,"line_start":882,"line_end":882,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62414,"byte_end":62423,"line_start":888,"line_end":888,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62555,"byte_end":62564,"line_start":894,"line_end":894,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62724,"byte_end":62739,"line_start":900,"line_end":900,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":63179,"byte_end":63188,"line_start":915,"line_end":915,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":63506,"byte_end":63510,"line_start":927,"line_end":927,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":65446,"byte_end":65454,"line_start":989,"line_end":989,"column_start":89,"column_end":97},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":66205,"byte_end":66212,"line_start":1011,"line_end":1011,"column_start":89,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":66963,"byte_end":66966,"line_start":1033,"line_end":1033,"column_start":89,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":67644,"byte_end":67650,"line_start":1055,"line_end":1055,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":67967,"byte_end":67973,"line_start":1067,"line_end":1067,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":68290,"byte_end":68299,"line_start":1079,"line_end":1079,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":71266,"byte_end":71272,"line_start":1182,"line_end":1182,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":71599,"byte_end":71605,"line_start":1194,"line_end":1194,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":72000,"byte_end":72006,"line_start":1206,"line_end":1206,"column_start":96,"column_end":102},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80410,"byte_end":80425,"line_start":34,"line_end":34,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80641,"byte_end":80656,"line_start":41,"line_end":41,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81047,"byte_end":81053,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81146,"byte_end":81152,"line_start":63,"line_end":63,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81281,"byte_end":81287,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81417,"byte_end":81423,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81549,"byte_end":81555,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82022,"byte_end":82028,"line_start":98,"line_end":98,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82157,"byte_end":82163,"line_start":105,"line_end":105,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82293,"byte_end":82299,"line_start":112,"line_end":112,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82552,"byte_end":82558,"line_start":123,"line_end":123,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83040,"byte_end":83046,"line_start":138,"line_end":138,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83466,"byte_end":83472,"line_start":152,"line_end":152,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83602,"byte_end":83608,"line_start":159,"line_end":159,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":86624,"byte_end":86630,"line_start":276,"line_end":276,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":86873,"byte_end":86879,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87123,"byte_end":87129,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87366,"byte_end":87372,"line_start":306,"line_end":306,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87615,"byte_end":87621,"line_start":316,"line_end":316,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87864,"byte_end":87870,"line_start":326,"line_end":326,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88114,"byte_end":88120,"line_start":336,"line_end":336,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88371,"byte_end":88377,"line_start":346,"line_end":346,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88822,"byte_end":88828,"line_start":362,"line_end":362,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":89275,"byte_end":89281,"line_start":378,"line_end":378,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":89532,"byte_end":89538,"line_start":388,"line_end":388,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101305,"byte_end":101308,"line_start":52,"line_end":52,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":103655,"byte_end":103679,"line_start":183,"line_end":183,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104065,"byte_end":104088,"line_start":200,"line_end":200,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104762,"byte_end":104775,"line_start":226,"line_end":226,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104956,"byte_end":104969,"line_start":233,"line_end":233,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105181,"byte_end":105194,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105588,"byte_end":105606,"line_start":257,"line_end":257,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105830,"byte_end":105848,"line_start":265,"line_end":265,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":106436,"byte_end":106454,"line_start":285,"line_end":285,"column_start":28,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":107968,"byte_end":107985,"line_start":332,"line_end":332,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":108488,"byte_end":108505,"line_start":351,"line_end":351,"column_start":34,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":109438,"byte_end":109462,"line_start":384,"line_end":384,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":109559,"byte_end":109586,"line_start":391,"line_end":391,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":112450,"byte_end":112465,"line_start":453,"line_end":453,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113515,"byte_end":113524,"line_start":487,"line_end":487,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113740,"byte_end":113744,"line_start":497,"line_end":497,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113950,"byte_end":113956,"line_start":507,"line_end":507,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":114201,"byte_end":114210,"line_start":519,"line_end":519,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":115102,"byte_end":115108,"line_start":558,"line_end":558,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":117301,"byte_end":117307,"line_start":664,"line_end":664,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":117712,"byte_end":117718,"line_start":678,"line_end":678,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":118096,"byte_end":118107,"line_start":692,"line_end":692,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":119062,"byte_end":119065,"line_start":726,"line_end":726,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":119970,"byte_end":119978,"line_start":753,"line_end":753,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":120306,"byte_end":120313,"line_start":763,"line_end":763,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":120605,"byte_end":120610,"line_start":773,"line_end":773,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":122273,"byte_end":122280,"line_start":823,"line_end":823,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":128619,"byte_end":128634,"line_start":984,"line_end":984,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159722,"byte_end":159729,"line_start":14,"line_end":14,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159977,"byte_end":159978,"line_start":27,"line_end":27,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160116,"byte_end":160123,"line_start":34,"line_end":34,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160262,"byte_end":160269,"line_start":43,"line_end":43,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160404,"byte_end":160411,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160453,"byte_end":160460,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160601,"byte_end":160608,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160717,"byte_end":160724,"line_start":65,"line_end":65,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160857,"byte_end":160864,"line_start":72,"line_end":72,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161733,"byte_end":161734,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":162318,"byte_end":162324,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163532,"byte_end":163540,"line_start":49,"line_end":49,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163706,"byte_end":163714,"line_start":55,"line_end":55,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163888,"byte_end":163896,"line_start":61,"line_end":61,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164060,"byte_end":164067,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164233,"byte_end":164240,"line_start":73,"line_end":73,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164414,"byte_end":164421,"line_start":79,"line_end":79,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164630,"byte_end":164636,"line_start":85,"line_end":85,"column_start":70,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164785,"byte_end":164791,"line_start":92,"line_end":92,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165210,"byte_end":165216,"line_start":107,"line_end":107,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165445,"byte_end":165451,"line_start":115,"line_end":115,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165648,"byte_end":165654,"line_start":122,"line_end":122,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166094,"byte_end":166100,"line_start":137,"line_end":137,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166376,"byte_end":166384,"line_start":146,"line_end":146,"column_start":90,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166928,"byte_end":166935,"line_start":160,"line_end":160,"column_start":90,"column_end":97},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168320,"byte_end":168325,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168538,"byte_end":168541,"line_start":19,"line_end":19,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168694,"byte_end":168697,"line_start":25,"line_end":25,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168858,"byte_end":168861,"line_start":31,"line_end":31,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169020,"byte_end":169025,"line_start":37,"line_end":37,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169207,"byte_end":169212,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169402,"byte_end":169407,"line_start":53,"line_end":53,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169592,"byte_end":169597,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169969,"byte_end":169974,"line_start":76,"line_end":76,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":170215,"byte_end":170218,"line_start":84,"line_end":84,"column_start":97,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":171009,"byte_end":171012,"line_start":106,"line_end":106,"column_start":89,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171352,"byte_end":171358,"line_start":8,"line_end":8,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171651,"byte_end":171657,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171922,"byte_end":171928,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":172097,"byte_end":172102,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173490,"byte_end":173506,"line_start":27,"line_end":27,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173685,"byte_end":173701,"line_start":34,"line_end":34,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/mutfn.rs","byte_start":174593,"byte_end":174596,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/once.rs","byte_start":175436,"byte_end":175440,"line_start":25,"line_end":25,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/instance_of.rs","byte_start":175901,"byte_end":175910,"line_start":9,"line_end":9,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":177445,"byte_end":177455,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":178197,"byte_end":178204,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":187880,"byte_end":187892,"line_start":310,"line_end":310,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":188498,"byte_end":188505,"line_start":330,"line_end":330,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":189964,"byte_end":189977,"line_start":30,"line_end":30,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190830,"byte_end":190843,"line_start":49,"line_end":49,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190986,"byte_end":190999,"line_start":58,"line_end":58,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":193602,"byte_end":193615,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":195965,"byte_end":195982,"line_start":109,"line_end":109,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":196240,"byte_end":196257,"line_start":122,"line_end":122,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198590,"byte_end":198601,"line_start":9,"line_end":9,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198799,"byte_end":198810,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":199074,"byte_end":199085,"line_start":27,"line_end":27,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":199849,"byte_end":199853,"line_start":9,"line_end":9,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":199985,"byte_end":199989,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":200121,"byte_end":200125,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":202859,"byte_end":202863,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236866,"byte_end":236874,"line_start":32,"line_end":32,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236899,"byte_end":236907,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236926,"byte_end":236934,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236970,"byte_end":236978,"line_start":36,"line_end":36,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":237244,"byte_end":237252,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247276,"byte_end":247303,"line_start":16,"line_end":16,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248044,"byte_end":248050,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248079,"byte_end":248085,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248339,"byte_end":248345,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265418,"byte_end":265423,"line_start":211,"line_end":211,"column_start":17,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266073,"byte_end":266090,"line_start":224,"line_end":224,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266567,"byte_end":266578,"line_start":237,"line_end":237,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267045,"byte_end":267066,"line_start":248,"line_end":248,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268443,"byte_end":268450,"line_start":288,"line_end":288,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268472,"byte_end":268479,"line_start":289,"line_end":289,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":270126,"byte_end":270145,"line_start":17,"line_end":17,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":270353,"byte_end":270372,"line_start":23,"line_end":23,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":273002,"byte_end":273013,"line_start":87,"line_end":87,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287169,"byte_end":287173,"line_start":363,"line_end":363,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287192,"byte_end":287196,"line_start":364,"line_end":364,"column_start":16,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287206,"byte_end":287210,"line_start":366,"line_end":366,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315618,"byte_end":315625,"line_start":298,"line_end":298,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315644,"byte_end":315651,"line_start":299,"line_end":299,"column_start":16,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315673,"byte_end":315680,"line_start":300,"line_end":300,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315721,"byte_end":315722,"line_start":302,"line_end":302,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315761,"byte_end":315762,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315800,"byte_end":315801,"line_start":304,"line_end":304,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316344,"byte_end":316358,"line_start":324,"line_end":324,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320089,"byte_end":320093,"line_start":15,"line_end":15,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326942,"byte_end":326953,"line_start":181,"line_end":181,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326972,"byte_end":326983,"line_start":182,"line_end":182,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":327005,"byte_end":327016,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":327042,"byte_end":327053,"line_start":184,"line_end":184,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329064,"byte_end":329077,"line_start":22,"line_end":22,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329096,"byte_end":329109,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329131,"byte_end":329144,"line_start":24,"line_end":24,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329170,"byte_end":329183,"line_start":25,"line_end":25,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329193,"byte_end":329206,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333918,"byte_end":333930,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333949,"byte_end":333961,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333983,"byte_end":333995,"line_start":21,"line_end":21,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334021,"byte_end":334033,"line_start":22,"line_end":22,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334043,"byte_end":334055,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345122,"byte_end":345134,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345153,"byte_end":345165,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345187,"byte_end":345199,"line_start":21,"line_end":21,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345225,"byte_end":345237,"line_start":22,"line_end":22,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345247,"byte_end":345259,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348269,"byte_end":348284,"line_start":17,"line_end":17,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348303,"byte_end":348318,"line_start":18,"line_end":18,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348340,"byte_end":348355,"line_start":19,"line_end":19,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348381,"byte_end":348396,"line_start":20,"line_end":20,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348406,"byte_end":348421,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":349511,"byte_end":349528,"line_start":15,"line_end":15,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":349732,"byte_end":349749,"line_start":21,"line_end":21,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350323,"byte_end":350336,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350355,"byte_end":350368,"line_start":37,"line_end":37,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350390,"byte_end":350403,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350429,"byte_end":350442,"line_start":39,"line_end":39,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350452,"byte_end":350465,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358321,"byte_end":358334,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358353,"byte_end":358366,"line_start":19,"line_end":19,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358388,"byte_end":358401,"line_start":20,"line_end":20,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358427,"byte_end":358440,"line_start":21,"line_end":21,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358450,"byte_end":358463,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360135,"byte_end":360150,"line_start":20,"line_end":20,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360169,"byte_end":360184,"line_start":21,"line_end":21,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360206,"byte_end":360221,"line_start":22,"line_end":22,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360247,"byte_end":360262,"line_start":23,"line_end":23,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360272,"byte_end":360287,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362254,"byte_end":362269,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363034,"byte_end":363045,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363064,"byte_end":363075,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363097,"byte_end":363108,"line_start":42,"line_end":42,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363134,"byte_end":363145,"line_start":43,"line_end":43,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363155,"byte_end":363166,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":369919,"byte_end":369932,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":370814,"byte_end":370823,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372868,"byte_end":372884,"line_start":15,"line_end":15,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372903,"byte_end":372919,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372944,"byte_end":372960,"line_start":17,"line_end":17,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373770,"byte_end":373778,"line_start":20,"line_end":20,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373797,"byte_end":373805,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373828,"byte_end":373836,"line_start":22,"line_end":22,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":374994,"byte_end":375002,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":375902,"byte_end":375910,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":376449,"byte_end":376457,"line_start":84,"line_end":84,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377438,"byte_end":377447,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":379411,"byte_end":379419,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384203,"byte_end":384210,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389846,"byte_end":389850,"line_start":91,"line_end":91,"column_start":16,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389860,"byte_end":389864,"line_start":93,"line_end":93,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390680,"byte_end":390684,"line_start":15,"line_end":15,"column_start":16,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390694,"byte_end":390698,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":391723,"byte_end":391731,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392266,"byte_end":392274,"line_start":34,"line_end":34,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392813,"byte_end":392821,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394060,"byte_end":394070,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394979,"byte_end":394989,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":398882,"byte_end":398893,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399711,"byte_end":399714,"line_start":36,"line_end":36,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399902,"byte_end":399905,"line_start":43,"line_end":43,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":403693,"byte_end":403703,"line_start":98,"line_end":98,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":404252,"byte_end":404262,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405202,"byte_end":405212,"line_start":135,"line_end":135,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405351,"byte_end":405361,"line_start":141,"line_end":141,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405533,"byte_end":405543,"line_start":147,"line_end":147,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411593,"byte_end":411607,"line_start":59,"line_end":59,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411843,"byte_end":411857,"line_start":71,"line_end":71,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":419563,"byte_end":419570,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427573,"byte_end":427582,"line_start":73,"line_end":73,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":428330,"byte_end":428346,"line_start":89,"line_end":89,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429206,"byte_end":429222,"line_start":118,"line_end":118,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429704,"byte_end":429713,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450089,"byte_end":450100,"line_start":260,"line_end":260,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450752,"byte_end":450760,"line_start":278,"line_end":278,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450834,"byte_end":450844,"line_start":282,"line_end":282,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450930,"byte_end":450954,"line_start":286,"line_end":286,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":451164,"byte_end":451178,"line_start":295,"line_end":295,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":451825,"byte_end":451834,"line_start":310,"line_end":310,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":960,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":453145,"byte_end":453169,"line_start":347,"line_end":347,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":961,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":504230,"byte_end":504241,"line_start":1391,"line_end":1391,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":971,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":508090,"byte_end":508106,"line_start":55,"line_end":55,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":972,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":513465,"byte_end":513487,"line_start":171,"line_end":171,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":973,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":513637,"byte_end":513659,"line_start":180,"line_end":180,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":974,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":515651,"byte_end":515665,"line_start":244,"line_end":244,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519661,"byte_end":519666,"line_start":43,"line_end":43,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":985,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520013,"byte_end":520018,"line_start":53,"line_end":53,"column_start":17,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520449,"byte_end":520458,"line_start":64,"line_end":64,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":521764,"byte_end":521769,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":1008,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528506,"byte_end":528515,"line_start":194,"line_end":194,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":1020,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529644,"byte_end":529656,"line_start":20,"line_end":20,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1021,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529683,"byte_end":529695,"line_start":21,"line_end":21,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1034,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530029,"byte_end":530050,"line_start":31,"line_end":31,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1035,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530077,"byte_end":530098,"line_start":32,"line_end":32,"column_start":24,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1048,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530476,"byte_end":530494,"line_start":42,"line_end":42,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1049,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530521,"byte_end":530539,"line_start":43,"line_end":43,"column_start":24,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1062,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530906,"byte_end":530932,"line_start":53,"line_end":53,"column_start":17,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1063,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530959,"byte_end":530985,"line_start":54,"line_end":54,"column_start":24,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1076,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531348,"byte_end":531361,"line_start":64,"line_end":64,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1077,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531388,"byte_end":531401,"line_start":65,"line_end":65,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1090,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531737,"byte_end":531750,"line_start":75,"line_end":75,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1091,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531777,"byte_end":531790,"line_start":76,"line_end":76,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1104,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532134,"byte_end":532145,"line_start":86,"line_end":86,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1105,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532172,"byte_end":532183,"line_start":87,"line_end":87,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1118,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532494,"byte_end":532508,"line_start":97,"line_end":97,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1119,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532535,"byte_end":532549,"line_start":98,"line_end":98,"column_start":24,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1132,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532877,"byte_end":532894,"line_start":108,"line_end":108,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1133,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532921,"byte_end":532938,"line_start":109,"line_end":109,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1146,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533364,"byte_end":533381,"line_start":119,"line_end":119,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1147,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533408,"byte_end":533425,"line_start":120,"line_end":120,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1160,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533800,"byte_end":533821,"line_start":130,"line_end":130,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1161,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533848,"byte_end":533869,"line_start":131,"line_end":131,"column_start":24,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1174,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534272,"byte_end":534288,"line_start":141,"line_end":141,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1175,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534315,"byte_end":534331,"line_start":142,"line_end":142,"column_start":24,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1188,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534652,"byte_end":534662,"line_start":152,"line_end":152,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1189,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534689,"byte_end":534699,"line_start":153,"line_end":153,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1202,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":535032,"byte_end":535046,"line_start":163,"line_end":163,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1203,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":535073,"byte_end":535087,"line_start":164,"line_end":164,"column_start":24,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1216,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536821,"byte_end":536832,"line_start":17,"line_end":17,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1229,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537618,"byte_end":537628,"line_start":35,"line_end":35,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1244,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538086,"byte_end":538103,"line_start":47,"line_end":47,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1245,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538125,"byte_end":538142,"line_start":48,"line_end":48,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1260,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538598,"byte_end":538616,"line_start":60,"line_end":60,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1261,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538638,"byte_end":538656,"line_start":61,"line_end":61,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1276,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539170,"byte_end":539188,"line_start":74,"line_end":74,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1277,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539210,"byte_end":539228,"line_start":75,"line_end":75,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1290,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539762,"byte_end":539773,"line_start":89,"line_end":89,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1303,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540225,"byte_end":540236,"line_start":101,"line_end":101,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1316,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540720,"byte_end":540741,"line_start":113,"line_end":113,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1329,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541144,"byte_end":541155,"line_start":125,"line_end":125,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1342,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541667,"byte_end":541687,"line_start":138,"line_end":138,"column_start":17,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1358,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545852,"byte_end":545868,"line_start":45,"line_end":45,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1359,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545891,"byte_end":545907,"line_start":47,"line_end":47,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1360,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545933,"byte_end":545949,"line_start":49,"line_end":49,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1361,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545974,"byte_end":545990,"line_start":51,"line_end":51,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1380,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546517,"byte_end":546526,"line_start":64,"line_end":64,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1381,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546549,"byte_end":546558,"line_start":66,"line_end":66,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1382,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546584,"byte_end":546593,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1383,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546618,"byte_end":546627,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1402,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547142,"byte_end":547156,"line_start":82,"line_end":82,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1403,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547179,"byte_end":547193,"line_start":84,"line_end":84,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1404,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547219,"byte_end":547233,"line_start":86,"line_end":86,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1405,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547258,"byte_end":547272,"line_start":88,"line_end":88,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1424,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547796,"byte_end":547810,"line_start":100,"line_end":100,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1425,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547833,"byte_end":547847,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1426,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547873,"byte_end":547887,"line_start":104,"line_end":104,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1427,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547912,"byte_end":547926,"line_start":106,"line_end":106,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1446,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548458,"byte_end":548471,"line_start":119,"line_end":119,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1447,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548494,"byte_end":548507,"line_start":121,"line_end":121,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1448,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548533,"byte_end":548546,"line_start":123,"line_end":123,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1449,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548571,"byte_end":548584,"line_start":125,"line_end":125,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1468,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549108,"byte_end":549122,"line_start":137,"line_end":137,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1469,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549145,"byte_end":549159,"line_start":139,"line_end":139,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1470,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549185,"byte_end":549199,"line_start":141,"line_end":141,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1471,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549224,"byte_end":549238,"line_start":143,"line_end":143,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1490,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549802,"byte_end":549815,"line_start":156,"line_end":156,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1491,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549838,"byte_end":549851,"line_start":158,"line_end":158,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1492,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549877,"byte_end":549890,"line_start":160,"line_end":160,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1493,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549915,"byte_end":549928,"line_start":162,"line_end":162,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1512,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550431,"byte_end":550444,"line_start":174,"line_end":174,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1513,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550467,"byte_end":550480,"line_start":176,"line_end":176,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1514,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550506,"byte_end":550519,"line_start":178,"line_end":178,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1515,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550544,"byte_end":550557,"line_start":180,"line_end":180,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1534,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551100,"byte_end":551112,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1535,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551135,"byte_end":551147,"line_start":195,"line_end":195,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1536,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551173,"byte_end":551185,"line_start":197,"line_end":197,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1537,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551210,"byte_end":551222,"line_start":199,"line_end":199,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1547,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551792,"byte_end":551804,"line_start":212,"line_end":212,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":1557,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560805,"byte_end":560825,"line_start":419,"line_end":419,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":1558,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":563789,"byte_end":563809,"line_start":491,"line_end":491,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":1559,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":564355,"byte_end":564375,"line_start":517,"line_end":517,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":1569,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":565251,"byte_end":565267,"line_start":545,"line_end":545,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":1570,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568618,"byte_end":568638,"line_start":631,"line_end":631,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":1582,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574010,"byte_end":574027,"line_start":34,"line_end":34,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1583,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574052,"byte_end":574069,"line_start":35,"line_end":35,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1598,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574597,"byte_end":574607,"line_start":48,"line_end":48,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1599,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574632,"byte_end":574642,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1614,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575162,"byte_end":575171,"line_start":62,"line_end":62,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1615,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575196,"byte_end":575205,"line_start":63,"line_end":63,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1627,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576904,"byte_end":576916,"line_start":32,"line_end":32,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1628,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576943,"byte_end":576955,"line_start":33,"line_end":33,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1643,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577476,"byte_end":577497,"line_start":45,"line_end":45,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1644,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577524,"byte_end":577545,"line_start":46,"line_end":46,"column_start":24,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1659,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":578065,"byte_end":578089,"line_start":58,"line_end":58,"column_start":17,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1660,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":578116,"byte_end":578140,"line_start":59,"line_end":59,"column_start":24,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1673,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579438,"byte_end":579453,"line_start":18,"line_end":18,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1674,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579463,"byte_end":579478,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":1687,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581599,"byte_end":581612,"line_start":67,"line_end":67,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":1688,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":582070,"byte_end":582083,"line_start":83,"line_end":83,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1700,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590593,"byte_end":590606,"line_start":202,"line_end":202,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1701,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590634,"byte_end":590647,"line_start":203,"line_end":203,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1716,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591144,"byte_end":591157,"line_start":216,"line_end":216,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1717,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591185,"byte_end":591198,"line_start":217,"line_end":217,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1732,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591745,"byte_end":591757,"line_start":231,"line_end":231,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1733,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591785,"byte_end":591797,"line_start":232,"line_end":232,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1748,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592224,"byte_end":592234,"line_start":244,"line_end":244,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1749,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592262,"byte_end":592272,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1750,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602456,"byte_end":602473,"line_start":228,"line_end":228,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":1764,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603369,"byte_end":603379,"line_start":251,"line_end":251,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1765,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603401,"byte_end":603411,"line_start":252,"line_end":252,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1766,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603436,"byte_end":603446,"line_start":253,"line_end":253,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1783,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603966,"byte_end":603976,"line_start":266,"line_end":266,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1784,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603998,"byte_end":604008,"line_start":267,"line_end":267,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1785,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604033,"byte_end":604043,"line_start":268,"line_end":268,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1802,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604594,"byte_end":604607,"line_start":281,"line_end":281,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1803,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604629,"byte_end":604642,"line_start":282,"line_end":282,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1804,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604667,"byte_end":604680,"line_start":283,"line_end":283,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1821,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605246,"byte_end":605262,"line_start":296,"line_end":296,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1822,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605284,"byte_end":605300,"line_start":297,"line_end":297,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1823,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605325,"byte_end":605341,"line_start":298,"line_end":298,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1840,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605879,"byte_end":605895,"line_start":312,"line_end":312,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1841,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605917,"byte_end":605933,"line_start":313,"line_end":313,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1842,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605958,"byte_end":605974,"line_start":314,"line_end":314,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1859,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606460,"byte_end":606474,"line_start":327,"line_end":327,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1860,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606496,"byte_end":606510,"line_start":328,"line_end":328,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1861,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606535,"byte_end":606549,"line_start":329,"line_end":329,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1878,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607028,"byte_end":607040,"line_start":342,"line_end":342,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1879,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607062,"byte_end":607074,"line_start":343,"line_end":343,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1880,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607099,"byte_end":607111,"line_start":344,"line_end":344,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1897,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607614,"byte_end":607628,"line_start":357,"line_end":357,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1898,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607650,"byte_end":607664,"line_start":358,"line_end":358,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1899,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607689,"byte_end":607703,"line_start":359,"line_end":359,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1916,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608260,"byte_end":608274,"line_start":372,"line_end":372,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1917,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608296,"byte_end":608310,"line_start":373,"line_end":373,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1918,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608335,"byte_end":608349,"line_start":374,"line_end":374,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1935,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608899,"byte_end":608912,"line_start":387,"line_end":387,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1936,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608934,"byte_end":608947,"line_start":388,"line_end":388,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1937,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608972,"byte_end":608985,"line_start":389,"line_end":389,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1954,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609519,"byte_end":609534,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1955,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609556,"byte_end":609571,"line_start":403,"line_end":403,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1956,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609596,"byte_end":609611,"line_start":404,"line_end":404,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1973,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610152,"byte_end":610167,"line_start":417,"line_end":417,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1974,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610189,"byte_end":610204,"line_start":418,"line_end":418,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1975,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610229,"byte_end":610244,"line_start":419,"line_end":419,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1992,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610785,"byte_end":610800,"line_start":432,"line_end":432,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1993,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610822,"byte_end":610837,"line_start":433,"line_end":433,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1994,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610862,"byte_end":610877,"line_start":434,"line_end":434,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1995,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610887,"byte_end":610902,"line_start":436,"line_end":436,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":2011,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624755,"byte_end":624767,"line_start":165,"line_end":165,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2012,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624789,"byte_end":624801,"line_start":166,"line_end":166,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2013,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624826,"byte_end":624838,"line_start":167,"line_end":167,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2014,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624865,"byte_end":624877,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2033,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625407,"byte_end":625423,"line_start":181,"line_end":181,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2034,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625445,"byte_end":625461,"line_start":182,"line_end":182,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2035,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625486,"byte_end":625502,"line_start":183,"line_end":183,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2036,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625529,"byte_end":625545,"line_start":184,"line_end":184,"column_start":24,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2055,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626133,"byte_end":626150,"line_start":197,"line_end":197,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2056,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626172,"byte_end":626189,"line_start":198,"line_end":198,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2057,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626214,"byte_end":626231,"line_start":199,"line_end":199,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2058,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626258,"byte_end":626275,"line_start":200,"line_end":200,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2077,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626761,"byte_end":626777,"line_start":212,"line_end":212,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2078,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626799,"byte_end":626815,"line_start":213,"line_end":213,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2079,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626840,"byte_end":626856,"line_start":214,"line_end":214,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2080,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626883,"byte_end":626899,"line_start":215,"line_end":215,"column_start":24,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2099,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627390,"byte_end":627406,"line_start":227,"line_end":227,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2100,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627428,"byte_end":627444,"line_start":228,"line_end":228,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2101,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627469,"byte_end":627485,"line_start":229,"line_end":229,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2102,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627512,"byte_end":627528,"line_start":230,"line_end":230,"column_start":24,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2103,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627538,"byte_end":627554,"line_start":232,"line_end":232,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":2122,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628554,"byte_end":628568,"line_start":256,"line_end":256,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2123,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628590,"byte_end":628604,"line_start":257,"line_end":257,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2124,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628629,"byte_end":628643,"line_start":258,"line_end":258,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2125,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628670,"byte_end":628684,"line_start":259,"line_end":259,"column_start":24,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2144,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629354,"byte_end":629372,"line_start":273,"line_end":273,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2145,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629394,"byte_end":629412,"line_start":274,"line_end":274,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2146,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629437,"byte_end":629455,"line_start":275,"line_end":275,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2147,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629482,"byte_end":629500,"line_start":276,"line_end":276,"column_start":24,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2166,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630121,"byte_end":630136,"line_start":289,"line_end":289,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2167,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630158,"byte_end":630173,"line_start":290,"line_end":290,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2168,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630198,"byte_end":630213,"line_start":291,"line_end":291,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2169,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630240,"byte_end":630255,"line_start":292,"line_end":292,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2188,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630939,"byte_end":630956,"line_start":306,"line_end":306,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2189,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630978,"byte_end":630995,"line_start":307,"line_end":307,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2190,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631020,"byte_end":631037,"line_start":308,"line_end":308,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2191,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631064,"byte_end":631081,"line_start":309,"line_end":309,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2210,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631605,"byte_end":631627,"line_start":321,"line_end":321,"column_start":17,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2211,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631649,"byte_end":631671,"line_start":322,"line_end":322,"column_start":19,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2212,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631696,"byte_end":631718,"line_start":323,"line_end":323,"column_start":22,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2213,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631745,"byte_end":631767,"line_start":324,"line_end":324,"column_start":24,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2232,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632293,"byte_end":632316,"line_start":336,"line_end":336,"column_start":17,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2233,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632338,"byte_end":632361,"line_start":337,"line_end":337,"column_start":19,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2234,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632386,"byte_end":632409,"line_start":338,"line_end":338,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2235,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632436,"byte_end":632459,"line_start":339,"line_end":339,"column_start":24,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2248,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632954,"byte_end":632976,"line_start":351,"line_end":351,"column_start":17,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2261,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633467,"byte_end":633488,"line_start":363,"line_end":363,"column_start":17,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2273,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640576,"byte_end":640596,"line_start":55,"line_end":55,"column_start":17,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2274,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640624,"byte_end":640644,"line_start":56,"line_end":56,"column_start":25,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2289,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641111,"byte_end":641124,"line_start":68,"line_end":68,"column_start":17,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2290,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641152,"byte_end":641165,"line_start":69,"line_end":69,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2305,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641637,"byte_end":641654,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2306,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641682,"byte_end":641699,"line_start":82,"line_end":82,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2321,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642150,"byte_end":642164,"line_start":94,"line_end":94,"column_start":17,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2322,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642192,"byte_end":642206,"line_start":95,"line_end":95,"column_start":25,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2337,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642756,"byte_end":642768,"line_start":109,"line_end":109,"column_start":17,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2338,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642796,"byte_end":642808,"line_start":110,"line_end":110,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2353,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643282,"byte_end":643300,"line_start":122,"line_end":122,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2354,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643328,"byte_end":643346,"line_start":123,"line_end":123,"column_start":25,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2369,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643814,"byte_end":643832,"line_start":135,"line_end":135,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2370,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643860,"byte_end":643878,"line_start":136,"line_end":136,"column_start":25,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2383,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645795,"byte_end":645811,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":2384,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647178,"byte_end":647194,"line_start":55,"line_end":55,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2397,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647768,"byte_end":647784,"line_start":69,"line_end":69,"column_start":17,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2410,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648296,"byte_end":648311,"line_start":82,"line_end":82,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2411,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648914,"byte_end":648931,"line_start":99,"line_end":99,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":2412,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":649512,"byte_end":649529,"line_start":114,"line_end":114,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":2425,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653566,"byte_end":653584,"line_start":212,"line_end":212,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":2426,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653641,"byte_end":653659,"line_start":216,"line_end":216,"column_start":17,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2439,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654974,"byte_end":654989,"line_start":15,"line_end":15,"column_start":17,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2453,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658833,"byte_end":658843,"line_start":102,"line_end":102,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2454,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658865,"byte_end":658875,"line_start":103,"line_end":103,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2455,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658900,"byte_end":658910,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2472,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659394,"byte_end":659403,"line_start":117,"line_end":117,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2473,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659425,"byte_end":659434,"line_start":118,"line_end":118,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2474,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659459,"byte_end":659468,"line_start":119,"line_end":119,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2491,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660047,"byte_end":660057,"line_start":134,"line_end":134,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2492,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660079,"byte_end":660089,"line_start":135,"line_end":135,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2493,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660114,"byte_end":660124,"line_start":136,"line_end":136,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2510,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660704,"byte_end":660714,"line_start":151,"line_end":151,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2511,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660736,"byte_end":660746,"line_start":152,"line_end":152,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2512,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660771,"byte_end":660781,"line_start":153,"line_end":153,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2529,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661267,"byte_end":661275,"line_start":166,"line_end":166,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2530,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661297,"byte_end":661305,"line_start":167,"line_end":167,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2531,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661330,"byte_end":661338,"line_start":168,"line_end":168,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2548,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661914,"byte_end":661925,"line_start":182,"line_end":182,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2549,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661947,"byte_end":661958,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2550,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661983,"byte_end":661994,"line_start":184,"line_end":184,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2567,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662487,"byte_end":662497,"line_start":197,"line_end":197,"column_start":17,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2568,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662519,"byte_end":662529,"line_start":198,"line_end":198,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2569,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662554,"byte_end":662564,"line_start":199,"line_end":199,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2579,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":673463,"byte_end":673477,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":2580,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674404,"byte_end":674418,"line_start":47,"line_end":47,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":2581,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674990,"byte_end":675001,"line_start":79,"line_end":79,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":2582,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":676592,"byte_end":676610,"line_start":23,"line_end":23,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":2592,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677361,"byte_end":677374,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":2602,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678807,"byte_end":678814,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":2612,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":684391,"byte_end":684400,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":2622,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":696418,"byte_end":696423,"line_start":309,"line_end":309,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":2623,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":703484,"byte_end":703498,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":2639,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704193,"byte_end":704203,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2640,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704222,"byte_end":704232,"line_start":41,"line_end":41,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2641,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704257,"byte_end":704267,"line_start":42,"line_end":42,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2642,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704277,"byte_end":704287,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":2652,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709006,"byte_end":709019,"line_start":37,"line_end":37,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":2653,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709441,"byte_end":709447,"line_start":51,"line_end":51,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":2654,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709933,"byte_end":709941,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":2655,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":717605,"byte_end":717614,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":2656,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":717825,"byte_end":717834,"line_start":39,"line_end":39,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":2657,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718021,"byte_end":718037,"line_start":43,"line_end":43,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":2658,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718469,"byte_end":718473,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":2659,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718679,"byte_end":718683,"line_start":66,"line_end":66,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":2660,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718865,"byte_end":718876,"line_start":70,"line_end":70,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":2661,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719283,"byte_end":719289,"line_start":86,"line_end":86,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":2662,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719634,"byte_end":719640,"line_start":96,"line_end":96,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":2663,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719824,"byte_end":719837,"line_start":100,"line_end":100,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2856},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":2664,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":721558,"byte_end":721563,"line_start":152,"line_end":152,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":2665,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":723230,"byte_end":723235,"line_start":187,"line_end":187,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":2666,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":723418,"byte_end":723430,"line_start":191,"line_end":191,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2892},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":2667,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728065,"byte_end":728080,"line_start":321,"line_end":321,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":2668,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728231,"byte_end":728246,"line_start":329,"line_end":329,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":2669,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728462,"byte_end":728477,"line_start":336,"line_end":336,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":2670,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728842,"byte_end":728857,"line_start":346,"line_end":346,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":2671,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729050,"byte_end":729065,"line_start":354,"line_end":354,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":2672,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729280,"byte_end":729295,"line_start":362,"line_end":362,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":2673,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729509,"byte_end":729524,"line_start":370,"line_end":370,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":2674,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729984,"byte_end":729994,"line_start":384,"line_end":384,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":2675,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735754,"byte_end":735766,"line_start":569,"line_end":569,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":2676,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736160,"byte_end":736172,"line_start":585,"line_end":585,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":2677,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736570,"byte_end":736582,"line_start":600,"line_end":600,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":2678,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736951,"byte_end":736972,"line_start":613,"line_end":613,"column_start":37,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":2679,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":737454,"byte_end":737466,"line_start":629,"line_end":629,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":2680,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":738850,"byte_end":738862,"line_start":667,"line_end":667,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":2681,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":739305,"byte_end":739327,"line_start":681,"line_end":681,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":2682,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":740204,"byte_end":740210,"line_start":709,"line_end":709,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":22688},{"krate":0,"index":22690},{"krate":0,"index":22692},{"krate":0,"index":22694},{"krate":0,"index":22696},{"krate":0,"index":22698},{"krate":0,"index":22700},{"krate":0,"index":22702},{"krate":0,"index":22704},{"krate":0,"index":22706},{"krate":0,"index":22708},{"krate":0,"index":22710},{"krate":0,"index":22712},{"krate":0,"index":22714},{"krate":0,"index":22716},{"krate":0,"index":22718},{"krate":0,"index":22720},{"krate":0,"index":22722},{"krate":0,"index":22724},{"krate":0,"index":22726},{"krate":0,"index":22728},{"krate":0,"index":22730},{"krate":0,"index":22732},{"krate":0,"index":22734},{"krate":0,"index":22736},{"krate":0,"index":22738},{"krate":0,"index":22740},{"krate":0,"index":22742}],"docs":"","sig":null,"attributes":[]},{"id":2683,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":741218,"byte_end":741223,"line_start":741,"line_end":741,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":2684,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":742508,"byte_end":742513,"line_start":774,"line_end":774,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":22744},{"krate":0,"index":22746},{"krate":0,"index":22748},{"krate":0,"index":22750},{"krate":0,"index":22752},{"krate":0,"index":22754},{"krate":0,"index":22756},{"krate":0,"index":22758},{"krate":0,"index":22760},{"krate":0,"index":22762},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3043},{"krate":0,"index":22764},{"krate":0,"index":22766},{"krate":0,"index":22768},{"krate":0,"index":22770},{"krate":0,"index":22772},{"krate":0,"index":22774},{"krate":0,"index":22776},{"krate":0,"index":22778},{"krate":0,"index":22780},{"krate":0,"index":22782},{"krate":0,"index":22784},{"krate":0,"index":22786},{"krate":0,"index":22788},{"krate":0,"index":22790},{"krate":0,"index":22792}],"docs":"","sig":null,"attributes":[]},{"id":2685,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":747224,"byte_end":747240,"line_start":894,"line_end":894,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":2686,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":747739,"byte_end":747758,"line_start":909,"line_end":909,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":2687,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":749952,"byte_end":749967,"line_start":959,"line_end":959,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":2688,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":750131,"byte_end":750146,"line_start":967,"line_end":967,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":22794},{"krate":0,"index":22796},{"krate":0,"index":22798},{"krate":0,"index":22800},{"krate":0,"index":22802},{"krate":0,"index":22804},{"krate":0,"index":22806},{"krate":0,"index":22808},{"krate":0,"index":22810},{"krate":0,"index":22812},{"krate":0,"index":22814},{"krate":0,"index":22816},{"krate":0,"index":22818},{"krate":0,"index":22820},{"krate":0,"index":22822},{"krate":0,"index":22824},{"krate":0,"index":22826},{"krate":0,"index":22828},{"krate":0,"index":22830},{"krate":0,"index":22832},{"krate":0,"index":22834},{"krate":0,"index":22836},{"krate":0,"index":22838},{"krate":0,"index":22840},{"krate":0,"index":22842},{"krate":0,"index":22844},{"krate":0,"index":22846},{"krate":0,"index":22848}],"docs":"","sig":null,"attributes":[]},{"id":2689,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":750992,"byte_end":751007,"line_start":993,"line_end":993,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":2690,"kind":"Inherent","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":751645,"byte_end":751660,"line_start":1016,"line_end":1016,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":2691,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":751860,"byte_end":751875,"line_start":1025,"line_end":1025,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":2692,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":752811,"byte_end":752826,"line_start":1053,"line_end":1053,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":22850},{"krate":0,"index":22852},{"krate":0,"index":22854},{"krate":0,"index":22856},{"krate":0,"index":22858},{"krate":0,"index":22860},{"krate":0,"index":22862},{"krate":0,"index":22864},{"krate":0,"index":22866},{"krate":0,"index":22868},{"krate":0,"index":22870},{"krate":0,"index":22872},{"krate":0,"index":22874},{"krate":0,"index":22876},{"krate":0,"index":22878},{"krate":0,"index":22880},{"krate":0,"index":22882},{"krate":0,"index":22884},{"krate":0,"index":22886},{"krate":0,"index":22888},{"krate":0,"index":22890},{"krate":0,"index":22892},{"krate":0,"index":22894},{"krate":0,"index":22896},{"krate":0,"index":22898},{"krate":0,"index":22900},{"krate":0,"index":22902},{"krate":0,"index":22904}],"docs":"","sig":null,"attributes":[]},{"id":2693,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":758925,"byte_end":758930,"line_start":1248,"line_end":1248,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":2694,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759112,"byte_end":759117,"line_start":1255,"line_end":1255,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":2695,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759353,"byte_end":759358,"line_start":1263,"line_end":1263,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":2696,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759572,"byte_end":759577,"line_start":1271,"line_end":1271,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":2697,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759799,"byte_end":759804,"line_start":1279,"line_end":1279,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":2698,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":760027,"byte_end":760032,"line_start":1287,"line_end":1287,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":2699,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":760262,"byte_end":760268,"line_start":1295,"line_end":1295,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":2701,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde_json.rs","byte_start":770618,"byte_end":770623,"line_start":7,"line_end":7,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":2702,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17446,"byte_end":17450,"line_start":601,"line_end":601,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":2703,"kind":"Direct","span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17617,"byte_end":17621,"line_start":607,"line_end":607,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":38906,"byte_end":38915,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":39775,"byte_end":39784,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40093,"byte_end":40102,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40122,"byte_end":40131,"line_start":80,"line_end":80,"column_start":16,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40289,"byte_end":40298,"line_start":89,"line_end":89,"column_start":15,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":40463,"byte_end":40472,"line_start":96,"line_end":96,"column_start":29,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2211}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":42617,"byte_end":42622,"line_start":171,"line_end":171,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46778,"byte_end":46783,"line_start":313,"line_end":313,"column_start":25,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2211}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":46883,"byte_end":46888,"line_start":320,"line_end":320,"column_start":28,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47014,"byte_end":47019,"line_start":327,"line_end":327,"column_start":38,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47153,"byte_end":47158,"line_start":334,"line_end":334,"column_start":42,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47277,"byte_end":47282,"line_start":341,"line_end":341,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47393,"byte_end":47398,"line_start":348,"line_end":348,"column_start":33,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47517,"byte_end":47522,"line_start":355,"line_end":355,"column_start":37,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47631,"byte_end":47636,"line_start":362,"line_end":362,"column_start":23,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47760,"byte_end":47765,"line_start":369,"line_end":369,"column_start":33,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":47898,"byte_end":47903,"line_start":376,"line_end":376,"column_start":37,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48037,"byte_end":48042,"line_start":383,"line_end":383,"column_start":32,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48186,"byte_end":48191,"line_start":390,"line_end":390,"column_start":36,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48316,"byte_end":48321,"line_start":397,"line_end":397,"column_start":25,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48451,"byte_end":48456,"line_start":404,"line_end":404,"column_start":35,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48602,"byte_end":48607,"line_start":411,"line_end":411,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48736,"byte_end":48741,"line_start":418,"line_end":418,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":48966,"byte_end":48971,"line_start":427,"line_end":427,"column_start":33,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49098,"byte_end":49103,"line_start":434,"line_end":434,"column_start":37,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49229,"byte_end":49234,"line_start":441,"line_end":441,"column_start":32,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49386,"byte_end":49391,"line_start":448,"line_end":448,"column_start":40,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49551,"byte_end":49556,"line_start":455,"line_end":455,"column_start":44,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49711,"byte_end":49716,"line_start":462,"line_end":462,"column_start":35,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":49923,"byte_end":49928,"line_start":470,"line_end":470,"column_start":39,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50092,"byte_end":50097,"line_start":477,"line_end":477,"column_start":43,"column_end":48},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50345,"byte_end":50350,"line_start":485,"line_end":485,"column_start":51,"column_end":56},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50606,"byte_end":50611,"line_start":493,"line_end":493,"column_start":55,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":50858,"byte_end":50863,"line_start":501,"line_end":501,"column_start":42,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51121,"byte_end":51126,"line_start":509,"line_end":509,"column_start":50,"column_end":55},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51392,"byte_end":51397,"line_start":517,"line_end":517,"column_start":54,"column_end":59},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51641,"byte_end":51646,"line_start":525,"line_end":525,"column_start":28,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51785,"byte_end":51790,"line_start":532,"line_end":532,"column_start":38,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":51945,"byte_end":51950,"line_start":539,"line_end":539,"column_start":42,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56010,"byte_end":56015,"line_start":644,"line_end":644,"column_start":33,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56205,"byte_end":56210,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56390,"byte_end":56395,"line_start":664,"line_end":664,"column_start":28,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56596,"byte_end":56601,"line_start":674,"line_end":674,"column_start":27,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":56809,"byte_end":56814,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57025,"byte_end":57030,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57238,"byte_end":57243,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57476,"byte_end":57481,"line_start":714,"line_end":714,"column_start":50,"column_end":55},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57847,"byte_end":57856,"line_start":731,"line_end":731,"column_start":29,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":57989,"byte_end":57998,"line_start":738,"line_end":738,"column_start":39,"column_end":48},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":61032,"byte_end":61047,"line_start":852,"line_end":852,"column_start":23,"column_end":38},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":61693,"byte_end":61708,"line_start":865,"line_end":865,"column_start":23,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4152},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62135,"byte_end":62150,"line_start":876,"line_end":876,"column_start":42,"column_end":57},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62297,"byte_end":62312,"line_start":882,"line_end":882,"column_start":23,"column_end":38},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62414,"byte_end":62423,"line_start":888,"line_end":888,"column_start":34,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":13773},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62555,"byte_end":62564,"line_start":894,"line_end":894,"column_start":44,"column_end":53},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":13773},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":62724,"byte_end":62739,"line_start":900,"line_end":900,"column_start":6,"column_end":21},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":63179,"byte_end":63188,"line_start":915,"line_end":915,"column_start":27,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":63506,"byte_end":63510,"line_start":927,"line_end":927,"column_start":27,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":65446,"byte_end":65454,"line_start":989,"line_end":989,"column_start":89,"column_end":97},"kind":{"Impl":{"id":148}},"from":{"krate":5,"index":997},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":66205,"byte_end":66212,"line_start":1011,"line_end":1011,"column_start":89,"column_end":96},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":6252},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":66963,"byte_end":66966,"line_start":1033,"line_end":1033,"column_start":89,"column_end":92},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":3829},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":67644,"byte_end":67650,"line_start":1055,"line_end":1055,"column_start":27,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":5,"index":4479},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":67967,"byte_end":67973,"line_start":1067,"line_end":1067,"column_start":27,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7078},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":68290,"byte_end":68299,"line_start":1079,"line_end":1079,"column_start":27,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":71266,"byte_end":71272,"line_start":1182,"line_end":1182,"column_start":37,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":71599,"byte_end":71605,"line_start":1194,"line_end":1194,"column_start":37,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/value.rs","byte_start":72000,"byte_end":72006,"line_start":1206,"line_end":1206,"column_start":96,"column_end":102},"kind":{"Impl":{"id":156}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80410,"byte_end":80425,"line_start":34,"line_end":34,"column_start":23,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4300},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":80641,"byte_end":80656,"line_start":41,"line_end":41,"column_start":23,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4300},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81047,"byte_end":81053,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2211}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81146,"byte_end":81152,"line_start":63,"line_end":63,"column_start":21,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81281,"byte_end":81287,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81417,"byte_end":81423,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":81549,"byte_end":81555,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82022,"byte_end":82028,"line_start":98,"line_end":98,"column_start":21,"column_end":27},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82157,"byte_end":82163,"line_start":105,"line_end":105,"column_start":22,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82293,"byte_end":82299,"line_start":112,"line_end":112,"column_start":22,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":82552,"byte_end":82558,"line_start":123,"line_end":123,"column_start":25,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83040,"byte_end":83046,"line_start":138,"line_end":138,"column_start":27,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83466,"byte_end":83472,"line_start":152,"line_end":152,"column_start":22,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":83602,"byte_end":83608,"line_start":159,"line_end":159,"column_start":22,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":86624,"byte_end":86630,"line_start":276,"line_end":276,"column_start":26,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":86873,"byte_end":86879,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87123,"byte_end":87129,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87366,"byte_end":87372,"line_start":306,"line_end":306,"column_start":27,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87615,"byte_end":87621,"line_start":316,"line_end":316,"column_start":26,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":87864,"byte_end":87870,"line_start":326,"line_end":326,"column_start":27,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88114,"byte_end":88120,"line_start":336,"line_end":336,"column_start":27,"column_end":33},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88371,"byte_end":88377,"line_start":346,"line_end":346,"column_start":27,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":88822,"byte_end":88828,"line_start":362,"line_end":362,"column_start":29,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":89275,"byte_end":89281,"line_start":378,"line_end":378,"column_start":27,"column_end":33},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/number.rs","byte_start":89532,"byte_end":89538,"line_start":388,"line_end":388,"column_start":27,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101305,"byte_end":101308,"line_start":52,"line_end":52,"column_start":18,"column_end":21},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4391},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":101427,"byte_end":101432,"line_start":60,"line_end":60,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":431}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":103655,"byte_end":103679,"line_start":183,"line_end":183,"column_start":6,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104065,"byte_end":104088,"line_start":200,"line_end":200,"column_start":6,"column_end":29},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104762,"byte_end":104775,"line_start":226,"line_end":226,"column_start":11,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":104956,"byte_end":104969,"line_start":233,"line_end":233,"column_start":21,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":442},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105181,"byte_end":105194,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":442},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105588,"byte_end":105606,"line_start":257,"line_end":257,"column_start":15,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":105830,"byte_end":105848,"line_start":265,"line_end":265,"column_start":19,"column_end":37},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":106436,"byte_end":106454,"line_start":285,"line_end":285,"column_start":28,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":107968,"byte_end":107985,"line_start":332,"line_end":332,"column_start":25,"column_end":42},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":108488,"byte_end":108505,"line_start":351,"line_end":351,"column_start":34,"column_end":51},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":109438,"byte_end":109462,"line_start":384,"line_end":384,"column_start":6,"column_end":30},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":109559,"byte_end":109586,"line_start":391,"line_end":391,"column_start":6,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":112450,"byte_end":112465,"line_start":453,"line_end":453,"column_start":12,"column_end":27},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113515,"byte_end":113524,"line_start":487,"line_end":487,"column_start":22,"column_end":31},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113740,"byte_end":113744,"line_start":497,"line_end":497,"column_start":22,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":113950,"byte_end":113956,"line_start":507,"line_end":507,"column_start":22,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7078},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":114201,"byte_end":114210,"line_start":519,"line_end":519,"column_start":22,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":115102,"byte_end":115108,"line_start":558,"line_end":558,"column_start":22,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":5,"index":4479},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":117301,"byte_end":117307,"line_start":664,"line_end":664,"column_start":22,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":117712,"byte_end":117718,"line_start":678,"line_end":678,"column_start":40,"column_end":46},"kind":{"Impl":{"id":249}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":118096,"byte_end":118107,"line_start":692,"line_end":692,"column_start":40,"column_end":51},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":7230},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":119062,"byte_end":119065,"line_start":726,"line_end":726,"column_start":40,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":3829},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":119970,"byte_end":119978,"line_start":753,"line_end":753,"column_start":57,"column_end":65},"kind":{"Impl":{"id":255}},"from":{"krate":5,"index":997},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":120306,"byte_end":120313,"line_start":763,"line_end":763,"column_start":69,"column_end":76},"kind":{"Impl":{"id":257}},"from":{"krate":1,"index":6252},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":120605,"byte_end":120610,"line_start":773,"line_end":773,"column_start":22,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":122273,"byte_end":122280,"line_start":823,"line_end":823,"column_start":45,"column_end":52},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":633},"to":{"krate":0,"index":431}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/serialization.rs","byte_start":128619,"byte_end":128634,"line_start":984,"line_end":984,"column_start":22,"column_end":37},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157521,"byte_end":157529,"line_start":14,"line_end":14,"column_start":28,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":614},"to":{"krate":0,"index":619}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/callfn.rs","byte_start":157625,"byte_end":157632,"line_start":18,"line_end":18,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":619},"to":{"krate":0,"index":622}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159722,"byte_end":159729,"line_start":14,"line_end":14,"column_start":14,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159881,"byte_end":159886,"line_start":23,"line_end":23,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":643}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":159977,"byte_end":159978,"line_start":27,"line_end":27,"column_start":35,"column_end":36},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":648},"to":{"krate":0,"index":643}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160116,"byte_end":160123,"line_start":34,"line_end":34,"column_start":24,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160262,"byte_end":160269,"line_start":43,"line_end":43,"column_start":27,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160404,"byte_end":160411,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":1542}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160453,"byte_end":160460,"line_start":51,"line_end":51,"column_start":31,"column_end":38},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160601,"byte_end":160608,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2211}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160717,"byte_end":160724,"line_start":65,"line_end":65,"column_start":29,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2214}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/newtype.rs","byte_start":160857,"byte_end":160864,"line_start":72,"line_end":72,"column_start":41,"column_end":48},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161164,"byte_end":161169,"line_start":4,"line_end":4,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161527,"byte_end":161532,"line_start":15,"line_end":15,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/try_from.rs","byte_start":161733,"byte_end":161734,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":688},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":162318,"byte_end":162324,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163532,"byte_end":163540,"line_start":49,"line_end":49,"column_start":25,"column_end":33},"kind":{"Impl":{"id":283}},"from":{"krate":5,"index":997},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163706,"byte_end":163714,"line_start":55,"line_end":55,"column_start":35,"column_end":43},"kind":{"Impl":{"id":284}},"from":{"krate":5,"index":997},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":163888,"byte_end":163896,"line_start":61,"line_end":61,"column_start":39,"column_end":47},"kind":{"Impl":{"id":285}},"from":{"krate":5,"index":997},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164060,"byte_end":164067,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"kind":{"Impl":{"id":286}},"from":{"krate":1,"index":6252},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164233,"byte_end":164240,"line_start":73,"line_end":73,"column_start":35,"column_end":42},"kind":{"Impl":{"id":287}},"from":{"krate":1,"index":6252},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164414,"byte_end":164421,"line_start":79,"line_end":79,"column_start":39,"column_end":46},"kind":{"Impl":{"id":288}},"from":{"krate":1,"index":6252},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164630,"byte_end":164636,"line_start":85,"line_end":85,"column_start":70,"column_end":76},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":164785,"byte_end":164791,"line_start":92,"line_end":92,"column_start":51,"column_end":57},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165210,"byte_end":165216,"line_start":107,"line_end":107,"column_start":55,"column_end":61},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165445,"byte_end":165451,"line_start":115,"line_end":115,"column_start":42,"column_end":48},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":165648,"byte_end":165654,"line_start":122,"line_end":122,"column_start":50,"column_end":56},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166094,"byte_end":166100,"line_start":137,"line_end":137,"column_start":65,"column_end":71},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166376,"byte_end":166384,"line_start":146,"line_end":146,"column_start":90,"column_end":98},"kind":{"Impl":{"id":295}},"from":{"krate":5,"index":997},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/object.rs","byte_start":166928,"byte_end":166935,"line_start":160,"line_end":160,"column_start":90,"column_end":97},"kind":{"Impl":{"id":296}},"from":{"krate":1,"index":6252},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168320,"byte_end":168325,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":7008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168538,"byte_end":168541,"line_start":19,"line_end":19,"column_start":24,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":5,"index":3829},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168694,"byte_end":168697,"line_start":25,"line_end":25,"column_start":34,"column_end":37},"kind":{"Impl":{"id":308}},"from":{"krate":5,"index":3829},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":168858,"byte_end":168861,"line_start":31,"line_end":31,"column_start":38,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":5,"index":3829},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169020,"byte_end":169025,"line_start":37,"line_end":37,"column_start":32,"column_end":37},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169207,"byte_end":169212,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169402,"byte_end":169407,"line_start":53,"line_end":53,"column_start":44,"column_end":49},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169592,"byte_end":169597,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":169969,"byte_end":169974,"line_start":76,"line_end":76,"column_start":39,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":170215,"byte_end":170218,"line_start":84,"line_end":84,"column_start":97,"column_end":100},"kind":{"Impl":{"id":315}},"from":{"krate":5,"index":3829},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/array.rs","byte_start":171009,"byte_end":171012,"line_start":106,"line_end":106,"column_start":89,"column_end":92},"kind":{"Impl":{"id":316}},"from":{"krate":5,"index":3829},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171352,"byte_end":171358,"line_start":8,"line_end":8,"column_start":16,"column_end":22},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171651,"byte_end":171657,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":171922,"byte_end":171928,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/symbol.rs","byte_start":172097,"byte_end":172102,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173490,"byte_end":173506,"line_start":27,"line_end":27,"column_start":30,"column_end":46},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/unsafe_typed_array.rs","byte_start":173685,"byte_end":173701,"line_start":34,"line_end":34,"column_start":15,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/mutfn.rs","byte_start":174593,"byte_end":174596,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/once.rs","byte_start":175436,"byte_end":175440,"line_start":25,"line_end":25,"column_start":26,"column_end":30},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/instance_of.rs","byte_start":175901,"byte_end":175910,"line_start":9,"line_end":9,"column_start":21,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176200,"byte_end":176205,"line_start":6,"line_end":6,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2211},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176221,"byte_end":176231,"line_start":6,"line_end":6,"column_start":47,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":883},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176234,"byte_end":176241,"line_start":6,"line_end":6,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":679},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/reference_type.rs","byte_start":176253,"byte_end":176260,"line_start":6,"line_end":6,"column_start":79,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":679},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":177445,"byte_end":177455,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7098},"to":{"krate":22,"index":7}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":178197,"byte_end":178204,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":7109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":187880,"byte_end":187892,"line_start":310,"line_end":310,"column_start":14,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":7184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/promise.rs","byte_start":188498,"byte_end":188505,"line_start":330,"line_end":330,"column_start":47,"column_end":54},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7109},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":189964,"byte_end":189977,"line_start":30,"line_end":30,"column_start":20,"column_end":33},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190830,"byte_end":190843,"line_start":49,"line_end":49,"column_start":30,"column_end":43},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7213},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/discard.rs","byte_start":190986,"byte_end":190999,"line_start":58,"line_end":58,"column_start":33,"column_end":46},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7213},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":193602,"byte_end":193615,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":195965,"byte_end":195982,"line_start":109,"line_end":109,"column_start":6,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/global_arena.rs","byte_start":196240,"byte_end":196257,"line_start":122,"line_end":122,"column_start":15,"column_end":32},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7225},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198590,"byte_end":198601,"line_start":9,"line_end":9,"column_start":35,"column_end":46},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7230},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":198799,"byte_end":198810,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/optional_arg.rs","byte_start":199074,"byte_end":199085,"line_start":27,"line_end":27,"column_start":41,"column_end":52},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7230},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":199849,"byte_end":199853,"line_start":9,"line_end":9,"column_start":21,"column_end":25},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":199985,"byte_end":199989,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webcore/void.rs","byte_start":200121,"byte_end":200125,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/date.rs","byte_start":202859,"byte_end":202863,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236866,"byte_end":236874,"line_start":32,"line_end":32,"column_start":23,"column_end":31},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7553},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236899,"byte_end":236907,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7553},"to":{"krate":0,"index":2601}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236926,"byte_end":236934,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7553},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":236970,"byte_end":236978,"line_start":36,"line_end":36,"column_start":32,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7553},"to":{"krate":0,"index":2607}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document.rs","byte_start":237244,"byte_end":237252,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":247276,"byte_end":247303,"line_start":16,"line_end":16,"column_start":6,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248044,"byte_end":248050,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7784},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248079,"byte_end":248085,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7784},"to":{"krate":0,"index":1620}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window.rs","byte_start":248339,"byte_end":248345,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":258444,"byte_end":258457,"line_start":16,"line_end":16,"column_start":19,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":264864,"byte_end":264870,"line_start":195,"line_end":195,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":1174}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":265418,"byte_end":265423,"line_start":211,"line_end":211,"column_start":17,"column_end":22},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":8020},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266073,"byte_end":266090,"line_start":224,"line_end":224,"column_start":17,"column_end":34},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8080},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":266567,"byte_end":266578,"line_start":237,"line_end":237,"column_start":17,"column_end":28},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8142},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267045,"byte_end":267066,"line_start":248,"line_end":248,"column_start":17,"column_end":38},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":8204},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":267290,"byte_end":267296,"line_start":254,"line_end":254,"column_start":21,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268443,"byte_end":268450,"line_start":288,"line_end":288,"column_start":17,"column_end":24},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8276},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event.rs","byte_start":268472,"byte_end":268479,"line_start":289,"line_end":289,"column_start":19,"column_end":26},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8276},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":270126,"byte_end":270145,"line_start":17,"line_end":17,"column_start":21,"column_end":40},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":1195},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":270353,"byte_end":270372,"line_start":23,"line_end":23,"column_start":6,"column_end":25},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":271227,"byte_end":271240,"line_start":43,"line_end":43,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/event_target.rs","byte_start":273002,"byte_end":273013,"line_start":87,"line_end":87,"column_start":23,"column_end":34},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8357},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":274009,"byte_end":274021,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1203},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287169,"byte_end":287173,"line_start":363,"line_end":363,"column_start":23,"column_end":27},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8642},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287192,"byte_end":287196,"line_start":364,"line_end":364,"column_start":16,"column_end":20},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8642},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node.rs","byte_start":287206,"byte_end":287210,"line_start":366,"line_end":366,"column_start":6,"column_end":10},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303450,"byte_end":303455,"line_start":26,"line_end":26,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":1227},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303458,"byte_end":303469,"line_start":26,"line_end":26,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2601},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303472,"byte_end":303482,"line_start":26,"line_end":26,"column_start":43,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":2634},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":303485,"byte_end":303494,"line_start":26,"line_end":26,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":0,"index":2710},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315618,"byte_end":315625,"line_start":298,"line_end":298,"column_start":23,"column_end":30},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8977},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315644,"byte_end":315651,"line_start":299,"line_end":299,"column_start":16,"column_end":23},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8977},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315673,"byte_end":315680,"line_start":300,"line_end":300,"column_start":19,"column_end":26},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8977},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315721,"byte_end":315722,"line_start":302,"line_end":302,"column_start":37,"column_end":38},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":1329},"to":{"krate":0,"index":2601}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315761,"byte_end":315762,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":1331},"to":{"krate":0,"index":2634}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":315800,"byte_end":315801,"line_start":304,"line_end":304,"column_start":35,"column_end":36},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":1333},"to":{"krate":0,"index":2710}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/element.rs","byte_start":316344,"byte_end":316358,"line_start":324,"line_end":324,"column_start":6,"column_end":20},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":9049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":320089,"byte_end":320093,"line_start":15,"line_end":15,"column_start":6,"column_end":10},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":9090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":323318,"byte_end":323326,"line_start":94,"line_end":94,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1300},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326942,"byte_end":326953,"line_start":181,"line_end":181,"column_start":23,"column_end":34},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":9218},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":326972,"byte_end":326983,"line_start":182,"line_end":182,"column_start":16,"column_end":27},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":9218},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":327005,"byte_end":327016,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":9218},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_element.rs","byte_start":327042,"byte_end":327053,"line_start":184,"line_end":184,"column_start":23,"column_end":34},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":9218},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329064,"byte_end":329077,"line_start":22,"line_end":22,"column_start":23,"column_end":36},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":9296},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329096,"byte_end":329109,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":9296},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329131,"byte_end":329144,"line_start":24,"line_end":24,"column_start":19,"column_end":32},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9296},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329170,"byte_end":329183,"line_start":25,"line_end":25,"column_start":23,"column_end":36},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":9296},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/canvas.rs","byte_start":329193,"byte_end":329206,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":9296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333918,"byte_end":333930,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9410},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333949,"byte_end":333961,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9410},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":333983,"byte_end":333995,"line_start":21,"line_end":21,"column_start":19,"column_end":31},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":9410},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334021,"byte_end":334033,"line_start":22,"line_end":22,"column_start":23,"column_end":35},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":9410},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/image.rs","byte_start":334043,"byte_end":334055,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":9410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345122,"byte_end":345134,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":9589},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345153,"byte_end":345165,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":9589},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345187,"byte_end":345199,"line_start":21,"line_end":21,"column_start":19,"column_end":31},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":9589},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345225,"byte_end":345237,"line_start":22,"line_end":22,"column_start":23,"column_end":35},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":9589},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/input.rs","byte_start":345247,"byte_end":345259,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":9589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348269,"byte_end":348284,"line_start":17,"line_end":17,"column_start":23,"column_end":38},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":9725},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348303,"byte_end":348318,"line_start":18,"line_end":18,"column_start":16,"column_end":31},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9725},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348340,"byte_end":348355,"line_start":19,"line_end":19,"column_start":19,"column_end":34},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9725},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348381,"byte_end":348396,"line_start":20,"line_end":20,"column_start":23,"column_end":38},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9725},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/textarea.rs","byte_start":348406,"byte_end":348421,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":349511,"byte_end":349528,"line_start":15,"line_end":15,"column_start":28,"column_end":45},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":9819},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":349732,"byte_end":349749,"line_start":21,"line_end":21,"column_start":28,"column_end":45},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":9819},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350323,"byte_end":350336,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9833},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350355,"byte_end":350368,"line_start":37,"line_end":37,"column_start":16,"column_end":29},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9833},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350390,"byte_end":350403,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9833},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350429,"byte_end":350442,"line_start":39,"line_end":39,"column_start":23,"column_end":36},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":9833},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/select.rs","byte_start":350452,"byte_end":350465,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":9833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358321,"byte_end":358334,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":9952},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358353,"byte_end":358366,"line_start":19,"line_end":19,"column_start":16,"column_end":29},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":9952},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358388,"byte_end":358401,"line_start":20,"line_end":20,"column_start":19,"column_end":32},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":9952},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358427,"byte_end":358440,"line_start":21,"line_end":21,"column_start":23,"column_end":36},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":9952},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/option.rs","byte_start":358450,"byte_end":358463,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":9952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360135,"byte_end":360150,"line_start":20,"line_end":20,"column_start":23,"column_end":38},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10046},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360169,"byte_end":360184,"line_start":21,"line_end":21,"column_start":16,"column_end":31},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10046},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360206,"byte_end":360221,"line_start":22,"line_end":22,"column_start":19,"column_end":34},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":10046},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360247,"byte_end":360262,"line_start":23,"line_end":23,"column_start":23,"column_end":38},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":10046},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/template.rs","byte_start":360272,"byte_end":360287,"line_start":25,"line_end":25,"column_start":6,"column_end":21},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":10046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":362254,"byte_end":362269,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":10135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363034,"byte_end":363045,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":10151},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363064,"byte_end":363075,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":10151},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363097,"byte_end":363108,"line_start":42,"line_end":42,"column_start":19,"column_end":30},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":10151},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363134,"byte_end":363145,"line_start":43,"line_end":43,"column_start":23,"column_end":34},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":10151},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_elements/slot.rs","byte_start":363155,"byte_end":363166,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":10151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":368417,"byte_end":368430,"line_start":21,"line_end":21,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":1620}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/window_or_worker.rs","byte_start":369919,"byte_end":369932,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":10265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/token_list.rs","byte_start":370814,"byte_end":370823,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":10275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372868,"byte_end":372884,"line_start":15,"line_end":15,"column_start":23,"column_end":39},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":10355},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372903,"byte_end":372919,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":10355},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/document_fragment.rs","byte_start":372944,"byte_end":372960,"line_start":17,"line_end":17,"column_start":22,"column_end":38},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":10355},"to":{"krate":0,"index":2601}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373770,"byte_end":373778,"line_start":20,"line_end":20,"column_start":23,"column_end":31},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373797,"byte_end":373805,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/text_node.rs","byte_start":373828,"byte_end":373836,"line_start":22,"line_end":22,"column_start":20,"column_end":28},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":2710}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":374994,"byte_end":375002,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":10499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":375902,"byte_end":375910,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":10499},"to":{"krate":2,"index":3883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/node_list.rs","byte_start":376449,"byte_end":376457,"line_start":84,"line_end":84,"column_start":19,"column_end":27},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":10569},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/string_map.rs","byte_start":377438,"byte_end":377447,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":10579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/location.rs","byte_start":379411,"byte_end":379419,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/storage.rs","byte_start":384203,"byte_end":384210,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":10908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":387876,"byte_end":387889,"line_start":37,"line_end":37,"column_start":18,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":1729}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389846,"byte_end":389850,"line_start":91,"line_end":91,"column_start":16,"column_end":20},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":11018},"to":{"krate":0,"index":1729}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/blob.rs","byte_start":389860,"byte_end":389864,"line_start":93,"line_end":93,"column_start":6,"column_end":10},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":11018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390680,"byte_end":390684,"line_start":15,"line_end":15,"column_start":16,"column_end":20},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":11083},"to":{"krate":0,"index":1729}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file.rs","byte_start":390694,"byte_end":390698,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":11083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":391723,"byte_end":391731,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":11154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392266,"byte_end":392274,"line_start":34,"line_end":34,"column_start":23,"column_end":31},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":11154},"to":{"krate":2,"index":3883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_list.rs","byte_start":392813,"byte_end":392821,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":11219},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394060,"byte_end":394070,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":11229},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/file_reader.rs","byte_start":394979,"byte_end":394989,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":11229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":398882,"byte_end":398893,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":11354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399711,"byte_end":399714,"line_start":36,"line_end":36,"column_start":30,"column_end":33},"kind":{"Impl":{"id":848}},"from":{"krate":5,"index":3829},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/array_buffer.rs","byte_start":399902,"byte_end":399905,"line_start":43,"line_end":43,"column_start":40,"column_end":43},"kind":{"Impl":{"id":849}},"from":{"krate":5,"index":3829},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":400273,"byte_end":400278,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":403693,"byte_end":403703,"line_start":98,"line_end":98,"column_start":37,"column_end":47},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":11680},"to":{"krate":0,"index":883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":404252,"byte_end":404262,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":11680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405202,"byte_end":405212,"line_start":135,"line_end":135,"column_start":46,"column_end":56},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":11680},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405351,"byte_end":405361,"line_start":141,"line_end":141,"column_start":46,"column_end":56},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":11680},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/typed_array.rs","byte_start":405533,"byte_end":405543,"line_start":147,"line_end":147,"column_start":54,"column_end":64},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":11680},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411593,"byte_end":411607,"line_start":59,"line_end":59,"column_start":23,"column_end":37},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":11762},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/xml_http_request.rs","byte_start":411843,"byte_end":411857,"line_start":71,"line_end":71,"column_start":6,"column_end":20},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":11762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/history.rs","byte_start":419563,"byte_end":419570,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":11979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":427573,"byte_end":427582,"line_start":73,"line_end":73,"column_start":23,"column_end":32},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":12111},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":428330,"byte_end":428346,"line_start":89,"line_end":89,"column_start":6,"column_end":22},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":12177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429206,"byte_end":429222,"line_start":118,"line_end":118,"column_start":25,"column_end":41},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":12200},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/web_socket.rs","byte_start":429704,"byte_end":429713,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":12111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450089,"byte_end":450100,"line_start":260,"line_end":260,"column_start":25,"column_end":36},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":12757},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450752,"byte_end":450760,"line_start":278,"line_end":278,"column_start":18,"column_end":26},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":12741},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450834,"byte_end":450844,"line_start":282,"line_end":282,"column_start":18,"column_end":28},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":12814},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":450930,"byte_end":450954,"line_start":286,"line_end":286,"column_start":27,"column_end":51},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":12391},"to":{"krate":0,"index":1948}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":451164,"byte_end":451178,"line_start":295,"line_end":295,"column_start":6,"column_end":20},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":12451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":451825,"byte_end":451834,"line_start":310,"line_end":310,"column_start":6,"column_end":15},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":12571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":453145,"byte_end":453169,"line_start":347,"line_end":347,"column_start":6,"column_end":30},"kind":{"Impl":{"id":960}},"from":{"krate":0,"index":12391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/rendering_context.rs","byte_start":504230,"byte_end":504241,"line_start":1391,"line_end":1391,"column_start":6,"column_end":17},"kind":{"Impl":{"id":961}},"from":{"krate":0,"index":12624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":508090,"byte_end":508106,"line_start":55,"line_end":55,"column_start":6,"column_end":22},"kind":{"Impl":{"id":971}},"from":{"krate":0,"index":13515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":513465,"byte_end":513487,"line_start":171,"line_end":171,"column_start":26,"column_end":48},"kind":{"Impl":{"id":972}},"from":{"krate":0,"index":13615},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":513637,"byte_end":513659,"line_start":180,"line_end":180,"column_start":15,"column_end":37},"kind":{"Impl":{"id":973}},"from":{"krate":0,"index":13615},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/mutation_observer.rs","byte_start":515651,"byte_end":515665,"line_start":244,"line_end":244,"column_start":27,"column_end":41},"kind":{"Impl":{"id":974}},"from":{"krate":0,"index":13625},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":518400,"byte_end":518413,"line_start":10,"line_end":10,"column_start":19,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":519661,"byte_end":519666,"line_start":43,"line_end":43,"column_start":6,"column_end":11},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":13704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520013,"byte_end":520018,"line_start":53,"line_end":53,"column_start":17,"column_end":22},"kind":{"Impl":{"id":985}},"from":{"krate":0,"index":13704},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/error.rs","byte_start":520449,"byte_end":520458,"line_start":64,"line_end":64,"column_start":17,"column_end":26},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":13773},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":521764,"byte_end":521769,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":13836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/touch.rs","byte_start":528506,"byte_end":528515,"line_start":194,"line_end":194,"column_start":25,"column_end":34},"kind":{"Impl":{"id":1008}},"from":{"krate":0,"index":13971},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529249,"byte_end":529255,"line_start":9,"line_end":9,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2084},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529644,"byte_end":529656,"line_start":20,"line_end":20,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1020}},"from":{"krate":0,"index":13987},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":529683,"byte_end":529695,"line_start":21,"line_end":21,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1021}},"from":{"krate":0,"index":13987},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530029,"byte_end":530050,"line_start":31,"line_end":31,"column_start":17,"column_end":38},"kind":{"Impl":{"id":1034}},"from":{"krate":0,"index":14057},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530077,"byte_end":530098,"line_start":32,"line_end":32,"column_start":24,"column_end":45},"kind":{"Impl":{"id":1035}},"from":{"krate":0,"index":14057},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530476,"byte_end":530494,"line_start":42,"line_end":42,"column_start":17,"column_end":35},"kind":{"Impl":{"id":1048}},"from":{"krate":0,"index":14133},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530521,"byte_end":530539,"line_start":43,"line_end":43,"column_start":24,"column_end":42},"kind":{"Impl":{"id":1049}},"from":{"krate":0,"index":14133},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530906,"byte_end":530932,"line_start":53,"line_end":53,"column_start":17,"column_end":43},"kind":{"Impl":{"id":1062}},"from":{"krate":0,"index":14209},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":530959,"byte_end":530985,"line_start":54,"line_end":54,"column_start":24,"column_end":50},"kind":{"Impl":{"id":1063}},"from":{"krate":0,"index":14209},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531348,"byte_end":531361,"line_start":64,"line_end":64,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1076}},"from":{"krate":0,"index":14285},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531388,"byte_end":531401,"line_start":65,"line_end":65,"column_start":24,"column_end":37},"kind":{"Impl":{"id":1077}},"from":{"krate":0,"index":14285},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531737,"byte_end":531750,"line_start":75,"line_end":75,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1090}},"from":{"krate":0,"index":14361},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":531777,"byte_end":531790,"line_start":76,"line_end":76,"column_start":24,"column_end":37},"kind":{"Impl":{"id":1091}},"from":{"krate":0,"index":14361},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532134,"byte_end":532145,"line_start":86,"line_end":86,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1104}},"from":{"krate":0,"index":14437},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532172,"byte_end":532183,"line_start":87,"line_end":87,"column_start":24,"column_end":35},"kind":{"Impl":{"id":1105}},"from":{"krate":0,"index":14437},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532494,"byte_end":532508,"line_start":97,"line_end":97,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1118}},"from":{"krate":0,"index":14513},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532535,"byte_end":532549,"line_start":98,"line_end":98,"column_start":24,"column_end":38},"kind":{"Impl":{"id":1119}},"from":{"krate":0,"index":14513},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532877,"byte_end":532894,"line_start":108,"line_end":108,"column_start":17,"column_end":34},"kind":{"Impl":{"id":1132}},"from":{"krate":0,"index":14582},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":532921,"byte_end":532938,"line_start":109,"line_end":109,"column_start":24,"column_end":41},"kind":{"Impl":{"id":1133}},"from":{"krate":0,"index":14582},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533364,"byte_end":533381,"line_start":119,"line_end":119,"column_start":17,"column_end":34},"kind":{"Impl":{"id":1146}},"from":{"krate":0,"index":14651},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533408,"byte_end":533425,"line_start":120,"line_end":120,"column_start":24,"column_end":41},"kind":{"Impl":{"id":1147}},"from":{"krate":0,"index":14651},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533800,"byte_end":533821,"line_start":130,"line_end":130,"column_start":17,"column_end":38},"kind":{"Impl":{"id":1160}},"from":{"krate":0,"index":14720},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":533848,"byte_end":533869,"line_start":131,"line_end":131,"column_start":24,"column_end":45},"kind":{"Impl":{"id":1161}},"from":{"krate":0,"index":14720},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534272,"byte_end":534288,"line_start":141,"line_end":141,"column_start":17,"column_end":33},"kind":{"Impl":{"id":1174}},"from":{"krate":0,"index":14789},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534315,"byte_end":534331,"line_start":142,"line_end":142,"column_start":24,"column_end":40},"kind":{"Impl":{"id":1175}},"from":{"krate":0,"index":14789},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534652,"byte_end":534662,"line_start":152,"line_end":152,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1188}},"from":{"krate":0,"index":14858},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":534689,"byte_end":534699,"line_start":153,"line_end":153,"column_start":24,"column_end":34},"kind":{"Impl":{"id":1189}},"from":{"krate":0,"index":14858},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":535032,"byte_end":535046,"line_start":163,"line_end":163,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1202}},"from":{"krate":0,"index":14927},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/dom_exception.rs","byte_start":535073,"byte_end":535087,"line_start":164,"line_end":164,"column_start":24,"column_end":38},"kind":{"Impl":{"id":1203}},"from":{"krate":0,"index":14927},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":536821,"byte_end":536832,"line_start":17,"line_end":17,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1216}},"from":{"krate":0,"index":14996},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":537618,"byte_end":537628,"line_start":35,"line_end":35,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1229}},"from":{"krate":0,"index":15064},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538086,"byte_end":538103,"line_start":47,"line_end":47,"column_start":17,"column_end":34},"kind":{"Impl":{"id":1244}},"from":{"krate":0,"index":15132},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538125,"byte_end":538142,"line_start":48,"line_end":48,"column_start":19,"column_end":36},"kind":{"Impl":{"id":1245}},"from":{"krate":0,"index":15132},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538598,"byte_end":538616,"line_start":60,"line_end":60,"column_start":17,"column_end":35},"kind":{"Impl":{"id":1260}},"from":{"krate":0,"index":15206},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":538638,"byte_end":538656,"line_start":61,"line_end":61,"column_start":19,"column_end":37},"kind":{"Impl":{"id":1261}},"from":{"krate":0,"index":15206},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539170,"byte_end":539188,"line_start":74,"line_end":74,"column_start":17,"column_end":35},"kind":{"Impl":{"id":1276}},"from":{"krate":0,"index":15280},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539210,"byte_end":539228,"line_start":75,"line_end":75,"column_start":19,"column_end":37},"kind":{"Impl":{"id":1277}},"from":{"krate":0,"index":15280},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":539762,"byte_end":539773,"line_start":89,"line_end":89,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1290}},"from":{"krate":0,"index":15354},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540225,"byte_end":540236,"line_start":101,"line_end":101,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1303}},"from":{"krate":0,"index":15422},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":540720,"byte_end":540741,"line_start":113,"line_end":113,"column_start":17,"column_end":38},"kind":{"Impl":{"id":1316}},"from":{"krate":0,"index":15490},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541144,"byte_end":541155,"line_start":125,"line_end":125,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1329}},"from":{"krate":0,"index":15558},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/dom.rs","byte_start":541667,"byte_end":541687,"line_start":138,"line_end":138,"column_start":17,"column_end":37},"kind":{"Impl":{"id":1342}},"from":{"krate":0,"index":15626},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":544896,"byte_end":544907,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":2355},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545852,"byte_end":545868,"line_start":45,"line_end":45,"column_start":17,"column_end":33},"kind":{"Impl":{"id":1358}},"from":{"krate":0,"index":15699},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545891,"byte_end":545907,"line_start":47,"line_end":47,"column_start":19,"column_end":35},"kind":{"Impl":{"id":1359}},"from":{"krate":0,"index":15699},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545933,"byte_end":545949,"line_start":49,"line_end":49,"column_start":22,"column_end":38},"kind":{"Impl":{"id":1360}},"from":{"krate":0,"index":15699},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":545974,"byte_end":545990,"line_start":51,"line_end":51,"column_start":21,"column_end":37},"kind":{"Impl":{"id":1361}},"from":{"krate":0,"index":15699},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546517,"byte_end":546526,"line_start":64,"line_end":64,"column_start":17,"column_end":26},"kind":{"Impl":{"id":1380}},"from":{"krate":0,"index":15777},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546549,"byte_end":546558,"line_start":66,"line_end":66,"column_start":19,"column_end":28},"kind":{"Impl":{"id":1381}},"from":{"krate":0,"index":15777},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546584,"byte_end":546593,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1382}},"from":{"krate":0,"index":15777},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":546618,"byte_end":546627,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"kind":{"Impl":{"id":1383}},"from":{"krate":0,"index":15777},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547142,"byte_end":547156,"line_start":82,"line_end":82,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1402}},"from":{"krate":0,"index":15863},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547179,"byte_end":547193,"line_start":84,"line_end":84,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1403}},"from":{"krate":0,"index":15863},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547219,"byte_end":547233,"line_start":86,"line_end":86,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1404}},"from":{"krate":0,"index":15863},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547258,"byte_end":547272,"line_start":88,"line_end":88,"column_start":21,"column_end":35},"kind":{"Impl":{"id":1405}},"from":{"krate":0,"index":15863},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547796,"byte_end":547810,"line_start":100,"line_end":100,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1424}},"from":{"krate":0,"index":15949},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547833,"byte_end":547847,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1425}},"from":{"krate":0,"index":15949},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547873,"byte_end":547887,"line_start":104,"line_end":104,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1426}},"from":{"krate":0,"index":15949},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":547912,"byte_end":547926,"line_start":106,"line_end":106,"column_start":21,"column_end":35},"kind":{"Impl":{"id":1427}},"from":{"krate":0,"index":15949},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548458,"byte_end":548471,"line_start":119,"line_end":119,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1446}},"from":{"krate":0,"index":16035},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548494,"byte_end":548507,"line_start":121,"line_end":121,"column_start":19,"column_end":32},"kind":{"Impl":{"id":1447}},"from":{"krate":0,"index":16035},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548533,"byte_end":548546,"line_start":123,"line_end":123,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1448}},"from":{"krate":0,"index":16035},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":548571,"byte_end":548584,"line_start":125,"line_end":125,"column_start":21,"column_end":34},"kind":{"Impl":{"id":1449}},"from":{"krate":0,"index":16035},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549108,"byte_end":549122,"line_start":137,"line_end":137,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1468}},"from":{"krate":0,"index":16121},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549145,"byte_end":549159,"line_start":139,"line_end":139,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1469}},"from":{"krate":0,"index":16121},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549185,"byte_end":549199,"line_start":141,"line_end":141,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1470}},"from":{"krate":0,"index":16121},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549224,"byte_end":549238,"line_start":143,"line_end":143,"column_start":21,"column_end":35},"kind":{"Impl":{"id":1471}},"from":{"krate":0,"index":16121},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549802,"byte_end":549815,"line_start":156,"line_end":156,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1490}},"from":{"krate":0,"index":16207},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549838,"byte_end":549851,"line_start":158,"line_end":158,"column_start":19,"column_end":32},"kind":{"Impl":{"id":1491}},"from":{"krate":0,"index":16207},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549877,"byte_end":549890,"line_start":160,"line_end":160,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1492}},"from":{"krate":0,"index":16207},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":549915,"byte_end":549928,"line_start":162,"line_end":162,"column_start":21,"column_end":34},"kind":{"Impl":{"id":1493}},"from":{"krate":0,"index":16207},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550431,"byte_end":550444,"line_start":174,"line_end":174,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1512}},"from":{"krate":0,"index":16293},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550467,"byte_end":550480,"line_start":176,"line_end":176,"column_start":19,"column_end":32},"kind":{"Impl":{"id":1513}},"from":{"krate":0,"index":16293},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550506,"byte_end":550519,"line_start":178,"line_end":178,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1514}},"from":{"krate":0,"index":16293},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":550544,"byte_end":550557,"line_start":180,"line_end":180,"column_start":21,"column_end":34},"kind":{"Impl":{"id":1515}},"from":{"krate":0,"index":16293},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551100,"byte_end":551112,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1534}},"from":{"krate":0,"index":16379},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551135,"byte_end":551147,"line_start":195,"line_end":195,"column_start":19,"column_end":31},"kind":{"Impl":{"id":1535}},"from":{"krate":0,"index":16379},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551173,"byte_end":551185,"line_start":197,"line_end":197,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1536}},"from":{"krate":0,"index":16379},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551210,"byte_end":551222,"line_start":199,"line_end":199,"column_start":21,"column_end":33},"kind":{"Impl":{"id":1537}},"from":{"krate":0,"index":16379},"to":{"krate":0,"index":2193}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":551792,"byte_end":551804,"line_start":212,"line_end":212,"column_start":6,"column_end":18},"kind":{"Impl":{"id":1547}},"from":{"krate":0,"index":16465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":560805,"byte_end":560825,"line_start":419,"line_end":419,"column_start":6,"column_end":26},"kind":{"Impl":{"id":1557}},"from":{"krate":0,"index":16635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":563789,"byte_end":563809,"line_start":491,"line_end":491,"column_start":23,"column_end":43},"kind":{"Impl":{"id":1558}},"from":{"krate":0,"index":16635},"to":{"krate":2,"index":3883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":564355,"byte_end":564375,"line_start":517,"line_end":517,"column_start":19,"column_end":39},"kind":{"Impl":{"id":1559}},"from":{"krate":0,"index":16757},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":565251,"byte_end":565267,"line_start":545,"line_end":545,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1569}},"from":{"krate":0,"index":16762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/drag.rs","byte_start":568618,"byte_end":568638,"line_start":631,"line_end":631,"column_start":6,"column_end":26},"kind":{"Impl":{"id":1570}},"from":{"krate":0,"index":16842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":573155,"byte_end":573161,"line_start":11,"line_end":11,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":2278}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574010,"byte_end":574027,"line_start":34,"line_end":34,"column_start":17,"column_end":34},"kind":{"Impl":{"id":1582}},"from":{"krate":0,"index":16879},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574052,"byte_end":574069,"line_start":35,"line_end":35,"column_start":22,"column_end":39},"kind":{"Impl":{"id":1583}},"from":{"krate":0,"index":16879},"to":{"krate":0,"index":2278}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574597,"byte_end":574607,"line_start":48,"line_end":48,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1598}},"from":{"krate":0,"index":16945},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":574632,"byte_end":574642,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1599}},"from":{"krate":0,"index":16945},"to":{"krate":0,"index":2278}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575162,"byte_end":575171,"line_start":62,"line_end":62,"column_start":17,"column_end":26},"kind":{"Impl":{"id":1614}},"from":{"krate":0,"index":17019},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/focus.rs","byte_start":575196,"byte_end":575205,"line_start":63,"line_end":63,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1615}},"from":{"krate":0,"index":17019},"to":{"krate":0,"index":2278}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576240,"byte_end":576246,"line_start":11,"line_end":11,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576904,"byte_end":576916,"line_start":32,"line_end":32,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1627}},"from":{"krate":0,"index":17098},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":576943,"byte_end":576955,"line_start":33,"line_end":33,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1628}},"from":{"krate":0,"index":17098},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577476,"byte_end":577497,"line_start":45,"line_end":45,"column_start":17,"column_end":38},"kind":{"Impl":{"id":1643}},"from":{"krate":0,"index":17164},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":577524,"byte_end":577545,"line_start":46,"line_end":46,"column_start":24,"column_end":45},"kind":{"Impl":{"id":1644}},"from":{"krate":0,"index":17164},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":578065,"byte_end":578089,"line_start":58,"line_end":58,"column_start":17,"column_end":41},"kind":{"Impl":{"id":1659}},"from":{"krate":0,"index":17238},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/gamepad.rs","byte_start":578116,"byte_end":578140,"line_start":59,"line_end":59,"column_start":24,"column_end":48},"kind":{"Impl":{"id":1660}},"from":{"krate":0,"index":17238},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579438,"byte_end":579453,"line_start":18,"line_end":18,"column_start":17,"column_end":32},"kind":{"Impl":{"id":1673}},"from":{"krate":0,"index":17312},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":579463,"byte_end":579478,"line_start":20,"line_end":20,"column_start":6,"column_end":21},"kind":{"Impl":{"id":1674}},"from":{"krate":0,"index":17312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":581599,"byte_end":581612,"line_start":67,"line_end":67,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1687}},"from":{"krate":0,"index":17390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/history.rs","byte_start":582070,"byte_end":582083,"line_start":83,"line_end":83,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1688}},"from":{"krate":0,"index":17390},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":585022,"byte_end":585028,"line_start":36,"line_end":36,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":2324}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590593,"byte_end":590606,"line_start":202,"line_end":202,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1700}},"from":{"krate":0,"index":17579},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":590634,"byte_end":590647,"line_start":203,"line_end":203,"column_start":25,"column_end":38},"kind":{"Impl":{"id":1701}},"from":{"krate":0,"index":17579},"to":{"krate":0,"index":2324}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591144,"byte_end":591157,"line_start":216,"line_end":216,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1716}},"from":{"krate":0,"index":17645},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591185,"byte_end":591198,"line_start":217,"line_end":217,"column_start":25,"column_end":38},"kind":{"Impl":{"id":1717}},"from":{"krate":0,"index":17645},"to":{"krate":0,"index":2324}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591745,"byte_end":591757,"line_start":231,"line_end":231,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1732}},"from":{"krate":0,"index":17719},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":591785,"byte_end":591797,"line_start":232,"line_end":232,"column_start":25,"column_end":37},"kind":{"Impl":{"id":1733}},"from":{"krate":0,"index":17719},"to":{"krate":0,"index":2324}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592224,"byte_end":592234,"line_start":244,"line_end":244,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1748}},"from":{"krate":0,"index":17793},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/keyboard.rs","byte_start":592262,"byte_end":592272,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"kind":{"Impl":{"id":1749}},"from":{"krate":0,"index":17793},"to":{"krate":0,"index":2324}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":594733,"byte_end":594741,"line_start":12,"line_end":12,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1180},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":602456,"byte_end":602473,"line_start":228,"line_end":228,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1750}},"from":{"krate":0,"index":17969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603369,"byte_end":603379,"line_start":251,"line_end":251,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1764}},"from":{"krate":0,"index":17984},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603401,"byte_end":603411,"line_start":252,"line_end":252,"column_start":19,"column_end":29},"kind":{"Impl":{"id":1765}},"from":{"krate":0,"index":17984},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603436,"byte_end":603446,"line_start":253,"line_end":253,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1766}},"from":{"krate":0,"index":17984},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603966,"byte_end":603976,"line_start":266,"line_end":266,"column_start":17,"column_end":27},"kind":{"Impl":{"id":1783}},"from":{"krate":0,"index":18056},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":603998,"byte_end":604008,"line_start":267,"line_end":267,"column_start":19,"column_end":29},"kind":{"Impl":{"id":1784}},"from":{"krate":0,"index":18056},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604033,"byte_end":604043,"line_start":268,"line_end":268,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1785}},"from":{"krate":0,"index":18056},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604594,"byte_end":604607,"line_start":281,"line_end":281,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1802}},"from":{"krate":0,"index":18136},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604629,"byte_end":604642,"line_start":282,"line_end":282,"column_start":19,"column_end":32},"kind":{"Impl":{"id":1803}},"from":{"krate":0,"index":18136},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":604667,"byte_end":604680,"line_start":283,"line_end":283,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1804}},"from":{"krate":0,"index":18136},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605246,"byte_end":605262,"line_start":296,"line_end":296,"column_start":17,"column_end":33},"kind":{"Impl":{"id":1821}},"from":{"krate":0,"index":18216},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605284,"byte_end":605300,"line_start":297,"line_end":297,"column_start":19,"column_end":35},"kind":{"Impl":{"id":1822}},"from":{"krate":0,"index":18216},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605325,"byte_end":605341,"line_start":298,"line_end":298,"column_start":22,"column_end":38},"kind":{"Impl":{"id":1823}},"from":{"krate":0,"index":18216},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605879,"byte_end":605895,"line_start":312,"line_end":312,"column_start":17,"column_end":33},"kind":{"Impl":{"id":1840}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605917,"byte_end":605933,"line_start":313,"line_end":313,"column_start":19,"column_end":35},"kind":{"Impl":{"id":1841}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":605958,"byte_end":605974,"line_start":314,"line_end":314,"column_start":22,"column_end":38},"kind":{"Impl":{"id":1842}},"from":{"krate":0,"index":18296},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606460,"byte_end":606474,"line_start":327,"line_end":327,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1859}},"from":{"krate":0,"index":18376},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606496,"byte_end":606510,"line_start":328,"line_end":328,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1860}},"from":{"krate":0,"index":18376},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":606535,"byte_end":606549,"line_start":329,"line_end":329,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1861}},"from":{"krate":0,"index":18376},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607028,"byte_end":607040,"line_start":342,"line_end":342,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1878}},"from":{"krate":0,"index":18456},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607062,"byte_end":607074,"line_start":343,"line_end":343,"column_start":19,"column_end":31},"kind":{"Impl":{"id":1879}},"from":{"krate":0,"index":18456},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607099,"byte_end":607111,"line_start":344,"line_end":344,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1880}},"from":{"krate":0,"index":18456},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607614,"byte_end":607628,"line_start":357,"line_end":357,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1897}},"from":{"krate":0,"index":18536},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607650,"byte_end":607664,"line_start":358,"line_end":358,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1898}},"from":{"krate":0,"index":18536},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":607689,"byte_end":607703,"line_start":359,"line_end":359,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1899}},"from":{"krate":0,"index":18536},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608260,"byte_end":608274,"line_start":372,"line_end":372,"column_start":17,"column_end":31},"kind":{"Impl":{"id":1916}},"from":{"krate":0,"index":18616},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608296,"byte_end":608310,"line_start":373,"line_end":373,"column_start":19,"column_end":33},"kind":{"Impl":{"id":1917}},"from":{"krate":0,"index":18616},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608335,"byte_end":608349,"line_start":374,"line_end":374,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1918}},"from":{"krate":0,"index":18616},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608899,"byte_end":608912,"line_start":387,"line_end":387,"column_start":17,"column_end":30},"kind":{"Impl":{"id":1935}},"from":{"krate":0,"index":18696},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608934,"byte_end":608947,"line_start":388,"line_end":388,"column_start":19,"column_end":32},"kind":{"Impl":{"id":1936}},"from":{"krate":0,"index":18696},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":608972,"byte_end":608985,"line_start":389,"line_end":389,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1937}},"from":{"krate":0,"index":18696},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609519,"byte_end":609534,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"kind":{"Impl":{"id":1954}},"from":{"krate":0,"index":18776},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609556,"byte_end":609571,"line_start":403,"line_end":403,"column_start":19,"column_end":34},"kind":{"Impl":{"id":1955}},"from":{"krate":0,"index":18776},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":609596,"byte_end":609611,"line_start":404,"line_end":404,"column_start":22,"column_end":37},"kind":{"Impl":{"id":1956}},"from":{"krate":0,"index":18776},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610152,"byte_end":610167,"line_start":417,"line_end":417,"column_start":17,"column_end":32},"kind":{"Impl":{"id":1973}},"from":{"krate":0,"index":18856},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610189,"byte_end":610204,"line_start":418,"line_end":418,"column_start":19,"column_end":34},"kind":{"Impl":{"id":1974}},"from":{"krate":0,"index":18856},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610229,"byte_end":610244,"line_start":419,"line_end":419,"column_start":22,"column_end":37},"kind":{"Impl":{"id":1975}},"from":{"krate":0,"index":18856},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610785,"byte_end":610800,"line_start":432,"line_end":432,"column_start":17,"column_end":32},"kind":{"Impl":{"id":1992}},"from":{"krate":0,"index":18936},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610822,"byte_end":610837,"line_start":433,"line_end":433,"column_start":19,"column_end":34},"kind":{"Impl":{"id":1993}},"from":{"krate":0,"index":18936},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610862,"byte_end":610877,"line_start":434,"line_end":434,"column_start":22,"column_end":37},"kind":{"Impl":{"id":1994}},"from":{"krate":0,"index":18936},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/mouse.rs","byte_start":610887,"byte_end":610902,"line_start":436,"line_end":436,"column_start":6,"column_end":21},"kind":{"Impl":{"id":1995}},"from":{"krate":0,"index":18936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":618817,"byte_end":618828,"line_start":16,"line_end":16,"column_start":26,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":2355},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624755,"byte_end":624767,"line_start":165,"line_end":165,"column_start":17,"column_end":29},"kind":{"Impl":{"id":2011}},"from":{"krate":0,"index":19104},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624789,"byte_end":624801,"line_start":166,"line_end":166,"column_start":19,"column_end":31},"kind":{"Impl":{"id":2012}},"from":{"krate":0,"index":19104},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624826,"byte_end":624838,"line_start":167,"line_end":167,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2013}},"from":{"krate":0,"index":19104},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":624865,"byte_end":624877,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"kind":{"Impl":{"id":2014}},"from":{"krate":0,"index":19104},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625407,"byte_end":625423,"line_start":181,"line_end":181,"column_start":17,"column_end":33},"kind":{"Impl":{"id":2033}},"from":{"krate":0,"index":19182},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625445,"byte_end":625461,"line_start":182,"line_end":182,"column_start":19,"column_end":35},"kind":{"Impl":{"id":2034}},"from":{"krate":0,"index":19182},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625486,"byte_end":625502,"line_start":183,"line_end":183,"column_start":22,"column_end":38},"kind":{"Impl":{"id":2035}},"from":{"krate":0,"index":19182},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":625529,"byte_end":625545,"line_start":184,"line_end":184,"column_start":24,"column_end":40},"kind":{"Impl":{"id":2036}},"from":{"krate":0,"index":19182},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626133,"byte_end":626150,"line_start":197,"line_end":197,"column_start":17,"column_end":34},"kind":{"Impl":{"id":2055}},"from":{"krate":0,"index":19268},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626172,"byte_end":626189,"line_start":198,"line_end":198,"column_start":19,"column_end":36},"kind":{"Impl":{"id":2056}},"from":{"krate":0,"index":19268},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626214,"byte_end":626231,"line_start":199,"line_end":199,"column_start":22,"column_end":39},"kind":{"Impl":{"id":2057}},"from":{"krate":0,"index":19268},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626258,"byte_end":626275,"line_start":200,"line_end":200,"column_start":24,"column_end":41},"kind":{"Impl":{"id":2058}},"from":{"krate":0,"index":19268},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626761,"byte_end":626777,"line_start":212,"line_end":212,"column_start":17,"column_end":33},"kind":{"Impl":{"id":2077}},"from":{"krate":0,"index":19354},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626799,"byte_end":626815,"line_start":213,"line_end":213,"column_start":19,"column_end":35},"kind":{"Impl":{"id":2078}},"from":{"krate":0,"index":19354},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626840,"byte_end":626856,"line_start":214,"line_end":214,"column_start":22,"column_end":38},"kind":{"Impl":{"id":2079}},"from":{"krate":0,"index":19354},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":626883,"byte_end":626899,"line_start":215,"line_end":215,"column_start":24,"column_end":40},"kind":{"Impl":{"id":2080}},"from":{"krate":0,"index":19354},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627390,"byte_end":627406,"line_start":227,"line_end":227,"column_start":17,"column_end":33},"kind":{"Impl":{"id":2099}},"from":{"krate":0,"index":19440},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627428,"byte_end":627444,"line_start":228,"line_end":228,"column_start":19,"column_end":35},"kind":{"Impl":{"id":2100}},"from":{"krate":0,"index":19440},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627469,"byte_end":627485,"line_start":229,"line_end":229,"column_start":22,"column_end":38},"kind":{"Impl":{"id":2101}},"from":{"krate":0,"index":19440},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627512,"byte_end":627528,"line_start":230,"line_end":230,"column_start":24,"column_end":40},"kind":{"Impl":{"id":2102}},"from":{"krate":0,"index":19440},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":627538,"byte_end":627554,"line_start":232,"line_end":232,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2103}},"from":{"krate":0,"index":19440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628554,"byte_end":628568,"line_start":256,"line_end":256,"column_start":17,"column_end":31},"kind":{"Impl":{"id":2122}},"from":{"krate":0,"index":19531},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628590,"byte_end":628604,"line_start":257,"line_end":257,"column_start":19,"column_end":33},"kind":{"Impl":{"id":2123}},"from":{"krate":0,"index":19531},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628629,"byte_end":628643,"line_start":258,"line_end":258,"column_start":22,"column_end":36},"kind":{"Impl":{"id":2124}},"from":{"krate":0,"index":19531},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":628670,"byte_end":628684,"line_start":259,"line_end":259,"column_start":24,"column_end":38},"kind":{"Impl":{"id":2125}},"from":{"krate":0,"index":19531},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629354,"byte_end":629372,"line_start":273,"line_end":273,"column_start":17,"column_end":35},"kind":{"Impl":{"id":2144}},"from":{"krate":0,"index":19617},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629394,"byte_end":629412,"line_start":274,"line_end":274,"column_start":19,"column_end":37},"kind":{"Impl":{"id":2145}},"from":{"krate":0,"index":19617},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629437,"byte_end":629455,"line_start":275,"line_end":275,"column_start":22,"column_end":40},"kind":{"Impl":{"id":2146}},"from":{"krate":0,"index":19617},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":629482,"byte_end":629500,"line_start":276,"line_end":276,"column_start":24,"column_end":42},"kind":{"Impl":{"id":2147}},"from":{"krate":0,"index":19617},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630121,"byte_end":630136,"line_start":289,"line_end":289,"column_start":17,"column_end":32},"kind":{"Impl":{"id":2166}},"from":{"krate":0,"index":19703},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630158,"byte_end":630173,"line_start":290,"line_end":290,"column_start":19,"column_end":34},"kind":{"Impl":{"id":2167}},"from":{"krate":0,"index":19703},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630198,"byte_end":630213,"line_start":291,"line_end":291,"column_start":22,"column_end":37},"kind":{"Impl":{"id":2168}},"from":{"krate":0,"index":19703},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630240,"byte_end":630255,"line_start":292,"line_end":292,"column_start":24,"column_end":39},"kind":{"Impl":{"id":2169}},"from":{"krate":0,"index":19703},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630939,"byte_end":630956,"line_start":306,"line_end":306,"column_start":17,"column_end":34},"kind":{"Impl":{"id":2188}},"from":{"krate":0,"index":19789},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":630978,"byte_end":630995,"line_start":307,"line_end":307,"column_start":19,"column_end":36},"kind":{"Impl":{"id":2189}},"from":{"krate":0,"index":19789},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631020,"byte_end":631037,"line_start":308,"line_end":308,"column_start":22,"column_end":39},"kind":{"Impl":{"id":2190}},"from":{"krate":0,"index":19789},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631064,"byte_end":631081,"line_start":309,"line_end":309,"column_start":24,"column_end":41},"kind":{"Impl":{"id":2191}},"from":{"krate":0,"index":19789},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631605,"byte_end":631627,"line_start":321,"line_end":321,"column_start":17,"column_end":39},"kind":{"Impl":{"id":2210}},"from":{"krate":0,"index":19875},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631649,"byte_end":631671,"line_start":322,"line_end":322,"column_start":19,"column_end":41},"kind":{"Impl":{"id":2211}},"from":{"krate":0,"index":19875},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631696,"byte_end":631718,"line_start":323,"line_end":323,"column_start":22,"column_end":44},"kind":{"Impl":{"id":2212}},"from":{"krate":0,"index":19875},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":631745,"byte_end":631767,"line_start":324,"line_end":324,"column_start":24,"column_end":46},"kind":{"Impl":{"id":2213}},"from":{"krate":0,"index":19875},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632293,"byte_end":632316,"line_start":336,"line_end":336,"column_start":17,"column_end":40},"kind":{"Impl":{"id":2232}},"from":{"krate":0,"index":19961},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632338,"byte_end":632361,"line_start":337,"line_end":337,"column_start":19,"column_end":42},"kind":{"Impl":{"id":2233}},"from":{"krate":0,"index":19961},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632386,"byte_end":632409,"line_start":338,"line_end":338,"column_start":22,"column_end":45},"kind":{"Impl":{"id":2234}},"from":{"krate":0,"index":19961},"to":{"krate":0,"index":2355}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632436,"byte_end":632459,"line_start":339,"line_end":339,"column_start":24,"column_end":47},"kind":{"Impl":{"id":2235}},"from":{"krate":0,"index":19961},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":632954,"byte_end":632976,"line_start":351,"line_end":351,"column_start":17,"column_end":39},"kind":{"Impl":{"id":2248}},"from":{"krate":0,"index":20047},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/pointer.rs","byte_start":633467,"byte_end":633488,"line_start":363,"line_end":363,"column_start":17,"column_end":38},"kind":{"Impl":{"id":2261}},"from":{"krate":0,"index":20115},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":638910,"byte_end":638916,"line_start":10,"line_end":10,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640576,"byte_end":640596,"line_start":55,"line_end":55,"column_start":17,"column_end":37},"kind":{"Impl":{"id":2273}},"from":{"krate":0,"index":20198},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":640624,"byte_end":640644,"line_start":56,"line_end":56,"column_start":25,"column_end":45},"kind":{"Impl":{"id":2274}},"from":{"krate":0,"index":20198},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641111,"byte_end":641124,"line_start":68,"line_end":68,"column_start":17,"column_end":30},"kind":{"Impl":{"id":2289}},"from":{"krate":0,"index":20264},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641152,"byte_end":641165,"line_start":69,"line_end":69,"column_start":25,"column_end":38},"kind":{"Impl":{"id":2290}},"from":{"krate":0,"index":20264},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641637,"byte_end":641654,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"kind":{"Impl":{"id":2305}},"from":{"krate":0,"index":20338},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":641682,"byte_end":641699,"line_start":82,"line_end":82,"column_start":25,"column_end":42},"kind":{"Impl":{"id":2306}},"from":{"krate":0,"index":20338},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642150,"byte_end":642164,"line_start":94,"line_end":94,"column_start":17,"column_end":31},"kind":{"Impl":{"id":2321}},"from":{"krate":0,"index":20412},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642192,"byte_end":642206,"line_start":95,"line_end":95,"column_start":25,"column_end":39},"kind":{"Impl":{"id":2322}},"from":{"krate":0,"index":20412},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642756,"byte_end":642768,"line_start":109,"line_end":109,"column_start":17,"column_end":29},"kind":{"Impl":{"id":2337}},"from":{"krate":0,"index":20486},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":642796,"byte_end":642808,"line_start":110,"line_end":110,"column_start":25,"column_end":37},"kind":{"Impl":{"id":2338}},"from":{"krate":0,"index":20486},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643282,"byte_end":643300,"line_start":122,"line_end":122,"column_start":17,"column_end":35},"kind":{"Impl":{"id":2353}},"from":{"krate":0,"index":20560},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643328,"byte_end":643346,"line_start":123,"line_end":123,"column_start":25,"column_end":43},"kind":{"Impl":{"id":2354}},"from":{"krate":0,"index":20560},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643814,"byte_end":643832,"line_start":135,"line_end":135,"column_start":17,"column_end":35},"kind":{"Impl":{"id":2369}},"from":{"krate":0,"index":20634},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/progress.rs","byte_start":643860,"byte_end":643878,"line_start":136,"line_end":136,"column_start":25,"column_end":43},"kind":{"Impl":{"id":2370}},"from":{"krate":0,"index":20634},"to":{"krate":0,"index":2495}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":645795,"byte_end":645811,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2383}},"from":{"krate":0,"index":20708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647178,"byte_end":647194,"line_start":55,"line_end":55,"column_start":17,"column_end":33},"kind":{"Impl":{"id":2384}},"from":{"krate":0,"index":20708},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":647768,"byte_end":647784,"line_start":69,"line_end":69,"column_start":17,"column_end":33},"kind":{"Impl":{"id":2397}},"from":{"krate":0,"index":20791},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648296,"byte_end":648311,"line_start":82,"line_end":82,"column_start":17,"column_end":32},"kind":{"Impl":{"id":2410}},"from":{"krate":0,"index":20859},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":648914,"byte_end":648931,"line_start":99,"line_end":99,"column_start":6,"column_end":23},"kind":{"Impl":{"id":2411}},"from":{"krate":0,"index":20927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":649512,"byte_end":649529,"line_start":114,"line_end":114,"column_start":25,"column_end":42},"kind":{"Impl":{"id":2412}},"from":{"krate":0,"index":20927},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":650527,"byte_end":650533,"line_start":138,"line_end":138,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1159},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653566,"byte_end":653584,"line_start":212,"line_end":212,"column_start":24,"column_end":42},"kind":{"Impl":{"id":2425}},"from":{"krate":0,"index":20966},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/socket.rs","byte_start":653641,"byte_end":653659,"line_start":216,"line_end":216,"column_start":17,"column_end":35},"kind":{"Impl":{"id":2426}},"from":{"krate":0,"index":20966},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/slot.rs","byte_start":654974,"byte_end":654989,"line_start":15,"line_end":15,"column_start":17,"column_end":32},"kind":{"Impl":{"id":2439}},"from":{"krate":0,"index":21034},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":655441,"byte_end":655449,"line_start":11,"line_end":11,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1180},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658833,"byte_end":658843,"line_start":102,"line_end":102,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2453}},"from":{"krate":0,"index":21137},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658865,"byte_end":658875,"line_start":103,"line_end":103,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2454}},"from":{"krate":0,"index":21137},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":658900,"byte_end":658910,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2455}},"from":{"krate":0,"index":21137},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659394,"byte_end":659403,"line_start":117,"line_end":117,"column_start":17,"column_end":26},"kind":{"Impl":{"id":2472}},"from":{"krate":0,"index":21209},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659425,"byte_end":659434,"line_start":118,"line_end":118,"column_start":19,"column_end":28},"kind":{"Impl":{"id":2473}},"from":{"krate":0,"index":21209},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":659459,"byte_end":659468,"line_start":119,"line_end":119,"column_start":22,"column_end":31},"kind":{"Impl":{"id":2474}},"from":{"krate":0,"index":21209},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660047,"byte_end":660057,"line_start":134,"line_end":134,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2491}},"from":{"krate":0,"index":21289},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660079,"byte_end":660089,"line_start":135,"line_end":135,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2492}},"from":{"krate":0,"index":21289},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660114,"byte_end":660124,"line_start":136,"line_end":136,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2493}},"from":{"krate":0,"index":21289},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660704,"byte_end":660714,"line_start":151,"line_end":151,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2510}},"from":{"krate":0,"index":21369},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660736,"byte_end":660746,"line_start":152,"line_end":152,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2511}},"from":{"krate":0,"index":21369},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":660771,"byte_end":660781,"line_start":153,"line_end":153,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2512}},"from":{"krate":0,"index":21369},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661267,"byte_end":661275,"line_start":166,"line_end":166,"column_start":17,"column_end":25},"kind":{"Impl":{"id":2529}},"from":{"krate":0,"index":21449},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661297,"byte_end":661305,"line_start":167,"line_end":167,"column_start":19,"column_end":27},"kind":{"Impl":{"id":2530}},"from":{"krate":0,"index":21449},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661330,"byte_end":661338,"line_start":168,"line_end":168,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2531}},"from":{"krate":0,"index":21449},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661914,"byte_end":661925,"line_start":182,"line_end":182,"column_start":17,"column_end":28},"kind":{"Impl":{"id":2548}},"from":{"krate":0,"index":21529},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661947,"byte_end":661958,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"kind":{"Impl":{"id":2549}},"from":{"krate":0,"index":21529},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":661983,"byte_end":661994,"line_start":184,"line_end":184,"column_start":22,"column_end":33},"kind":{"Impl":{"id":2550}},"from":{"krate":0,"index":21529},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662487,"byte_end":662497,"line_start":197,"line_end":197,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2567}},"from":{"krate":0,"index":21609},"to":{"krate":0,"index":1159}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662519,"byte_end":662529,"line_start":198,"line_end":198,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2568}},"from":{"krate":0,"index":21609},"to":{"krate":0,"index":1180}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/events/touch.rs","byte_start":662554,"byte_end":662564,"line_start":199,"line_end":199,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2569}},"from":{"krate":0,"index":21609},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/parent_node.rs","byte_start":665592,"byte_end":665605,"line_start":15,"line_end":15,"column_start":24,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":2601}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/non_element_parent_node.rs","byte_start":670086,"byte_end":670099,"line_start":10,"line_end":10,"column_start":34,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":2607}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":673463,"byte_end":673477,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2579}},"from":{"krate":0,"index":21736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674404,"byte_end":674418,"line_start":47,"line_end":47,"column_start":23,"column_end":37},"kind":{"Impl":{"id":2580}},"from":{"krate":0,"index":21736},"to":{"krate":2,"index":3883}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/html_collection.rs","byte_start":674990,"byte_end":675001,"line_start":79,"line_end":79,"column_start":19,"column_end":30},"kind":{"Impl":{"id":2581}},"from":{"krate":0,"index":21806},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/child_node.rs","byte_start":675602,"byte_end":675615,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":2634}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":676592,"byte_end":676610,"line_start":23,"line_end":23,"column_start":25,"column_end":43},"kind":{"Impl":{"id":2582}},"from":{"krate":0,"index":21816},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":677361,"byte_end":677374,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2592}},"from":{"krate":0,"index":21832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/gamepad.rs","byte_start":678807,"byte_end":678814,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2602}},"from":{"krate":0,"index":21907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":684391,"byte_end":684400,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2612}},"from":{"krate":0,"index":22025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/selection.rs","byte_start":696418,"byte_end":696423,"line_start":309,"line_end":309,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2622}},"from":{"krate":0,"index":22272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/slotable.rs","byte_start":701098,"byte_end":701111,"line_start":9,"line_end":9,"column_start":22,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":893},"to":{"krate":0,"index":2710}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":703484,"byte_end":703498,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2623}},"from":{"krate":0,"index":22367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704193,"byte_end":704203,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"kind":{"Impl":{"id":2639}},"from":{"krate":0,"index":22383},"to":{"krate":0,"index":1203}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704222,"byte_end":704232,"line_start":41,"line_end":41,"column_start":16,"column_end":26},"kind":{"Impl":{"id":2640}},"from":{"krate":0,"index":22383},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704257,"byte_end":704267,"line_start":42,"line_end":42,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2641}},"from":{"krate":0,"index":22383},"to":{"krate":0,"index":2601}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/shadow_root.rs","byte_start":704277,"byte_end":704287,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2642}},"from":{"krate":0,"index":22383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709006,"byte_end":709019,"line_start":37,"line_end":37,"column_start":27,"column_end":40},"kind":{"Impl":{"id":2652}},"from":{"krate":0,"index":22531},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709441,"byte_end":709447,"line_start":51,"line_end":51,"column_start":27,"column_end":33},"kind":{"Impl":{"id":2653}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/webapi/form_data.rs","byte_start":709933,"byte_end":709941,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2654}},"from":{"krate":0,"index":22471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":717605,"byte_end":717614,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"kind":{"Impl":{"id":2655}},"from":{"krate":0,"index":3494},"to":{"krate":15,"index":1636}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":717825,"byte_end":717834,"line_start":39,"line_end":39,"column_start":36,"column_end":45},"kind":{"Impl":{"id":2656}},"from":{"krate":0,"index":3494},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718021,"byte_end":718037,"line_start":43,"line_end":43,"column_start":40,"column_end":56},"kind":{"Impl":{"id":2657}},"from":{"krate":0,"index":2804},"to":{"krate":15,"index":1275}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718469,"byte_end":718473,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"kind":{"Impl":{"id":2658}},"from":{"krate":0,"index":3516},"to":{"krate":15,"index":1636}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718679,"byte_end":718683,"line_start":66,"line_end":66,"column_start":36,"column_end":40},"kind":{"Impl":{"id":2659}},"from":{"krate":0,"index":3516},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":718865,"byte_end":718876,"line_start":70,"line_end":70,"column_start":40,"column_end":51},"kind":{"Impl":{"id":2660}},"from":{"krate":0,"index":2819},"to":{"krate":15,"index":1275}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719283,"byte_end":719289,"line_start":86,"line_end":86,"column_start":20,"column_end":26},"kind":{"Impl":{"id":2661}},"from":{"krate":0,"index":4288},"to":{"krate":15,"index":1636}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719634,"byte_end":719640,"line_start":96,"line_end":96,"column_start":36,"column_end":42},"kind":{"Impl":{"id":2662}},"from":{"krate":0,"index":4288},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":719824,"byte_end":719837,"line_start":100,"line_end":100,"column_start":40,"column_end":53},"kind":{"Impl":{"id":2663}},"from":{"krate":0,"index":2834},"to":{"krate":15,"index":1275}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":721558,"byte_end":721563,"line_start":152,"line_end":152,"column_start":20,"column_end":25},"kind":{"Impl":{"id":2664}},"from":{"krate":0,"index":3565},"to":{"krate":15,"index":1636}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":723230,"byte_end":723235,"line_start":187,"line_end":187,"column_start":36,"column_end":41},"kind":{"Impl":{"id":2665}},"from":{"krate":0,"index":3565},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":723418,"byte_end":723430,"line_start":191,"line_end":191,"column_start":40,"column_end":52},"kind":{"Impl":{"id":2666}},"from":{"krate":0,"index":2868},"to":{"krate":15,"index":1275}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728065,"byte_end":728080,"line_start":321,"line_end":321,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2667}},"from":{"krate":0,"index":22653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728231,"byte_end":728246,"line_start":329,"line_end":329,"column_start":23,"column_end":38},"kind":{"Impl":{"id":2668}},"from":{"krate":0,"index":22653},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728462,"byte_end":728477,"line_start":336,"line_end":336,"column_start":23,"column_end":38},"kind":{"Impl":{"id":2669}},"from":{"krate":0,"index":22653},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":728842,"byte_end":728857,"line_start":346,"line_end":346,"column_start":21,"column_end":36},"kind":{"Impl":{"id":2670}},"from":{"krate":0,"index":22653},"to":{"krate":15,"index":8641}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729050,"byte_end":729065,"line_start":354,"line_end":354,"column_start":20,"column_end":35},"kind":{"Impl":{"id":2671}},"from":{"krate":0,"index":22653},"to":{"krate":15,"index":8043}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729280,"byte_end":729295,"line_start":362,"line_end":362,"column_start":42,"column_end":57},"kind":{"Impl":{"id":2672}},"from":{"krate":0,"index":22653},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729509,"byte_end":729524,"line_start":370,"line_end":370,"column_start":41,"column_end":56},"kind":{"Impl":{"id":2673}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":729984,"byte_end":729994,"line_start":384,"line_end":384,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2674}},"from":{"krate":0,"index":22666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":735754,"byte_end":735766,"line_start":569,"line_end":569,"column_start":28,"column_end":40},"kind":{"Impl":{"id":2675}},"from":{"krate":0,"index":22669},"to":{"krate":15,"index":1690}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736160,"byte_end":736172,"line_start":585,"line_end":585,"column_start":30,"column_end":42},"kind":{"Impl":{"id":2676}},"from":{"krate":0,"index":22669},"to":{"krate":15,"index":1696}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736570,"byte_end":736582,"line_start":600,"line_end":600,"column_start":36,"column_end":48},"kind":{"Impl":{"id":2677}},"from":{"krate":0,"index":22669},"to":{"krate":15,"index":1702}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":736951,"byte_end":736972,"line_start":613,"line_end":613,"column_start":37,"column_end":58},"kind":{"Impl":{"id":2678}},"from":{"krate":0,"index":22673},"to":{"krate":15,"index":1708}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":737454,"byte_end":737466,"line_start":629,"line_end":629,"column_start":28,"column_end":40},"kind":{"Impl":{"id":2679}},"from":{"krate":0,"index":22678},"to":{"krate":15,"index":1714}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":738850,"byte_end":738862,"line_start":667,"line_end":667,"column_start":31,"column_end":43},"kind":{"Impl":{"id":2680}},"from":{"krate":0,"index":22678},"to":{"krate":15,"index":1725}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":739305,"byte_end":739327,"line_start":681,"line_end":681,"column_start":38,"column_end":60},"kind":{"Impl":{"id":2681}},"from":{"krate":0,"index":22683},"to":{"krate":15,"index":1732}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":740204,"byte_end":740210,"line_start":709,"line_end":709,"column_start":41,"column_end":47},"kind":{"Impl":{"id":2682}},"from":{"krate":0,"index":4288},"to":{"krate":15,"index":1213}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":741218,"byte_end":741223,"line_start":741,"line_end":741,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2683}},"from":{"krate":0,"index":3565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":742508,"byte_end":742513,"line_start":774,"line_end":774,"column_start":41,"column_end":46},"kind":{"Impl":{"id":2684}},"from":{"krate":0,"index":3565},"to":{"krate":15,"index":1213}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":747224,"byte_end":747240,"line_start":894,"line_end":894,"column_start":39,"column_end":55},"kind":{"Impl":{"id":2685}},"from":{"krate":0,"index":3045},"to":{"krate":15,"index":1387}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":747739,"byte_end":747758,"line_start":909,"line_end":909,"column_start":42,"column_end":61},"kind":{"Impl":{"id":2686}},"from":{"krate":0,"index":3055},"to":{"krate":15,"index":1395}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":749952,"byte_end":749967,"line_start":959,"line_end":959,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2687}},"from":{"krate":0,"index":3067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":750131,"byte_end":750146,"line_start":967,"line_end":967,"column_start":41,"column_end":56},"kind":{"Impl":{"id":2688}},"from":{"krate":0,"index":3067},"to":{"krate":15,"index":1213}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":750992,"byte_end":751007,"line_start":993,"line_end":993,"column_start":38,"column_end":53},"kind":{"Impl":{"id":2689}},"from":{"krate":0,"index":3067},"to":{"krate":15,"index":1331}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":751645,"byte_end":751660,"line_start":1016,"line_end":1016,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2690}},"from":{"krate":0,"index":3082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":751860,"byte_end":751875,"line_start":1025,"line_end":1025,"column_start":38,"column_end":53},"kind":{"Impl":{"id":2691}},"from":{"krate":0,"index":3082},"to":{"krate":15,"index":1349}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":752811,"byte_end":752826,"line_start":1053,"line_end":1053,"column_start":41,"column_end":56},"kind":{"Impl":{"id":2692}},"from":{"krate":0,"index":3082},"to":{"krate":15,"index":1213}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":758925,"byte_end":758930,"line_start":1248,"line_end":1248,"column_start":38,"column_end":43},"kind":{"Impl":{"id":2693}},"from":{"krate":0,"index":3104},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759112,"byte_end":759117,"line_start":1255,"line_end":1255,"column_start":38,"column_end":43},"kind":{"Impl":{"id":2694}},"from":{"krate":0,"index":3104},"to":{"krate":0,"index":434}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759353,"byte_end":759358,"line_start":1263,"line_end":1263,"column_start":48,"column_end":53},"kind":{"Impl":{"id":2695}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759572,"byte_end":759577,"line_start":1271,"line_end":1271,"column_start":56,"column_end":61},"kind":{"Impl":{"id":2696}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":759799,"byte_end":759804,"line_start":1279,"line_end":1279,"column_start":60,"column_end":65},"kind":{"Impl":{"id":2697}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":760027,"byte_end":760032,"line_start":1287,"line_end":1287,"column_start":57,"column_end":62},"kind":{"Impl":{"id":2698}},"from":{"krate":0,"index":3104},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde.rs","byte_start":760262,"byte_end":760268,"line_start":1295,"line_end":1295,"column_start":57,"column_end":63},"kind":{"Impl":{"id":2699}},"from":{"krate":2,"index":29294},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/ecosystem/serde_json.rs","byte_start":770618,"byte_end":770623,"line_start":7,"line_end":7,"column_start":31,"column_end":36},"kind":{"Impl":{"id":2701}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17446,"byte_end":17450,"line_start":601,"line_end":601,"column_start":32,"column_end":36},"kind":{"Impl":{"id":2702}},"from":{"krate":0,"index":22915},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/Users/patrickmoody/.cargo/registry/src/github.com-1ecc6299db9ec823/stdweb-0.4.20/src/lib.rs","byte_start":17617,"byte_end":17621,"line_start":607,"line_end":607,"column_start":32,"column_end":36},"kind":{"Impl":{"id":2703}},"from":{"krate":0,"index":22915},"to":{"krate":1,"index":1616}}]}